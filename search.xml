<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>composition-api 与 2.x API 的区别</title>
      <link href="/composition-api-%E4%B8%8E-2-x-API-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/composition-api-%E4%B8%8E-2-x-API-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>最快的学习方法就是通过比较，跟自己熟悉的作比较，快速看出差异，能更好的了解 composition-api。</p><h3 id="简单的计数器"><a href="#简单的计数器" class="headerlink" title="简单的计数器"></a>简单的计数器</h3><p>标准 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    Count is &#123;&#123; count &#125;&#125;, count * 2 is &#123;&#123; double &#125;&#125;</span><br><span class="line">    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    increment() &#123;</span><br><span class="line">      this.count++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    double() &#123;</span><br><span class="line">      return this.count * 2</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>函数 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    Count is &#123;&#123; count &#125;&#125;, count * 2 is &#123;&#123; double &#125;&#125;</span><br><span class="line">    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, computed &#125; from &apos;vue&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const count = ref(0)</span><br><span class="line">    const double = computed(() =&gt; count.value * 2)</span><br><span class="line">    const increment = () =&gt; &#123; count.value++ &#125;</span><br><span class="line">    return &#123;</span><br><span class="line">      count,</span><br><span class="line">      double,</span><br><span class="line">      increment</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="根据传入的值，请求数据"><a href="#根据传入的值，请求数据" class="headerlink" title="根据传入的值，请求数据"></a>根据传入的值，请求数据</h3><p>标准 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;template v-if=&quot;isLoading&quot;&gt;Loading...&lt;/template&gt;</span><br><span class="line">    &lt;template v-else&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; post.body &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; fetchPost &#125; from &apos;./api&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    id: Number</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isLoading: true,</span><br><span class="line">      post: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.fetchPost()</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    id: &apos;fetchPost&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async fetchPost() &#123;</span><br><span class="line">      this.isLoading = true</span><br><span class="line">      this.post = await fetchPost(this.id)</span><br><span class="line">      this.isLoading = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>函数 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;template v-if=&quot;isLoading&quot;&gt;Loading...&lt;/template&gt;</span><br><span class="line">    &lt;template v-else&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; post.body &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, watch &#125; from &apos;vue&apos;</span><br><span class="line">import &#123; fetchPost &#125; from &apos;./api&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup(props) &#123;</span><br><span class="line">    const isLoading = ref(true)</span><br><span class="line">    const post = ref(null)</span><br><span class="line"></span><br><span class="line">    watch(() =&gt; props.id, async (id) =&gt; &#123;</span><br><span class="line">      isLoading.value = true</span><br><span class="line">      post.value = await fetchPost(id)</span><br><span class="line">      isLoading.value = false</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    return &#123;</span><br><span class="line">      isLoading,</span><br><span class="line">      post</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="多个逻辑"><a href="#多个逻辑" class="headerlink" title="多个逻辑"></a>多个逻辑</h3><p>基于前一个获取数据的例子，在此基础上新增展示鼠标的位置功能</p><p>标准 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;template v-if=&quot;isLoading&quot;&gt;Loading...&lt;/template&gt;</span><br><span class="line">    &lt;template v-else&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; post.body &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;div&gt;Mouse is at &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; fetchPost &#125; from &apos;./api&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    id: Number</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isLoading: true,</span><br><span class="line">      post: null,</span><br><span class="line">      x: 0,</span><br><span class="line">      y: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.fetchPost()</span><br><span class="line">    window.addEventListener(&apos;mousemove&apos;, this.updateMouse)</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    id: &apos;fetchPost&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  destroyed() &#123;</span><br><span class="line">    window.removeEventListener(&apos;mousemove&apos;, this.updateMouse)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async fetchPost() &#123;</span><br><span class="line">      this.isLoading = true</span><br><span class="line">      this.post = await fetchPost(this.id)</span><br><span class="line">      this.isLoading = false</span><br><span class="line">    &#125;,</span><br><span class="line">    updateMouse(e) &#123;</span><br><span class="line">      this.x = e.pageX</span><br><span class="line">      this.y = e.pageY</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>页面上只有两个逻辑，获取数据和展示鼠标位置，但是这两个逻辑相关的函数分散的在组件的选项中。</p><p>使用函数 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;template v-if=&quot;isLoading&quot;&gt;Loading...&lt;/template&gt;</span><br><span class="line">    &lt;template v-else&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; post.body &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;div&gt;Mouse is at &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, watch, onMounted, onUnmounted &#125; from &apos;vue&apos;</span><br><span class="line">import &#123; fetchPost &#125; from &apos;./api&apos;</span><br><span class="line"></span><br><span class="line">function useFetch(props) &#123;</span><br><span class="line">  const isLoading = ref(true)</span><br><span class="line">  const post = ref(null)</span><br><span class="line"></span><br><span class="line">  watch(() =&gt; props.id, async (id) =&gt; &#123;</span><br><span class="line">    isLoading.value = true</span><br><span class="line">    post.value = await fetchPost(id)</span><br><span class="line">    isLoading.value = false</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  return &#123;</span><br><span class="line">    isLoading,</span><br><span class="line">    post</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function useMouse() &#123;</span><br><span class="line">  const x = value(0)</span><br><span class="line">  const y = value(0)</span><br><span class="line">  const update = e =&gt; &#123;</span><br><span class="line">    x.value = e.pageX</span><br><span class="line">    y.value = e.pageY</span><br><span class="line">  &#125;</span><br><span class="line">  onMounted(() =&gt; &#123;</span><br><span class="line">    window.addEventListener(&apos;mousemove&apos;, update)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUnmounted(() =&gt; &#123;</span><br><span class="line">    window.removeEventListener(&apos;mousemove&apos;, update)</span><br><span class="line">  &#125;)</span><br><span class="line">  return &#123; x, y &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  setup(props) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      ...useFetch(props),</span><br><span class="line">      ...useMouse()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>使用 函数 API，代码逻辑相对于选项来说组织的更清晰。</p><p>更多例子查看 <a href="https://gist.github.com/yyx990803/762ec427882a61be3e4affe02f8af555" target="_blank" rel="noopener">this gist</a>.</p><h4 id="两种-API-混合使用"><a href="#两种-API-混合使用" class="headerlink" title="两种 API 混合使用"></a>两种 API 混合使用</h4><p>可以在 <code>setup</code> 中封装一个逻辑，然后在标准 API 中使用，下面例子中，鼠标相关的逻辑是通过函数 API 实现的，获取数据逻辑是通过标准 API 实现的。</p><p>_当 _<code>_setup_</code>  与 标准 API 一起使用时， <code>setup</code> 首先会先执行，如果与标准 API 中 data 里的属性有冲突，会覆盖。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;template v-if=&quot;isLoading&quot;&gt;Loading...&lt;/template&gt;</span><br><span class="line">    &lt;template v-else&gt;</span><br><span class="line">      &lt;h3&gt;&#123;&#123; post.title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; post.body &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;div&gt;Mouse is at &#123;&#123; x &#125;&#125;, &#123;&#123; y &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, onMounted, onUnmounted &#125; from &apos;vue&apos;</span><br><span class="line">import &#123; fetchPost &#125; from &apos;./api&apos;</span><br><span class="line"></span><br><span class="line">function useMouse() &#123;</span><br><span class="line">  const x = ref(0)</span><br><span class="line">  const y = ref(0)</span><br><span class="line">  const update = e =&gt; &#123;</span><br><span class="line">    x.value = e.pageX</span><br><span class="line">    y.value = e.pageY</span><br><span class="line">  &#125;</span><br><span class="line">  onMounted(() =&gt; &#123;</span><br><span class="line">    window.addEventListener(&apos;mousemove&apos;, update)</span><br><span class="line">  &#125;)</span><br><span class="line">  onUnmounted(() =&gt; &#123;</span><br><span class="line">    window.removeEventListener(&apos;mousemove&apos;, update)</span><br><span class="line">  &#125;)</span><br><span class="line">  return &#123; x, y &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    id: Number</span><br><span class="line">  &#125;,</span><br><span class="line">  setup(props) &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      ...useMouse()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isLoading: true,</span><br><span class="line">      post: null,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.fetchPost()</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    id: &apos;fetchPost&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async fetchPost() &#123;</span><br><span class="line">      this.isLoading = true</span><br><span class="line">      this.post = await fetchPost(this.id)</span><br><span class="line">      this.isLoading = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>vue rfcs: comparison with 2.x API<br><a href="https://github.com/vuejs/rfcs/blob/function-apis/active-rfcs/0000-function-api.md#comparison-with-2x-api" target="_blank" rel="noopener">https://github.com/vuejs/rfcs/blob/function-apis/active-rfcs/0000-function-api.md#comparison-with-2x-api</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue computed 实现原理</title>
      <link href="/Vue-computed-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
      <url>/Vue-computed-%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>Q：Vue 的 computed 对象中的值，什么时候重算？缓存机制是如何实现的？</p><p>结论</p><p>首先 vue 初始化过程中，会执行 initComputed，遍历 computed 对象中的每个 key，对每个属性进行 new Watcher 操作，这里的 new Watcher 与 data 中的 new Watcher 传参不同，这里传入 { lazy: true } 参数，将 Watcher 内部的 dirty 设成 true，然后将 computed 的属性定义到 vm 上（也就是 this 上），computed 对应属性的值进行 getter 处理，获取对应的 watcher，判断 watcher 上 dirty 值是否为 true，如果为 true，执行 watcher 的 evaluate 重新计算，执行 evaluate 后会将 dirty 设成 false，后续读取 computed 中的值则不会重新计算。如果 computed 中的依赖项发生变化，其中的依赖项会触发 Object.definedProperty 的 setter，进而触发 notify， notify 触发 watcher 的 update，执行 update 后会将 dirty 设成 ture，因此，再次读取 computed 中属性值时会重新计算。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*---------------------------------------- Dep ------------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 标识当前的 Dep id</span></span><br><span class="line"><span class="keyword">let</span> uidep = <span class="number">0</span></span><br><span class="line"><span class="comment">// Dep 类 用于处理依赖相关</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dep</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>.id = uidep++</span><br><span class="line">    <span class="comment">// 存放所有的监听 watcher</span></span><br><span class="line">    <span class="keyword">this</span>.subs = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加一个观察者对象</span></span><br><span class="line">  addSub(Watcher) &#123;</span><br><span class="line">    <span class="keyword">this</span>.subs.push(Watcher)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 依赖收集</span></span><br><span class="line">  depend() &#123;</span><br><span class="line">    <span class="comment">// Dep.target 作用只有需要的才会收集依赖</span></span><br><span class="line">    <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">      Dep.target.addDep(<span class="keyword">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 调用依赖收集的 Watcher 更新</span></span><br><span class="line">  notify() &#123;</span><br><span class="line">    <span class="keyword">const</span> subs = <span class="keyword">this</span>.subs.slice()</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, l = subs.length; i &lt; l; i++) &#123;</span><br><span class="line">      subs[i].update()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当前的 target watcher 将被执行，</span></span><br><span class="line"><span class="comment">// 全局唯一且同一时间只能执行同一个 watcher</span></span><br><span class="line">Dep.target = <span class="literal">null</span></span><br><span class="line"><span class="keyword">const</span> targetStack = []</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为 Dep.target 赋值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushTarget</span>(<span class="params">Watcher</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (Dep.target) targetStack.push(Dep.target)</span><br><span class="line">  Dep.target = Watcher</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">popTarget</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  Dep.target = targetStack.pop()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*--------------------------------------- Watcher -----------------------------------*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 去重 防止重复收集</span></span><br><span class="line"><span class="keyword">let</span> uid = <span class="number">0</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Watcher</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(vm, expOrFn, cb, options) &#123;</span><br><span class="line">    <span class="comment">// 传进来的 vue 实例，例如 Vue 组件</span></span><br><span class="line">    <span class="keyword">this</span>.vm = vm</span><br><span class="line">    <span class="keyword">if</span> (options) &#123;</span><br><span class="line">      <span class="keyword">this</span>.deep = !!options.deep</span><br><span class="line">      <span class="keyword">this</span>.user = !!options.user</span><br><span class="line">      <span class="keyword">this</span>.lazy = !!options.lazy</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.deep = <span class="keyword">this</span>.user = <span class="keyword">this</span>.lazy = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// dirty 后面会用于判断 computed 是否重算</span></span><br><span class="line">    <span class="keyword">this</span>.dirty = <span class="keyword">this</span>.lazy</span><br><span class="line">    <span class="comment">// 在 Vue 中 cb 是更新视图的核心，调用 diff 并更新视图的过程</span></span><br><span class="line">    <span class="keyword">this</span>.cb = cb</span><br><span class="line">    <span class="keyword">this</span>.id = ++uid</span><br><span class="line">    <span class="keyword">this</span>.deps = []</span><br><span class="line">    <span class="keyword">this</span>.newDeps = []</span><br><span class="line">    <span class="keyword">this</span>.depIds = <span class="keyword">new</span> <span class="built_in">Set</span>()</span><br><span class="line">    <span class="keyword">this</span>.newDepIds = <span class="keyword">new</span> <span class="built_in">Set</span>()</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> expOrFn === <span class="string">'function'</span>) &#123;</span><br><span class="line">      <span class="comment">// data 依赖收集走此处</span></span><br><span class="line">      <span class="keyword">this</span>.getter = expOrFn</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// watch 依赖走此处</span></span><br><span class="line">      <span class="keyword">this</span>.getter = <span class="keyword">this</span>.parsePath(expOrFn)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置Dep.target 的值，依赖收集时的 watcher 对象</span></span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.lazy ? <span class="literal">undefined</span> : <span class="keyword">this</span>.get()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span>() &#123;</span><br><span class="line">    <span class="comment">// 设置 Dep.target 值，用以依赖收集</span></span><br><span class="line">    pushTarget(<span class="keyword">this</span>)</span><br><span class="line">    <span class="keyword">const</span> vm = <span class="keyword">this</span>.vm</span><br><span class="line">    <span class="comment">// 此处会进行依赖收集 会调用 data 数据的 get</span></span><br><span class="line">    <span class="keyword">let</span> value = <span class="keyword">this</span>.getter.call(vm, vm)</span><br><span class="line">    popTarget()</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加依赖</span></span><br><span class="line">  addDep(dep) &#123;</span><br><span class="line">    <span class="comment">// 去重</span></span><br><span class="line">    <span class="keyword">const</span> id = dep.id</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.newDepIds.has(id)) &#123;</span><br><span class="line">      <span class="keyword">this</span>.newDepIds.add(id)</span><br><span class="line">      <span class="keyword">this</span>.newDeps.push(dep)</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.depIds.has(id)) &#123;</span><br><span class="line">        <span class="comment">// 收集 watcher 每次 data 数据</span></span><br><span class="line">        <span class="comment">// set 时会遍历收集的 watcher 依赖进行相应视图更新或执行watch监听函数等操作</span></span><br><span class="line">        dep.addSub(<span class="keyword">this</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新</span></span><br><span class="line">  update() &#123;</span><br><span class="line">    <span class="comment">// 在 初始化 computed 时 lazy 必为 true，也就是 dirty 必为 true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.lazy) &#123;</span><br><span class="line">      <span class="keyword">this</span>.dirty = <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.run()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新视图</span></span><br><span class="line">  run() &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`这里会去执行Vue的diff相关方法，进而更新数据`</span>)</span><br><span class="line">    <span class="keyword">const</span> value = <span class="keyword">this</span>.get()</span><br><span class="line">    <span class="keyword">const</span> oldValue = <span class="keyword">this</span>.value</span><br><span class="line">    <span class="keyword">this</span>.value = value</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.user) &#123;</span><br><span class="line">      <span class="comment">// watch 监听走此处</span></span><br><span class="line">      <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldValue)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// data 监听走此处</span></span><br><span class="line">      <span class="comment">// 这里只做简单的 console.log 处理，在 Vue 中会调用 diff 过程从而更新视图</span></span><br><span class="line">      <span class="keyword">this</span>.cb.call(<span class="keyword">this</span>.vm, value, oldValue)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果计算熟悉依赖的 data 值发生变化时会调用</span></span><br><span class="line">  <span class="comment">// 案例中 当 data.name 值发生变化时会执行此方法</span></span><br><span class="line">  evaluate() &#123;</span><br><span class="line">    <span class="keyword">this</span>.value = <span class="keyword">this</span>.get()</span><br><span class="line">    <span class="keyword">this</span>.dirty = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//收集依赖</span></span><br><span class="line">  depend() &#123;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="keyword">this</span>.deps.length</span><br><span class="line">    <span class="keyword">while</span> (i--) &#123;</span><br><span class="line">      <span class="keyword">this</span>.deps[i].depend()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此方法获得每个 watch 中 key 在 data 中对应的 value 值</span></span><br><span class="line">  <span class="comment">// 使用 split('.') 是为了得到 像 'a.b.c' 这样的监听值</span></span><br><span class="line">  parsePath(path) &#123;</span><br><span class="line">    <span class="keyword">const</span> bailRE = <span class="regexp">/[^w.$]/</span></span><br><span class="line">    <span class="keyword">if</span> (bailRE.test(path)) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">const</span> segments = path.split(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; segments.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!obj) <span class="keyword">return</span></span><br><span class="line">        <span class="comment">// 此处为了兼容我的代码做了一点修改</span></span><br><span class="line">        <span class="comment">// 此处使用新获得的值覆盖传入的值 因此能够处理 'a.b.c'这样的监听方式</span></span><br><span class="line">        <span class="keyword">if</span> (i === <span class="number">0</span>) &#123;</span><br><span class="line">          obj = obj.data[segments[i]]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          obj = obj[segments[i]]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> obj</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*--------------------------------------- Observer -----------------------------------*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(value) &#123;</span><br><span class="line">    <span class="keyword">this</span>.value = value</span><br><span class="line">    <span class="comment">// 增加 dep 属性（处理数组时可以直接调用）</span></span><br><span class="line">    <span class="keyword">this</span>.dep = <span class="keyword">new</span> Dep()</span><br><span class="line">    <span class="comment">// 将 Observer 实例绑定到 data 的 __ob__ 属性上面去，后期如果 oberve 时直接使用，不需要重新 Observer,</span></span><br><span class="line">    <span class="comment">// 处理数组是也可直接获取Observer对象</span></span><br><span class="line">    def(value, <span class="string">'__ob__'</span>, <span class="keyword">this</span>)</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(value)) &#123;</span><br><span class="line">      <span class="comment">// 这里只测试对象</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 处理对象</span></span><br><span class="line">      <span class="keyword">this</span>.walk(value)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  walk(obj) &#123;</span><br><span class="line">    <span class="keyword">const</span> keys = <span class="built_in">Object</span>.keys(obj)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; keys.length; i++) &#123;</span><br><span class="line">      <span class="comment">// 此处我做了拦截处理，防止死循环，Vue 中在 oberve 函数中进行的处理</span></span><br><span class="line">      <span class="keyword">if</span> (keys[i] == <span class="string">'__ob__'</span>) <span class="keyword">return</span></span><br><span class="line">      defineReactive(obj, keys[i], obj[keys[i]])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 数据重复 Observer</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">observe</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> value != <span class="string">'object'</span>) <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">let</span> ob = <span class="keyword">new</span> Observer(value)</span><br><span class="line">  <span class="keyword">return</span> ob</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 把对象属性改为 getter/setter，并收集依赖</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">defineReactive</span>(<span class="params">obj, key, val</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> dep = <span class="keyword">new</span> Dep()</span><br><span class="line">  <span class="comment">// 处理 children</span></span><br><span class="line">  <span class="keyword">let</span> childOb = observe(val)</span><br><span class="line">  <span class="built_in">Object</span>.defineProperty(obj, key, &#123;</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">    <span class="keyword">get</span>: function reactiveGetter() &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`调用get获取值，值为<span class="subst">$&#123;val&#125;</span>`</span>)</span><br><span class="line">      <span class="keyword">const</span> value = val</span><br><span class="line">      <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">        dep.depend()</span><br><span class="line">        <span class="keyword">if</span> (childOb) &#123;</span><br><span class="line">          childOb.dep.depend()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> value</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span>: function reactiveSetter(newVal) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`调用了set，值为<span class="subst">$&#123;newVal&#125;</span>`</span>)</span><br><span class="line">      <span class="keyword">const</span> value = val</span><br><span class="line">      val = newVal</span><br><span class="line">      <span class="comment">// 对新值进行observe</span></span><br><span class="line">      childOb = observe(newVal)</span><br><span class="line">      <span class="comment">// 通知 dep 调用,循环调用手机的Watcher依赖，进行视图的更新</span></span><br><span class="line">      dep.notify()</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 辅助方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">def</span>(<span class="params">obj, key, val</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">Object</span>.defineProperty(obj, key, &#123;</span><br><span class="line">    value: val,</span><br><span class="line">    enumerable: <span class="literal">true</span>,</span><br><span class="line">    writable: <span class="literal">true</span>,</span><br><span class="line">    configurable: <span class="literal">true</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*----------------------------------------初始化watch------------------------------------*/</span></span><br><span class="line"><span class="comment">// 空函数</span></span><br><span class="line"><span class="keyword">const</span> noop = <span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;</span><br><span class="line"><span class="comment">// computed初始化的Watcher传入lazy: true就会触发Watcher中的dirty值为true</span></span><br><span class="line"><span class="keyword">const</span> computedWatcherOptions = &#123; <span class="attr">lazy</span>: <span class="literal">true</span> &#125;</span><br><span class="line"><span class="comment">//Object.defineProperty 默认value参数</span></span><br><span class="line"><span class="keyword">const</span> sharedPropertyDefinition = &#123;</span><br><span class="line">  enumerable: <span class="literal">true</span>,</span><br><span class="line">  configurable: <span class="literal">true</span>,</span><br><span class="line">  <span class="keyword">get</span>: noop,</span><br><span class="line">  <span class="keyword">set</span>: noop,</span><br><span class="line">&#125;</span><br><span class="line">// 初始化computed</span><br><span class="line">class initComputed &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(vm, computed) &#123;</span><br><span class="line">    <span class="comment">//新建存储watcher对象，挂载在vm对象执行</span></span><br><span class="line">    <span class="keyword">const</span> watchers = (vm._computedWatchers = <span class="built_in">Object</span>.create(<span class="literal">null</span>))</span><br><span class="line">    <span class="comment">//遍历computed</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> computed) &#123;</span><br><span class="line">      <span class="keyword">const</span> userDef = computed[key]</span><br><span class="line">      <span class="comment">//getter值为computed中key的监听函数或对象的get值</span></span><br><span class="line">      <span class="keyword">let</span> getter = <span class="keyword">typeof</span> userDef === <span class="string">'function'</span> ? userDef : userDef.get</span><br><span class="line">      <span class="comment">//新建computed的 watcher</span></span><br><span class="line">      watchers[key] = <span class="keyword">new</span> Watcher(vm, getter, noop, computedWatcherOptions)</span><br><span class="line">      <span class="keyword">if</span> (!(key <span class="keyword">in</span> vm)) &#123;</span><br><span class="line">        <span class="comment">/*定义计算属性*/</span></span><br><span class="line">        <span class="keyword">this</span>.defineComputed(vm, key, userDef)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 把计算属性的key挂载到vm对象下，并使用Object.defineProperty进行处理</span></span><br><span class="line">  <span class="comment">// 因此调用vm.somecomputed 就会触发get函数</span></span><br><span class="line">  defineComputed(target, key, userDef) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> userDef === <span class="string">'function'</span>) &#123;</span><br><span class="line">      sharedPropertyDefinition.get = <span class="keyword">this</span>.createComputedGetter(key)</span><br><span class="line">      sharedPropertyDefinition.set = noop</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      sharedPropertyDefinition.get = userDef.get</span><br><span class="line">        ? userDef.cache !== <span class="literal">false</span></span><br><span class="line">          ? <span class="keyword">this</span>.createComputedGetter(key)</span><br><span class="line">          : userDef.get</span><br><span class="line">        : noop</span><br><span class="line">      <span class="comment">// 如果有设置set方法则直接使用，否则赋值空函数</span></span><br><span class="line">      sharedPropertyDefinition.set = userDef.set ? userDef.set : noop</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Object</span>.defineProperty(target, key, sharedPropertyDefinition)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算属性的 getter 获取计算属性的值时会调用</span></span><br><span class="line">  createComputedGetter(key) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">computedGetter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 获取到相应的 watcher</span></span><br><span class="line">      <span class="keyword">const</span> watcher = <span class="keyword">this</span>._computedWatchers &amp;&amp; <span class="keyword">this</span>._computedWatchers[key]</span><br><span class="line">      <span class="keyword">if</span> (watcher) &#123;</span><br><span class="line">        <span class="comment">// watcher.dirty 参数决定了计算属性值是否需要重新计算，默认值为 true，即第一次时会调用一次</span></span><br><span class="line">        <span class="keyword">if</span> (watcher.dirty) &#123;</span><br><span class="line">          <span class="comment">// 每次执行之后 watcher.dirty 会设置为 false，只要依赖的 data 值改变时才会触发</span></span><br><span class="line">          <span class="comment">// watcher.dirty 为 true,从而获取值时从新计算</span></span><br><span class="line">          watcher.evaluate()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取依赖</span></span><br><span class="line">        <span class="keyword">if</span> (Dep.target) &#123;</span><br><span class="line">          watcher.depend()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回计算属性的值</span></span><br><span class="line">        <span class="keyword">return</span> watcher.value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、首先来创建一个Vue构造函数：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Vue</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="comment">// 2、设置data和computed的值：</span></span><br><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">  name: <span class="string">'Hello'</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> computed = &#123;</span><br><span class="line">  getfullname: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'-----走了computed 之 getfullname------'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'新的值为：'</span> + data.name + <span class="string">' - world'</span>)</span><br><span class="line">    <span class="keyword">return</span> data.name + <span class="string">' - world'</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3、实例化Vue并把data挂载到Vue上</span></span><br><span class="line"><span class="keyword">let</span> vue = <span class="keyword">new</span> Vue()</span><br><span class="line">vue.data = data</span><br><span class="line"><span class="comment">// 4、创建Watcher对象</span></span><br><span class="line"><span class="keyword">let</span> updateComponent = <span class="function">(<span class="params">vm</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 收集依赖</span></span><br><span class="line">  data.name</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> watcher1 = <span class="keyword">new</span> Watcher(vue, updateComponent, () =&gt; &#123;&#125;)</span><br><span class="line"><span class="comment">// 5、初始化Data并收集依赖</span></span><br><span class="line">observe(data)</span><br><span class="line"><span class="comment">// 6、初始化computed</span></span><br><span class="line"><span class="keyword">let</span> watcher2 = <span class="keyword">new</span> initComputed(vue, computed)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清明节这天的网站都”深沉“了</title>
      <link href="/%E6%B8%85%E6%98%8E%E8%8A%82%E8%BF%99%E5%A4%A9%E7%9A%84%E7%BD%91%E7%AB%99%E9%83%BD%E6%B7%B1%E6%B2%89%E4%BA%86/"/>
      <url>/%E6%B8%85%E6%98%8E%E8%8A%82%E8%BF%99%E5%A4%A9%E7%9A%84%E7%BD%91%E7%AB%99%E9%83%BD%E6%B7%B1%E6%B2%89%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>2020年4月4日举行全国性哀悼活动。在此期间，全国和驻外使领馆下半旗志哀，全国停止公共娱乐活动。4月4日10时起，全国人民默哀3分钟，汽车、火车、舰船鸣笛，防空警报鸣响。发现众多网站都“深沉”了，其实感觉我们国家还是挺团结的……</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/168491/1585993432475-e77fd1cf-b56c-43d8-b3a8-76a6ef5b9d46.png" alt="jd"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/168491/1585994662949-378f26a8-c47d-4e73-9a40-1b734ff8dc28.png" alt="taobao"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/168491/1585993524827-15e61749-0f2c-4d8c-9163-49c00c9d8c9f.png" alt="amazon"></p><p>对于这种置灰的效果是怎么如何实现？不可能修改所有的css颜色，其实只要在html 根元素上加上 filter 属性即可</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.html</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">grayscale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-webkit-filter</span>: <span class="built_in">grayscale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="comment">/* IE兼容 放弃IE吧 */</span></span><br><span class="line">  <span class="attribute">filter</span>: progid:DXImageTransform.Microsoft.<span class="built_in">BasicImage</span>(grayscale=<span class="number">1</span>);</span><br><span class="line">  <span class="comment">/* 或引入svg文件 */</span></span><br><span class="line">  <span class="attribute">filter</span>:<span class="built_in">url</span>(<span class="string">"data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg'&gt;&lt;filter id='grayscale'&gt;&lt;feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter-function/grayscale" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter-function/grayscale</a><br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms532889%28v%3dvs.85%29" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms532889%28v%3dvs.85%29</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初探 web components</title>
      <link href="/web-components-custom-elements/"/>
      <url>/web-components-custom-elements/</url>
      
        <content type="html"><![CDATA[<p>通过使用 Custom Elements 创建内联的 CSS 和 JavaScript 的自定义元素。需要说明的是它不是 React， Vue 或者 Angular 的框架的替代方案，它是一个全新的概念。</p><h4 id="CustomElementRegistry-对象"><a href="#CustomElementRegistry-对象" class="headerlink" title="CustomElementRegistry 对象"></a>CustomElementRegistry 对象</h4><p>在 window 全局对象下暴露了 customElements 属性，可以通过此属性访问到 <code>CustomElementRegistry</code> 对象。<br><code>CustomElementRegistry</code> 对象下的几种方法用于注册 Custom Elements和查询 Custom Elements：</p><ul><li><code>define()</code>用于定义新的 Custom Element</li><li><code>get()</code> 用于获取 Custom Element 的 constructor，如果不存在，返回 undefined</li><li><code>upgrade()</code> 用于升级 Custom Element</li><li><code>whenDefined()</code> 用于获取 Custom Element 的 constructor，类似 get()，不同之处是返回值是 promise，有可用值是返回 resolves 状态</li></ul><h4 id="如何创建一个-Custom-Element"><a href="#如何创建一个-Custom-Element" class="headerlink" title="如何创建一个 Custom Element"></a>如何创建一个 Custom Element</h4><p>在调用 <code>window.customElements.define()</code> 方法前，首先要定义一个新的HTML元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ToDo...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 CustomTitle 类的构造器中使用 <strong>Shadow DOM</strong> 关联自定义 CSS，JavaScript 和 HTML到新的元素，这样就可以在这个新元素中封装各种功能，首先初始化构造器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后调用 attachShadow()，传入参数 <code>{ mode: &#39;open&#39; }</code> ,这个属性设置了 shadow DOM的封装模式，如果设置值为 <code>open</code>，可以访问元素的 shadowRoot 属性，如果值为 <code>close</code>，则不可以。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">        <span class="keyword">this</span>.attachShadow(&#123; <span class="attr">mode</span>: <span class="string">'open'</span> &#125;)</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来设置元素的HTML</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">        <span class="keyword">this</span>.attachShadow(&#123; <span class="attr">mode</span>: <span class="string">'open'</span> &#125;)</span><br><span class="line">        <span class="keyword">this</span>.shadowRoot.innerHTML = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello WC!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里的 innerHTML 可以写入多个 html tag</p></blockquote><p>定义了内置元素后，即可使用 window.customElements</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.customElements.define(<span class="string">'custom-title'</span>, CustomTitle)</span><br></pre></td></tr></table></figure><p>以上即可在页面中使用 <custom-title></custom-title></p><h4 id="加入CSS"><a href="#加入CSS" class="headerlink" title="加入CSS"></a>加入CSS</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>()</span><br><span class="line">    <span class="keyword">this</span>.attachShadow(&#123; <span class="attr">mode</span>: <span class="string">'open'</span> &#125;)</span><br><span class="line">    <span class="keyword">this</span>.shadowRoot.innerHTML = <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;style&gt;</span></span><br><span class="line"><span class="string">        h1 &#123;</span></span><br><span class="line"><span class="string">          font-size: 40px;</span></span><br><span class="line"><span class="string">          color: #000;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &lt;/style&gt;</span></span><br><span class="line"><span class="string">      &lt;h1&gt;Hello WC!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="简写语法"><a href="#简写语法" class="headerlink" title="简写语法"></a>简写语法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.customElements.define(<span class="string">'custom-title'</span>, <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="加入-JavaScript"><a href="#加入-JavaScript" class="headerlink" title="加入 JavaScript"></a>加入 JavaScript</h4><p>在加入JavaScript处理方式上与 CSS 上略有区别，不能再模板字符串中直接写入，需要加入 addEventListener处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">        <span class="keyword">this</span>.attachShadow(&#123; <span class="attr">mode</span>: <span class="string">'open'</span> &#125;)</span><br><span class="line">        <span class="keyword">this</span>.shadowRoot.innerHTML = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;style&gt;</span></span><br><span class="line"><span class="string">            h1 &#123;</span></span><br><span class="line"><span class="string">              font-size: 40px;</span></span><br><span class="line"><span class="string">              color: #000;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &lt;/style&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Hello WC!&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        `</span></span><br><span class="line">    <span class="keyword">this</span>.addEventListener(<span class="string">'click'</span>, e =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'clicked'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/kingzez/pen/NWPbOrO" target="_blank" rel="noopener">demo 链接</a></p><h4 id="使用-template"><a href="#使用-template" class="headerlink" title="使用 template"></a>使用 template</h4><p>可以使用 <code>template</code>，通过id指定到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"custom-title-template"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    h1 &#123;</span><br><span class="line">        font-size: 40px;</span><br><span class="line">        color: #000;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello WC!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">custom-title</span>&gt;</span><span class="tag">&lt;/<span class="name">custom-title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 Custom Element 构造器中引用到 shadow DOM 上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>()</span><br><span class="line">        <span class="keyword">this</span>.attachShadow(&#123; <span class="attr">mode</span>: <span class="string">'open'</span> &#125;)</span><br><span class="line">        <span class="keyword">const</span> tmpl = ducument.querySelector(<span class="string">'#custom-title-template'</span>)</span><br><span class="line">        <span class="keyword">this</span>.shadowRoot.appendChild(tmpl.content.cloneNode(<span class="literal">true</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.customElements.define(<span class="string">'custom-title'</span>, CustomTitle)</span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/kingzez/pen/xxbRyYg" target="_blank" rel="noopener">demo 链接</a></p><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>除 constructor 外，还可以定义生命周期函数，用于在特定时期执行特定的方法</p><ul><li><code>connectedCallback</code> 当元素插入到DOM中时执行</li><li><code>disconnectedCallback</code> 当DOM中删除元素时执行</li><li><code>attributeChangedCallback</code> 当检测到属性发生更改或添加或删除时执行（传入3个参数）<ul><li>attrName: 变化了的属性名</li><li>oldVal: 属性改变前的值</li><li>newVal: 属性改变后的值</li></ul></li><li><code>adoptedCallback</code> 当元素已<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/adoptNode" target="_blank" rel="noopener">移至新文档时</a></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    connectedCallback() &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    disconnectedCallback() &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    attributeChangedCallback(attrName, oldVal, newVal) &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面提到<code>attributeChangedCallback</code> 会监听属性值的变化，这里要定义监听属性值的范围，必须定义一个静态方法用于返回监听属性的数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLELement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">get</span> observedAttributes() &#123;</span><br><span class="line">      <span class="keyword">return</span> [<span class="string">'diabled'</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    attributeChangedCallback() &#123;</span><br><span class="line">      <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我定义了 <code>disabled</code> 属性用于被监听，当它的值变化了，比如它的值为 <code>true</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'custom-title'</span>).disabled = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>此时，<code>attributeChangedCallback</code> 被触发，三个参数值分别为 <code>&#39;disabled&#39;, false, true</code></p><h4 id="定义自定义属性"><a href="#定义自定义属性" class="headerlink" title="定义自定义属性"></a>定义自定义属性</h4><p>在自定义元素上定义自定义属性，通过添加 getter 和 setter 函数向自定义元素上定义自定义属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">get</span> observedAttributes() &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">'nbattribute'</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">get</span> nbattribute() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getAttribute(<span class="string">'nbattribute'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> nbattribute(value) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setAttribute(<span class="string">'nbattribute'</span>, value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是定义类似 <code>disabled</code> 这样的布尔属性值，如果值为 <code>true</code> 时展示这个属性值，<code>false</code> 时不展示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomTitle</span> <span class="keyword">extends</span> <span class="title">HTMLElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">get</span> observedAttributes() &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">'boolattribute'</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">get</span> boolattribute() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.hasAttribute(<span class="string">'boolattribute'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> boolattribute(value) &#123;</span><br><span class="line">        <span class="keyword">if</span> (value) &#123;</span><br><span class="line">            <span class="keyword">this</span>.setAttribute(<span class="string">'boolattribute'</span>, <span class="string">''</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.removeAttribute(<span class="string">'boolattribute'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置尚未定义的自定义元素的样式"><a href="#设置尚未定义的自定义元素的样式" class="headerlink" title="设置尚未定义的自定义元素的样式"></a>设置尚未定义的自定义元素的样式</h4><p>在页面加载过程中，JavaScript的加载需要时间，此时自定义元素还未定义，当页面加载完成后，页面的的重新布局过程可能不是那么友好，为了解决这个问题，加入 <code>:not(:defined)</code> 伪类，设置一个大致的高度和渐变效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">custom-title</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:defined)</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: opacity <span class="number">0.5s</span> ease-in-out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浏览器支持情况-caniuse"><a href="#浏览器支持情况-caniuse" class="headerlink" title="浏览器支持情况 caniuse"></a>浏览器支持情况 <a href="https://caniuse.com/#search=Custom%20Elements" target="_blank" rel="noopener">caniuse</a></h4><p>最新版的 FireFox，Safari，Chrome，使用 Chromium内核 重写的Edge，IE（就别想了），另外可以加入 <a href="https://github.com/webcomponents/polyfills/tree/master/packages/custom-elements" target="_blank" rel="noopener">polyfill</a> 兼容老版本的浏览器</p><h4 id="Web-Components-相关的库"><a href="#Web-Components-相关的库" class="headerlink" title="Web Components 相关的库"></a>Web Components 相关的库</h4><ul><li><a href="https://github.com/hybridsjs/hybrids" target="_blank" rel="noopener">Hybrids</a> is a UI library for creating Web Components with simple and functional API.</li><li><a href="https://github.com/Polymer/lit-element" target="_blank" rel="noopener">LitElement</a> uses <a href="https://github.com/Polymer/lit-html" target="_blank" rel="noopener">lit-html</a> to render into the element’s Shadow DOM and adds API to help manage element properties and attributes.<br>Polymer provides a set of features for creating custom elements.</li><li><a href="http://slimjs.com/" target="_blank" rel="noopener">Slim.js</a> is an opensource lightweight web component library that provides data-binding and extended capabilities for components, using es6 native class inheritance.</li><li><a href="https://stenciljs.com/" target="_blank" rel="noopener">Stencil</a> is an opensource compiler that generates standards-compliant web components.</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> webcomponents </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向未来编程，如何在 Vue2 中使用 Vue3 的语法[实践篇]</title>
      <link href="/future-origin-programing-how-to-use-vue3-syntax-in-vue2-in-practice/"/>
      <url>/future-origin-programing-how-to-use-vue3-syntax-in-vue2-in-practice/</url>
      
        <content type="html"><![CDATA[<p>面向未来编程(Future-Oriented Programming)，<a href="https://github.com/vuejs/vue-function-api" target="_blank" rel="noopener">vue-function-api</a> 提供开发者在 Vue2.x 中使用 Vue3 的语法逻辑开发应用。(为方便以下以 Vue2 表示)</p><p>本文不对文档 api 对过多说明，仅讨论在项目实践中遇到的问题。比较两者的区别是对 Vue3 写法最快的了解，下面通过对比同一个功能在 Vue2 与 Vue3 的区别。</p><p>场景是这样的，一个列表页，上部分是条件筛选，下部分是 table，table 行内会有删除，修改（以 dialog 形式展示）功能，template 部分无区别，这里不做赘述。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>安装 vue-function-api</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-function-api --save</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line">yarn add vue-function-api</span><br></pre></td></tr></table></figure><p>在项目中引入 main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Element <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="keyword">import</span> &#123; plugin &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span> <span class="comment">// &lt;--- 引入 vue-function-api</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Element)</span><br><span class="line">Vue.use(plugin) <span class="comment">// &lt;--- 这样就可以在单文件组件中使用函数式 API了</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><p>准备工作后，就可以安安静静的做比较了。</p><h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3><p>在 Vue2 中，首先要定义 <strong>data</strong>, <strong>data</strong> 中我们定义一个 query 对象用于条件筛选，citys 用于条件筛选中城市（动态获取下拉），statusMap 用于筛选条件中状态的下拉，list 用于 table。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      query: &#123;</span><br><span class="line">        city: <span class="literal">null</span>,</span><br><span class="line">        name: <span class="literal">null</span>,</span><br><span class="line">        status: <span class="literal">null</span></span><br><span class="line">      &#125;,</span><br><span class="line">      citys: [],</span><br><span class="line">      list: [],</span><br><span class="line">      statusMap:  [&#123;</span><br><span class="line">        value: <span class="number">1</span>,</span><br><span class="line">        label: <span class="string">'启用'</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        value: <span class="number">2</span>,</span><br><span class="line">        label: <span class="string">'禁用'</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>Vue3 中是这样定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; value &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    <span class="keyword">const</span> query = value(&#123;</span><br><span class="line">      city: <span class="literal">null</span>,</span><br><span class="line">      name: <span class="literal">null</span>,</span><br><span class="line">      status: <span class="literal">null</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> citys = value([])</span><br><span class="line">    <span class="keyword">const</span> list = value([])</span><br><span class="line">    <span class="keyword">const</span> statusMap = value([&#123;</span><br><span class="line">      value: <span class="number">1</span>,</span><br><span class="line">      label: <span class="string">'启用'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      value: <span class="number">2</span>,</span><br><span class="line">      label: <span class="string">'禁用'</span></span><br><span class="line">    &#125;])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      query,</span><br><span class="line">      citys,</span><br><span class="line">      list,</span><br><span class="line">      statusMap</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引入 <strong>setup</strong>, 在其中做 <strong>data</strong> 做的事情，细心的同学会发现在 <strong>setup</strong> 后需要 return 所定义的变量，其中也并非要将所有的变量都放入 return 中，放入 return 中是为了能够在 template 中使用，即只需 return template 中依赖的变量</p><h3 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h3><p>上文中说到 table 中有删除，编辑功能，正常的系统中这类功能是需要有权限的人才能操作，这里我们假设已经将 permissions 存入 vuex 中，使用的时需要通过 mapGetters 取出 permissions（此处为举例这样实现，正常的权限要比这个复杂）。</p><p>在 Vue2 中是这样写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 此处先省略 data 部分...</span></span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([<span class="string">'permissions'</span>]),</span><br><span class="line">    canUpdate() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.permissions.includes(<span class="string">'update'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    canDelete() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.permissions.includes(<span class="string">'delete'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Vue3：目前 vue-function-api 还不支持 vuex map 的方式 导出 vuex 中的状态，这里我们从 Vue root 中取出 store 中的数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup(props, ctx) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; $store &#125; = ctx.root</span><br><span class="line">    <span class="comment">// 此处先省略 data 部分...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> permissions = computed(<span class="function"><span class="params">()</span> =&gt;</span> $store.getters.permissions)</span><br><span class="line">    <span class="keyword">const</span> canUpdate = <span class="function"><span class="params">()</span> =&gt;</span> permissions.includes(<span class="string">'update'</span>)</span><br><span class="line">    <span class="keyword">const</span> canDelete = <span class="function"><span class="params">()</span> =&gt;</span> permissions.includes(<span class="string">'delete'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      canUpdate,</span><br><span class="line">      canDelete <span class="comment">// &lt;--- 这里只导出 template 的依赖</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 template 中， 编辑，删除的按钮上 分别加入 <code>v-if=&quot;canUpdate&quot;</code>, <code>v-if=&quot;canDelete&quot;</code>，即可实现对应权限的人才能看到对应的按钮，了解更多 <a href="https://github.com/vuejs/vue-function-api#context" target="_blank" rel="noopener">context</a>。</p><h3 id="methods-amp-lifecycle"><a href="#methods-amp-lifecycle" class="headerlink" title="methods &amp; lifecycle"></a>methods &amp; lifecycle</h3><p>基于上文中的描述，因为是一个列表页，所以结合 lifecycle 一起做一下对比。</p><p>在 Vue2 中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="keyword">async</span> fetchCity() &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchCityApi()</span><br><span class="line">      <span class="keyword">this</span>.citys = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> fetchList() &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchListApi(<span class="keyword">this</span>.query)</span><br><span class="line">      <span class="keyword">this</span>.list = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">delete</span>(id) &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> deleteItem(id)</span><br><span class="line">      <span class="keyword">const</span> &#123; status, msg &#125; = response.data</span><br><span class="line">      <span class="keyword">if</span> (status !== <span class="string">'ok'</span>) <span class="keyword">return</span> <span class="keyword">this</span>.$message.error(msg)</span><br><span class="line">      <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        type: <span class="string">'success'</span>,</span><br><span class="line">        message: <span class="string">'删除成功'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    confirm(id) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$confirm(<span class="string">`确认删除`</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">        confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">        cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">        type: <span class="string">'warning'</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.delete(id)</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">          type: <span class="string">'info'</span>,</span><br><span class="line">          message: <span class="string">'已取消'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    detail(id) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">        path: <span class="string">'/detail'</span>,</span><br><span class="line">        query: &#123; id &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="keyword">this</span>.fetchCity()</span><br><span class="line">    <span class="keyword">this</span>.fetchList()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接下来看 Vue3 中实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed, onCreated &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup(props, ctx) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; $message, $router, $confirm, $store &#125; = ctx.root <span class="comment">// &lt;--- setup() 中不可以使用 this 访问当前组件实例, 可以通过 setup 的第二个参数 context 来访问 vue2.x API 中实例上的属性。</span></span><br><span class="line">    <span class="comment">// 此处先省略 data 部分...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// method</span></span><br><span class="line">    <span class="keyword">const</span> fetchCity = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchCityApi()</span><br><span class="line">      citys.value = response.data <span class="comment">// &lt;--- 划重点，通过 value() wrap初始化的变量在 setup 内部引用值或者修改值都要加 .value</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> fetchList = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchListApi(query.value)</span><br><span class="line">      list.value = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">delete</span> = <span class="keyword">async</span> id =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> deleteItem(id)</span><br><span class="line">      <span class="keyword">const</span> &#123; status, msg &#125; = response.data</span><br><span class="line">      <span class="keyword">if</span> (status !== <span class="string">'ok'</span>) <span class="keyword">return</span> $message.error(msg)</span><br><span class="line">      $message(&#123;</span><br><span class="line">        type: <span class="string">'success'</span>,</span><br><span class="line">        message: <span class="string">'删除成功'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    confirm(id) &#123;</span><br><span class="line">      $confirm(<span class="string">`确认删除`</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">        confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">        cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">        type: <span class="string">'warning'</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">delete</span>(id)</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        $message(&#123;</span><br><span class="line">          type: <span class="string">'info'</span>,</span><br><span class="line">          message: <span class="string">'已取消'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    detail(id) &#123;</span><br><span class="line">      $router.push(&#123;</span><br><span class="line">        path: <span class="string">'/detail'</span>,</span><br><span class="line">        query: &#123; id &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// lifecycle</span></span><br><span class="line">    onCreated(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      fetchCity()</span><br><span class="line">      fetchList()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      fetchCity,</span><br><span class="line">      fetchList,</span><br><span class="line">      confirm,</span><br><span class="line">      detail <span class="comment">// &lt;--- 这里只导出 template 的依赖</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是不是感觉切换到 Vue3 也没那么难</p><h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3><p>watch 的例子在一个列表页中可能没有什么使用场景，上文中说到列表页上面是一个条件筛选，有城市下拉，状态下拉，当然正常情况下，我们都是通过 select 的 change 事件调用 fetchList，这里我就为了举例而这么写，实际项目自己衡量利弊。</p><p>在 Vue2 中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  watch: &#123;</span><br><span class="line">    query: &#123;</span><br><span class="line">      handler: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fetchList()</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 或者不嫌麻烦这样写...</span></span><br><span class="line">  watch: &#123;</span><br><span class="line">    <span class="string">'query.city'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.fetchList()</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'query.name'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.fetchList()</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'query.status'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.fetchList()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 Vue3 中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; watch &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    watch(</span><br><span class="line">      query,</span><br><span class="line">      val =&gt; &#123;</span><br><span class="line">        fetchList()</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 或者</span></span><br><span class="line"></span><br><span class="line">    watch(</span><br><span class="line">      () =&gt; query.value,</span><br><span class="line">      val =&gt; &#123;</span><br><span class="line">        fetchList()</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过以上对比，你应该对 Vue3 写法有一定理解了，因为是以一个列表页为 demo对比，没有用到 <strong>provide</strong>、 <strong>inject</strong>，想了解的同学可以到 <em><a href="https://github.com/vuejs/vue-function-api#provide-inject" target="_blank" rel="noopener"><code>provide, inject</code></a>，</em> 还有 <strong>state</strong> 相当于 <em><a href="https://vuejs.org/v2/api/index.html#Vue-observable" target="_blank" rel="noopener"><code>Vue.observable</code></a></em>.</p><p>对比完整代码</p><p><strong>Vue2</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      query: &#123;</span><br><span class="line">        city: <span class="literal">null</span>,</span><br><span class="line">        name: <span class="literal">null</span>,</span><br><span class="line">        status: <span class="literal">null</span></span><br><span class="line">      &#125;,</span><br><span class="line">      citys: [],</span><br><span class="line">      list: [],</span><br><span class="line">      statusMap:  [&#123;</span><br><span class="line">        value: <span class="number">1</span>,</span><br><span class="line">        label: <span class="string">'启用'</span></span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        value: <span class="number">2</span>,</span><br><span class="line">        label: <span class="string">'禁用'</span></span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([<span class="string">'permissions'</span>]),</span><br><span class="line">    canUpdate() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.permissions.includes(<span class="string">'update'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    canDelete() &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.permissions.includes(<span class="string">'delete'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="keyword">async</span> fetchCity() &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchCityApi()</span><br><span class="line">      <span class="keyword">this</span>.citys = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> fetchList() &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchListApi(<span class="keyword">this</span>.query)</span><br><span class="line">      <span class="keyword">this</span>.list = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">delete</span>(id) &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> deleteItem(id)</span><br><span class="line">      <span class="keyword">const</span> &#123; status, msg &#125; = response.data</span><br><span class="line">      <span class="keyword">if</span> (status !== <span class="string">'ok'</span>) <span class="keyword">return</span> <span class="keyword">this</span>.$message.error(msg)</span><br><span class="line">      <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">        type: <span class="string">'success'</span>,</span><br><span class="line">        message: <span class="string">'删除成功'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    confirm(id) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$confirm(<span class="string">`确认删除`</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">        confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">        cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">        type: <span class="string">'warning'</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.delete(id)</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">          type: <span class="string">'info'</span>,</span><br><span class="line">          message: <span class="string">'已取消'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    detail(id) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$router.push(&#123;</span><br><span class="line">        path: <span class="string">'/detail'</span>,</span><br><span class="line">        query: &#123; id &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="keyword">this</span>.fetchCity()</span><br><span class="line">    <span class="keyword">this</span>.fetchList()</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    query: &#123;</span><br><span class="line">      handler: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fetchList()</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>Vue3</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; value, computed, onCreated &#125; <span class="keyword">from</span> <span class="string">'vue-function-api'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup(props, ctx) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; $store, $message, $router, $route &#125; = ctx.root</span><br><span class="line">    <span class="comment">// reactive state</span></span><br><span class="line">    <span class="keyword">const</span> query = value(&#123;</span><br><span class="line">      city: <span class="literal">null</span>,</span><br><span class="line">      name: <span class="literal">null</span>,</span><br><span class="line">      status: <span class="literal">null</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> citys = value([])</span><br><span class="line">    <span class="keyword">const</span> list = value([])</span><br><span class="line">    <span class="keyword">const</span> statusMap = value([&#123;</span><br><span class="line">      value: <span class="number">1</span>,</span><br><span class="line">      label: <span class="string">'启用'</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      value: <span class="number">2</span>,</span><br><span class="line">      label: <span class="string">'禁用'</span></span><br><span class="line">    &#125;])</span><br><span class="line"></span><br><span class="line">    <span class="comment">// computed</span></span><br><span class="line">    <span class="keyword">const</span> permissions = computed(<span class="function"><span class="params">()</span> =&gt;</span> $store.getters.permissions)</span><br><span class="line">    <span class="keyword">const</span> canUpdate = <span class="function"><span class="params">()</span> =&gt;</span> permissions.includes(<span class="string">'update'</span>)</span><br><span class="line">    <span class="keyword">const</span> canDelete = <span class="function"><span class="params">()</span> =&gt;</span> permissions.includes(<span class="string">'delete'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// method</span></span><br><span class="line">    <span class="keyword">const</span> fetchCity = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchCityApi()</span><br><span class="line">      citys.value = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> fetchList = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> fetchListApi(query.value)</span><br><span class="line">      list.value = response.data</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">delete</span> = <span class="keyword">async</span> id =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> deleteItem(id)</span><br><span class="line">      <span class="keyword">const</span> &#123; status, msg &#125; = response.data</span><br><span class="line">      <span class="keyword">if</span> (status !== <span class="string">'ok'</span>) <span class="keyword">return</span> $message.error(msg)</span><br><span class="line">      $message(&#123;</span><br><span class="line">        type: <span class="string">'success'</span>,</span><br><span class="line">        message: <span class="string">'删除成功'</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    confirm(id) &#123;</span><br><span class="line">      $confirm(<span class="string">`确认删除`</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">        confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">        cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">        type: <span class="string">'warning'</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">delete</span>(id)</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        $message(&#123;</span><br><span class="line">          type: <span class="string">'info'</span>,</span><br><span class="line">          message: <span class="string">'已取消'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    detail(id) &#123;</span><br><span class="line">      $router.push(&#123;</span><br><span class="line">        path: <span class="string">'/detail'</span>,</span><br><span class="line">        query: &#123; id &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// watch</span></span><br><span class="line">    watch(</span><br><span class="line">      query,</span><br><span class="line">      val =&gt; &#123;</span><br><span class="line">        fetchList()</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123; <span class="attr">deep</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// lifecycle</span></span><br><span class="line">    onCreated(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      fetchCity()</span><br><span class="line">      fetchList()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      query,</span><br><span class="line">      citys,</span><br><span class="line">      list,</span><br><span class="line">      statusMap,</span><br><span class="line">      canUpdate,</span><br><span class="line">      canDelete,</span><br><span class="line">      fetchCity,</span><br><span class="line">      fetchList,</span><br><span class="line">      confirm,</span><br><span class="line">      detail</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>这里贴一下 <strong>setup</strong> 中的第二个参数 <code>context</code>，对象中的属性是 2.x 中的 vue 实例属性的一个子集。完整的属性列表：</p><ul><li>parent</li><li>root</li><li>refs</li><li>slots</li><li>attrs</li><li>emit</li></ul><p>像其他库 vuex，vue-router，ElementUI 的一些 $方法可以从 root 中取得</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  setup(props, ctx) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; $store, $router, $route, $message, $confirm &#125; = ctx.root</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最后的最后"><a href="#最后的最后" class="headerlink" title="最后的最后"></a>最后的最后</h3><p>笔者已用到正式环境，目前来看还没有什么问题，引用 vue-function-api 官方的说明</p><blockquote><p>vue-function-api 会一直保持与 Vue3.x 的兼容性，当 3.0 发布时，您可以无缝替换掉本库。<br>vue-function-api 的实现只依赖 Vue2.x 本身，不论 Vue3.x 的发布与否，都不会影响您正常使用本库。<br>由于 Vue2.x 的公共 API 限制，vue-function-api 无法避免的会产生一些额外的内存负载。如果您的应用并不工作在极端内存环境下，无需关心此项。</p></blockquote><p><a href="https://github.com/vuejs/vue-function-api" target="_blank" rel="noopener">Vue Function API</a><br><a href="https://zhuanlan.zhihu.com/p/68477600" target="_blank" rel="noopener">通过基于函数的 API 来复用组件逻辑</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解什么是微前端</title>
      <link href="/understanding_micro_frontends/"/>
      <url>/understanding_micro_frontends/</url>
      
        <content type="html"><![CDATA[<p>作为前端开发人员，这些年来你一直在开发单体应用，即使你已经知道这是一个不好的做法。 您将代码划分为组件，使用 <em>require</em> 或 <em>import</em> 并将package.json中定义的npm包或已安装的子git仓库添加到项目中，但最终构建了一个整体。 是时候改变它了。</p><h3 id="为什么你的代码是一个单体？"><a href="#为什么你的代码是一个单体？" class="headerlink" title="为什么你的代码是一个单体？"></a>为什么你的代码是一个单体？</h3><p>除了已经实现了微前端的应用之外，所有前端应用本质上都是单一的应用。 原因是如果您正在使用 React 库进行开发，并且如果您有两个团队，则两个团队都应该使用相同的React 库，并且两个团队应该在部署时保持同步，并且在代码合并期间始终会发生冲突。 它们没有完全分离，很可能它们维护着相同的仓库并具有相同的构建系统。 单体应用的退出被标志为微服务的出现。 但是它适用于后端！😱</p><h3 id="什么是微服务？"><a href="#什么是微服务？" class="headerlink" title="什么是微服务？"></a>什么是微服务？</h3><p>对于微服务，一般而言最简单的解释是，它是一种开发技术，允许开发人员为平台的不同部分进行独立部署，而不会损害其他部分。 独立部署的能力允许他们构建孤立或松散耦合的服务。 为了使这个体系结构更稳定，有一些规则要遵循，可以总结如下：每个服务应该只有一个任务，它应该很小。 所以负责这项服务的团队应该很小。 关于团队和项目的规模，<a href="https://martinfowler.com/articles/microservices.html#HowBigIsAMicroservice" target="_blank" rel="noopener">James Lewis 和 Martin Fowler</a> 在互联网上做出的最酷解释之一如下：</p><blockquote><p>在我们与微服务从业者的对话中，我们看到了一系列服务规模。 报道的最大规模遵循亚马逊关于Two Pizza Team的概念（即整个团队可以由两个比萨饼供给），意味着不超过十几个人。 在规模较小的规模上，我们已经看到了一个由六人组成的团队支持六项服务的设置。</p></blockquote><p>我画了一个简单的草图，为整体和微服务提供了直观的解释：</p><p><img src="https://user-images.githubusercontent.com/10891613/60702523-c2af6800-9f31-11e9-988e-598f1c66f423.jpg" alt></p><p>从上图可以理解，微服务中的每个服务都是一个独立的应用，除了UI。 UI仍然是一体的！ 当一个团队处理所有服务并且公司正在扩展时，前端团队将开始苦苦挣扎并且无法跟上它，这是这种架构的瓶颈。</p><p><img src="https://user-images.githubusercontent.com/10891613/60702910-d14a4f00-9f32-11e9-9879-0dc0510ac3ef.jpg" alt></p><p>除了瓶颈之外，这种架构也会导致一些组织问题。 假设公司正在发展并将采用需要 <em>跨职能</em> 小团队的敏捷开发方法。 在这个常见的例子中，产品所有者自然会开始将故事定义为前端和后端任务，而 <em>跨职能</em> 团队将永远不会成为真正的 <em>跨职能</em> 部门。 这将是一个浅薄的泡沫，看起来像一个敏捷的团队，但它将在内部分开。 关于管理这种团队的更多信息将是一项非常重要的工作。 在每个计划中，如果有足够的前端任务或者sprint中有足够的后端任务，则会有一个问题。 为了解决这里描述的所有问题和许多其他问题，几年前出现了<strong>微前端</strong>的想法并且开始迅速普及。</p><h3 id="解决微服务中的瓶颈问题：Micro-Frontends🎉"><a href="#解决微服务中的瓶颈问题：Micro-Frontends🎉" class="headerlink" title="解决微服务中的瓶颈问题：Micro Frontends🎉"></a>解决微服务中的瓶颈问题：Micro Frontends🎉</h3><p>解决方案实际上非常明显，采用了多年来为后端服务工作的相同原则：将前端整体划分为小的UI片段。 但UI与服务并不十分相似，它是最终用户与产品之间的接口，应该是一致且无缝的。 更重要的是，在单页面应用时代，整个应用在客户端的浏览器上运行。 它们不再是简单的HTML文件，相反，它们是复杂的软件，达到了非常复杂的水平。 现在我觉得微型前端的定义是必要的：</p><blockquote><p>Micro Frontends背后的想法是将网站或Web应用视为独立团队拥有的功能组合。 每个团队都有一个独特的业务或任务领域，做他们关注和专注的事情。团队是跨职能的，从数据库到用户界面开发端到端的功能。（<a href="https://micro-frontends.org/" target="_blank" rel="noopener">micro-frontends.org</a>）</p></blockquote><p>根据我迄今为止的经验，对于许多公司来说，直接采用上面提出的架构真的很难。 许多其他人都有巨大的遗留负担，这使他们无法迁移到新的架构。 出于这个原因，更柔软的中间解决方案更加灵活，易于采用和安全迁移至关重要。 在更详细地概述了体系结构后，我将尝试提供一些体系结构的洞察，该体系结构确认了上述提议并允许更灵活的方式。 在深入了解细节之前，我需要建立一些术语。</p><h3 id="整体结构和一些术语"><a href="#整体结构和一些术语" class="headerlink" title="整体结构和一些术语"></a>整体结构和一些术语</h3><p>让我们假设我们通过业务功能垂直划分整体应用结构。 我们最终会得到几个较小的应用，它们与单体应用具有相同的结构。 但是如果我们在所有这些小型单体应用之上添加一个特殊应用，用户将与这个新应用进行通信，它将把每个小应用的旧单体UI组合成一个。 这个新图层可以命名为<strong>拼接图层</strong>，因为它从每个微服务中获取生成的UI部件，并为最终用户组合成一个<em>无缝</em> UI，这将是微前端的最直接实现🤩</p><p><img src="https://user-images.githubusercontent.com/10891613/60702748-5aad5180-9f32-11e9-93f4-eaaf99415697.jpg" alt></p><p>为了更好地理解，我将每个小型单体应用称为<strong>微应用</strong>，因为它们都是独立的应用，而不仅仅是微服务，它们都有UI部件，每个都代表端到端的业务功能。</p><p>众所周知，今天的前端生态系统功能多样，而且非常复杂。 因此，当实现真正的产品时，这种直接的解决方案还不够。</p><h3 id="要解决的问题"><a href="#要解决的问题" class="headerlink" title="要解决的问题"></a>要解决的问题</h3><p>虽然这篇文章只是一个想法，但我开始使用Reddit讨论这个想法。 感谢社区和他们的回复，我可以列出一些需要解决的问题，我将尝试逐一描述。</p><p><em>当我们拥有一个完全独立的独立<strong>微应用</strong>时，如何创建无缝且一致的UI体验？</em></p><p>好吧，这个问题没有灵丹妙药的答案，但其中一个想法是创建一个共享的UI库，它也是一个独立的微应用。 通过这种方式，所有其他<strong>微应用</strong>将依赖于共享的UI库微应用。 在这种情况下，我们刚刚创建了一个共享依赖项，我们就杀死了独立<strong>微应用</strong>的想法。</p><p>另一个想法是在根级共享CSS自定义变量（ <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables" target="_blank" rel="noopener">CSS custom variables</a> ）。 此解决方案的优势在于应用之间的全局可配置主题。</p><p>或者我们可以简单地在应用团队之间共享一些SASS变量和混合。 这种方法的缺点是UI元素的重复实现，并且应该对所有<strong>微应用</strong>始终检查和验证类似元素的设计的完整性。</p><p><em>我们如何确保一个团队不会覆盖另一个团队编写的CSS？</em></p><p>一种解决方案是通过CSS选择器名称进行CSS定义，这些名称由微应用名称精心选择。 通过将该范围任务放在<strong>拼接层</strong>上将减少开发开销，但会增加<strong>拼接层</strong>的责任。</p><p>另一种解决方案可以是强制每个微应用成为自定义Web组件（<a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements" target="_blank" rel="noopener">custom web component</a>）。 这个解决方案的优点是浏览器完成了范围设计，但需要付出代价：使用shadow DOM进行服务器端渲染几乎是不可能的。 此外，自定义元素没有100％的<a href="https://caniuse.com/#search=custom%20elements" target="_blank" rel="noopener">浏览器支持</a>，特别是IE。</p><p><em>我们应该如何在微应用之间共享全局信息？</em></p><p>这个问题指出了关于这个主题的最关注的问题之一，但解决方案非常简单：HTML 5具有相当强大的功能，大多数前端开发人员都不知道。 例如，<strong>自定义事件（custom events）</strong> 就是其中之一，它是在微应用中共享信息的解决方案。</p><p>或者，任何共享的pub-sub实现或T39可观察的实现都可以实现。 如果我们想要一个更复杂的全局状态处理程序，我们可以实现共享的微型Redux，通过这种方式我们可以实现更多的相应式架构。</p><p><em>如果所有微应用都是独立应用，我们如何进行客户端路由？</em></p><p>这个问题取决于设计的每个实现, 所有主要的现代框架都通过使用浏览器历史状态在客户端提供强大的路由机制, 问题在于哪个应用负责路由以及何时。</p><p>我目前的实用方法是创建一个共享客户端路由器，它只负责顶级路由，其余路由器属于相应的微应用。 假设我们有 <code>/content/:id</code> 路由定义。 共享路由器将解析 <code>/content</code>，已解析的路由将传递到ContentMicroApp。 ContentMicroApp是一个独立的服务器，它将仅使用 <code>/:id</code> 进行调用。</p><p><em>我们必须是服务器端渲染，但是有可能使用微前端吗？</em></p><p>服务器端呈现是一个棘手的问题。 如果你正在考虑iframes缝合<strong>微应用</strong>然后忘记服务器端渲染。 同样，拼接任务的Web组件也不比iframe强大。 但是，如果每个<strong>微应用</strong>能够在服务器端呈现其内容，那么<strong>拼接层</strong>将仅负责连接服务器端的HTML片段。</p><p><em>与传统环境集成至关重要！ 但是怎么样？</em></p><p>为了整合遗留系统，我想描述我自己的策略，我称之为“ <em>渐进式入侵</em> ”。</p><p>首先，我们必须实现拼接层，它应该具有透明代理的功能。 然后我们可以通过声明一个通配符路径将遗留系统定义为<strong>微应用</strong>：<em>LegacyMicroApp</em> 。 因此，所有流量都将到达拼接层，并将透明地代理到旧系统，因为我们还没有任何其他微应用。</p><p>下一步将是我们的 <em>第一次逐步入侵</em> ：我们将从LegacyMicroApp中删除主要导航并用依赖项替换它。 这种依赖关系将是一个使用闪亮的新技术实现的<strong>微应用</strong>：<em>NavigationMicroApp</em> 。</p><p>现在，拼接层将每个路径解析为 <em>Legacy Micro App</em> ，它将依赖关系解析为 <em>Navigation MicroApp</em> ，并通过连接这两个来为它们提供服务。</p><p>然后通过主导航遵循相同的模式来为引导下一步。</p><p>然后我们将继续从Legacy MicroApp中获取逐步重复以上操作，直到没有任何遗漏。</p><p><em>如何编排客户端，这样我们每次都不需要重新加载页面？</em></p><p><strong>拼接层</strong>解决了服务器端的问题，但没有解决客户端问题。 在客户端，在将已粘贴的片段作为无缝HTML加载后，我们不需要每次在URL更改时加载所有部分。 因此，我们必须有一些异步加载片段的机制。 但问题是，这些片段可能有一些依赖关系，这些依赖关系需要在客户端解决。 这意味着微前端解决方案应提供加载<strong>微应用</strong>的机制，以及依赖注入的一些机制。</p><hr><p>根据上述问题和可能的解决方案，我可以总结以下主题下的所有内容：</p><p><strong>客户端</strong></p><ul><li>编排</li><li>路由</li><li>隔离微应用</li><li>应用之间通信</li><li>微应用UI之间的一致性</li></ul><p><strong>服务端</strong></p><ul><li>服务端渲染</li><li>路由</li><li>依赖管理</li></ul><h3 id="灵活、强大而简单的架构"><a href="#灵活、强大而简单的架构" class="headerlink" title="灵活、强大而简单的架构"></a>灵活、强大而简单的架构</h3><p><img src="https://user-images.githubusercontent.com/10891613/60702255-f938b300-9f30-11e9-80c2-5e2470b6edcd.jpg" alt></p><p>所以，这篇文章还是很值得期待的！ 微前端架构的基本要素和要求终于显现！</p><p>在这些要求和关注的指导下，我开始开发一种名为microfe的解决方案。 😎在这里，我将通过抽象的方式强调其主要组件来描述该项目的架构目标。</p><p>它很容易从客户端开始，它有三个独立的主干结构：<em>AppsManager，</em> <em>Loader，</em> <em>Router</em> 和一个额外的<em>MicroAppStore。</em></p><p><img src="https://user-images.githubusercontent.com/10891613/60702174-b4ad1780-9f30-11e9-9bdb-d3baefd54981.jpg" alt></p><h3 id="AppsManager"><a href="#AppsManager" class="headerlink" title="AppsManager"></a>AppsManager</h3><p>AppsManager 是客户端微应用编排的核心。 AppsManager的主要功能是创建依赖关系树。 当解决了微应用的所有依赖关系时，它会实例化微应用。</p><h3 id="Loader"><a href="#Loader" class="headerlink" title="Loader"></a>Loader</h3><p>客户端微应用编排的另一个重要部分是Loader。 加载器的责任是从服务器端获取未解析的微应用。</p><h3 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h3><p>为了解决客户端路由问题，我将 Router 引入了 <strong><em>microfe</em></strong>。 与常见的客户端路由器不同，<strong><em>microf</em></strong> 的功能有限，它不解析页面而是微应用。 假设我们有一个URL <code>/content/detail/13</code> 和一个ContentMicroApp。 在这种情况下，<strong><em>microfe</em></strong> 将URL解析为 <code>/content/</code>，它将调用ContentMicroApp <code>/detail/13</code> URL部分。</p><h3 id="MicroAppStore"><a href="#MicroAppStore" class="headerlink" title="MicroAppStore"></a>MicroAppStore</h3><p>为了解决微应用到微应用客户端的通信，我将MicroAppStore引入了 <strong><em>microfe</em></strong>。 它具有与Redux库类似的功能，区别在于：它对异步数据结构更改和reducer 声明更灵活。</p><hr><p>服务器端部分在实现上可能稍微复杂一些，但结构更简单。 它只包含两个主要部分 <em>StitchingServer</em> 和许多<em>MicroAppServer。</em></p><h3 id="MicroAppServer"><a href="#MicroAppServer" class="headerlink" title="MicroAppServer"></a>MicroAppServer</h3><p><img src="/images/placeholder.png" alt data-src="https://user-images.githubusercontent.com/10891613/60702407-88de6180-9f31-11e9-9698-8fd841967671.jpg" class="lazyload"></p><p><em>MicroAppServer</em> 的最小功能可以概括为 <em>init</em> 和 <em>serve。</em></p><p>虽然 <em>MicroAppServer</em> 首先启动它应该做的是使用 <em>微应用声明</em> 调用 <em>SticthingServer</em> 注册端点，该声明定义了 <em>MicroAppServer</em> 的微应用 <em>依赖关系，</em> <em>类型</em> 和 <em>URL架构。</em> 我认为没有必要提及服务功能，因为没有什么特别之处。</p><h3 id="StitchingServer"><a href="#StitchingServer" class="headerlink" title="StitchingServer"></a>StitchingServer</h3><p><img src="/images/placeholder.png" alt data-src="https://user-images.githubusercontent.com/10891613/60702852-a52ece00-9f32-11e9-9327-0b64a43b9dda.jpg" class="lazyload"></p><p><em>StitchingServer</em> 为 <em>MicroAppServers</em> 提供注册端点。 当 <em>MicroAppServer</em> 将自己注册到 <em>StichingServer</em> 时，<em>StichingServer</em> 会记录<em>MicroAppServer</em> 的声明。</p><p>稍后，<em>StitchingServer</em> 使用声明从请求的URL解析 <em>MicroAppServers。</em></p><p>解析M <em>icroAppServer</em> 及其所有依赖项后，CSS，JS和HTML中的所有相对路径都将以相关的 <em>MicroAppServer</em> 公共URL为前缀。 另外一步是为CSS选择器添加一个唯一的 <em>MicroAppServer</em> 标识符，以防止客户端的微应用之间发生冲突。</p><p>然后 <em>StitchingServer</em> 的主要职责就是：从所有收集的部分组成并返回一个无缝的HTML页面。</p><h3 id="其他实现一览"><a href="#其他实现一览" class="headerlink" title="其他实现一览"></a>其他实现一览</h3><p>甚至在2016年被称为微前端之前，许多大公司都试图通过 <a href="https://www.facebook.com/notes/facebook-engineering/bigpipe-pipelining-web-pages-for-high-performance/389414033919/" target="_blank" rel="noopener">BigPipe</a> 来解决Facebook等类似问题。 如今这个想法正在获得验证。 不同规模的公司对该主题感兴趣并投入时间和金钱。 例如，Zalando开源了其名为Project Mosaic的解决方案。 我可以说，微型和 <a href="https://www.mosaic9.org/" target="_blank" rel="noopener">Project Mosaic</a>.遵循类似的方法，但有一些重要的区别。 虽然microfe采用完全分散的路由定义来增强每个微应用的独立性，但Project Mosaic更喜欢每条路径的集中路由定义和布局定义。 通过这种方式，Project Mosaic可以实现轻松的A/B测试和动态布局生成。</p><p>对于该主题还有一些其他方法，例如使用iframe作为拼接层，这显然不是在服务器端而是在客户端。 这是一个非常简单的解决方案，不需要太多的服务器结构和DevOps参与。 这项工作只能由前端团队完成，因此可以减轻公司的组织负担，同时降低成本。</p><p>已经有一个框架叫做 <em><a href="https://single-spa.js.org/" target="_blank" rel="noopener">single-spa</a>。</em> 该项目依赖于每个应用的命名约定来解析和加载微应用。 容易掌握想法并遵循模式。 因此，在您自己的本地环境中尝试该想法可能是一个很好的初步介绍。 但是项目的缺点是你必须以特定的方式构建每个微应用，以便他们可以很好地使用框架。</p><h3 id="最后的想法"><a href="#最后的想法" class="headerlink" title="最后的想法"></a>最后的想法</h3><p>我相信微前端话题会更频繁地讨论。 如果该主题能够引起越来越多公司的关注，它将成为大型团队的事实发展方式。 在不久的将来，任何前端开发人员都可以在这个架构上掌握一些见解和经验，这真的很有用。</p><h3 id="考虑贡献"><a href="#考虑贡献" class="headerlink" title="考虑贡献"></a>考虑贡献</h3><p>我正在大力尝试微前端，在我的脑海中有一个崇高的目标：创建一个微框架框架，可以解决大多数问题，而不会影响性能，易于开发和可测试性。 如果您有任何明智的想法，请不要犹豫，访问我的repo，打开问题或通过下面的评论或 Twitter DM 与我联系。 我会在那里帮助你！🙂</p><p>翻译：Vincent.W<br>原文：<a href="https://hackernoon.com/understanding-micro-frontends-b1c11585a297" target="_blank" rel="noopener">Understanding Micro Frontends</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 微前端 </tag>
            
            <tag> micro frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Review</title>
      <link href="/2018-Review/"/>
      <url>/2018-Review/</url>
      
        <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2019/1/25/16880d36eeb3f78d?w=624&amp;h=102&amp;f=png&amp;s=28571" alt></p><h1 id="One"><a href="#One" class="headerlink" title="One"></a>One</h1><p>一、众所周知年初各种币火的一塌糊涂，telegram 被称为 ”币圈微信“必不可少会对其搞周边开发，研究 telegram 相关，大概的需求点是 telegram 群管理机器人，telegram 陌生人拉群，要实现这些势必少不了对 telegram 开放 api  的研究，telegram 的协议很特殊，是独自研发的 MTProto。<a id="more"></a> telegram 好像说的有点多了，对 telegram api 一定了解后，主要入手点是 telegram web 版，看了一下竟然是开源的，而且是使用 angularjs 开发，通过我的魔改，实现了自动拉人与收集群及用户名信息，最终数据是1000+币圈群与100w用户名，当然这些信息本身都是公开的，我只对其进行整理归类。其中使用的技术点有 nodejs，mogodb，angularjs，少量的python。</p><h1 id="Two"><a href="#Two" class="headerlink" title="Two"></a>Two</h1><p>二、对微信网页版进行封包，实现登录多个微信，分析网页版微信接口，使用 electronjs 对网页版微信封包，其后客户有 windows xp的需求，由于 electronjs 最低兼容 win7 ，随后又使用了 nwjs 的老版本 0.14.7（当时版本是0.30.x）对聊天的客户端进行的封包，后来又遇到 发送的 mp4 文件无法播放，又对 nwjs 加入对mpeg的编译得以实现播放mp4，总之填了不少坑。其中使用的技术点有 electronjs，nwjs。</p><h1 id="Three"><a href="#Three" class="headerlink" title="Three"></a>Three</h1><p>三、使用 vue-cli 搭建项目，使用 express，mongoDB 完成接口服务，docker 部署上线，独自完成一个项目—代理商平台。</p><h1 id="Four"><a href="#Four" class="headerlink" title="Four"></a>Four</h1><p>四、尝试接纳 typescript ，也是因为此前没有深入了解过 ts ，对其语法有一定误解，深入了解后，emm~ 真香，用 ts 重构了之前的项目。</p><h1 id="Five"><a href="#Five" class="headerlink" title="Five"></a>Five</h1><p>五、日常更新迭代，没有大的波澜。</p><h1 id="Seven"><a href="#Seven" class="headerlink" title="Seven"></a>Seven</h1><p>七、要实现一个 SSO（Single sign-on）单点登录服务，经过一番折腾，对 oauth2 了解了一番，最终使用 oauth2 中的 authorization code 模式实现了单点登录服务，服务架构包括 oauth2-server（认证服务），permission-server（权限中心服务），permission-ui（权限管理前端），server 端统一采用 ts，express，postgresql，权限采用 RBAC（Role-Based Access Control） 模型。</p><h1 id="Eight"><a href="#Eight" class="headerlink" title="Eight"></a>Eight</h1><p>八、赶在 vue-cli 3正式版刚发布，新项目尝鲜使用，重构了权限管理的前端。日常更新迭代，没有大的波澜。</p><h1 id="Nine"><a href="#Nine" class="headerlink" title="Nine"></a>Nine</h1><p>九、引入 easy-mock，私有化部署，培训 easy-mock 使用。日常更新迭代，没有大的波澜。</p><h1 id="Ten"><a href="#Ten" class="headerlink" title="Ten"></a>Ten</h1><p>十、官网升级改版。日常更新迭代，没有大的波澜。</p><h1 id="Eleven"><a href="#Eleven" class="headerlink" title="Eleven"></a>Eleven</h1><p>十一、繁忙的。公司内部进销存平台的构建，爬虫服务，url提取工具。server 端新的尝试，使用 koa 替换了 express。其中使用的技术点有koa， electronjs，ts，puppeteer，websocket。</p><h1 id="Twelve"><a href="#Twelve" class="headerlink" title="Twelve"></a>Twelve</h1><p>十二、寒冬已至，是个凝重又忧桑的月份，不少小伙伴们走了，然后，然后我接手了小伙伴们的项目……</p>]]></content>
      
      
      <categories>
          
          <category> review </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB4 事务 简单易懂的🌰</title>
      <link href="/MongoDB4-%E4%BA%8B%E5%8A%A1-%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%E7%9A%84%F0%9F%8C%B0/"/>
      <url>/MongoDB4-%E4%BA%8B%E5%8A%A1-%E7%AE%80%E5%8D%95%E6%98%93%E6%87%82%E7%9A%84%F0%9F%8C%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>mongodb 的事务是依靠 mongodb 连接的客户端 session 实现，事务执行的流程大致是<br>建立 session，通过 session startTransaction 启动事务，如果一系列事务都完成，那么 commitTransaction 完成事务操作，并结束当前事务 session；如果一系列事务中有任意事件失败， 那么 abortTransaction 中止事务，内部将已完成的任务回退到修改之前，并结束当前事务 session。<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">session = client.startSession();</span><br><span class="line">session.startTransaction();</span><br><span class="line">session.commitTransaction();</span><br><span class="line">session.abortTransaction();</span><br><span class="line">session.endSession();</span><br></pre></td></tr></table></figure></p><h3 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h3><p>当前有两个用户，A 用户有余额 50 软妹币，B 用户有余额 10 软妹币，A 用户给 B 转账 10 ，场景设定 转账很安全，网络也很畅通，没有黑客拦截，没有发生意外，这次转账成功了，这时 A 用户余额剩下40 ，B 用户余额有20。A 感觉很安全，这时又给 B 转账，A 忘记自己余额有多少，给 B 转了 50 ，结果出错了。</p><p>在没有事务的情况下，操作数据库是这样的，1.A 账户的余额 -50，2. B 账户增加50. 当 A 余额不足时或在操作 A 账户成功后网络发生错误，B 账户的金额没能正确修改。</p><p>在有事务的情况下，即使在操作 A 账户金额后出现错误，则事务会将整个转账过程回退到修改之前。</p><h3 id="下载-mongodb4-并解压"><a href="#下载-mongodb4-并解压" class="headerlink" title="下载 mongodb4 并解压"></a>下载 mongodb4 并解压</h3><p><a href="https://www.mongodb.com/download-center#community" target="_blank" rel="noopener">https://www.mongodb.com/download-center#community</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.0.tgz</span><br><span class="line"></span><br><span class="line">tar -xzvf mongodb-osx-ssl-x86_64-4.0.0.tgz</span><br><span class="line"></span><br><span class="line">cd mongodb-osx-ssl-x86_64-4.0.0</span><br></pre></td></tr></table></figure><blockquote><p>!!! Transaction 只适用复制集 Replica Set， 所以要先搭建mongodb 复制集</p></blockquote><h3 id="启动多个-mongodb-实例"><a href="#启动多个-mongodb-实例" class="headerlink" title="启动多个 mongodb 实例"></a>启动多个 mongodb 实例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 创建data目录</span><br><span class="line">mkdir -p data/1301</span><br><span class="line">mkdir -p data/1302</span><br><span class="line">mkdir -p data/1303</span><br><span class="line"></span><br><span class="line">// 起三个 mongodb 实例</span><br><span class="line">./bin/mongod --replSet shard1  --dbpath=./data/1301 --port=1301</span><br><span class="line">./bin/mongod --replSet shard1  --dbpath=./data/1302 --port=1302</span><br><span class="line">./bin/mongod --replSet shard1  --dbpath=./data/1303 --port=1303</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/7/9/1647f1a58ed8c492?w=2946&amp;h=2138&amp;f=png&amp;s=3000404" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 配置复制集</span><br><span class="line">./bin/mongo --port 1301</span><br><span class="line">rsconf = &#123;_id: &quot;shard1&quot;, members: [ &#123; _id: 0, host: &quot;127.0.0.1:1301&quot; &#125; ] &#125;</span><br><span class="line">rs.initiate( rsconf )</span><br><span class="line">rs.add(&quot;127.0.0.1:1302&quot;)</span><br><span class="line">rs.add(&quot;127.0.0.1:1303&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/7/9/1647f1b57edd5e34?w=3814&amp;h=1894&amp;f=png&amp;s=1012311" alt></p><p><img src="https://user-gold-cdn.xitu.io/2018/7/9/1647f1c9b793bc2a?w=2706&amp;h=1472&amp;f=png&amp;s=460551" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//查看是否是主节点</span><br><span class="line">rs.isMaster()</span><br><span class="line"></span><br><span class="line">// 查看复制集状态</span><br><span class="line">rs.status()</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/7/9/1647f1ce6c4826ae?w=2706&amp;h=1472&amp;f=png&amp;s=460551" alt></p><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir mongodb4</span><br><span class="line">cd mongodb4</span><br><span class="line">npm init</span><br><span class="line">npm i mongodb -S</span><br><span class="line">vi app.js</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)  </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 连接DB</span></span><br><span class="line">  <span class="keyword">const</span> &#123; MongoClient &#125; = <span class="built_in">require</span>(<span class="string">'mongodb'</span>);</span><br><span class="line">  <span class="keyword">const</span> uri = <span class="string">'mongodb://localhost:1301/dbfour'</span>;</span><br><span class="line">  <span class="keyword">const</span> client = <span class="keyword">await</span> MongoClient.connect(uri, &#123; <span class="attr">useNewUrlParser</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> db = client.db();</span><br><span class="line">  <span class="keyword">await</span> db.dropDatabase();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'(1) 首先 删库 dbfour, then 跑路\n'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 插入两个账户并充值一些金额</span></span><br><span class="line">  <span class="keyword">await</span> db.collection(<span class="string">'Account'</span>).insertMany([</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">'A'</span>, <span class="attr">balance</span>: <span class="number">50</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">'B'</span>, <span class="attr">balance</span>: <span class="number">10</span> &#125;</span><br><span class="line">  ]);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'(2) 执行 insertMany,  A 充值 50, B 充值 10\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> transfer(<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="number">10</span>); <span class="comment">// 成功</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'(3) 然后 A 给 B 转账 10\n'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 余额不足 转账失败</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'(4) A 再次转账给 B 50\n'</span>)</span><br><span class="line">    <span class="keyword">await</span> transfer(<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="comment">//error.message; // "Insufficient funds: 40"</span></span><br><span class="line">    <span class="built_in">console</span>.log(error.message)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'\n(5) A 余额不够啊，所以这次转账操作不成功'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 转账逻辑</span></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">from, to, amount</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> session = client.startSession();</span><br><span class="line">    session.startTransaction();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> opts = &#123; session, <span class="attr">returnOriginal</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">      <span class="keyword">const</span> A = <span class="keyword">await</span> db.collection(<span class="string">'Account'</span>).</span><br><span class="line">        findOneAndUpdate(&#123; <span class="attr">name</span>: <span class="keyword">from</span> &#125;, &#123; <span class="attr">$inc</span>: &#123; <span class="attr">balance</span>: -amount &#125; &#125;, opts).</span><br><span class="line">        then(<span class="function"><span class="params">res</span> =&gt;</span> res.value);</span><br><span class="line">      <span class="keyword">if</span> (A.balance &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果 A 的余额不足，转账失败 中止事务</span></span><br><span class="line">        <span class="comment">// `session.abortTransaction()` 会撤销上面的 `findOneAndUpdate()` 操作</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Insufficient funds: '</span> + (A.balance + amount));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> B = <span class="keyword">await</span> db.collection(<span class="string">'Account'</span>).</span><br><span class="line">        findOneAndUpdate(&#123; <span class="attr">name</span>: to &#125;, &#123; <span class="attr">$inc</span>: &#123; <span class="attr">balance</span>: amount &#125; &#125;, opts).</span><br><span class="line">        then(<span class="function"><span class="params">res</span> =&gt;</span> res.value);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">await</span> session.commitTransaction();</span><br><span class="line">      session.endSession();</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">from</span>: A, <span class="attr">to</span>: B &#125;;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="comment">// 如果错误发生，中止全部事务并回退到修改之前</span></span><br><span class="line">      <span class="keyword">await</span> session.abortTransaction();</span><br><span class="line">      session.endSession();</span><br><span class="line">      <span class="keyword">throw</span> error; <span class="comment">//使其调用者 catch error</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/7/9/1647f1cc10aa9b99?w=1166&amp;h=482&amp;f=png&amp;s=79963" alt></p>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>async/await 优雅的错误处理方法</title>
      <link href="/async-await-%E4%BC%98%E9%9B%85%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/"/>
      <url>/async-await-%E4%BC%98%E9%9B%85%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2019/1/25/16880bce7dad3c17?w=1280&amp;h=400&amp;f=png&amp;s=19251" alt><br>一般情况下 async/await 在错误处理方面，主要使用 <code>try/catch</code>，像这样。<br><a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fetchData = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(<span class="string">'fetch data is me'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> fetchData()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'data is -&gt;'</span>, data)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err is -&gt;'</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure></p><p>这么看，感觉倒是没什么问题，如果是这样呢？有多个异步操作，需要对每个异步返回的 error 错误状态进行不同的处理，以下是示例代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fetchDataA = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(<span class="string">'fetch data is A'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fetchDataB = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(<span class="string">'fetch data is B'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fetchDataC = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            resolve(<span class="string">'fetch data is C'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> dataA = <span class="keyword">await</span> fetchDataA()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataA is -&gt;'</span>, dataA)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err is -&gt;'</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> dataB = <span class="keyword">await</span> fetchDataB()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataB is -&gt;'</span>, dataB)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err is -&gt;'</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> dataC = <span class="keyword">await</span> fetchDataC()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataC is -&gt;'</span>, dataC)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err is -&gt;'</span>, err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>这样写代码里充斥着 <code>try/catch</code>，有代码洁癖的你能忍受的了吗？这时可能会想到只用一个 <code>try/catch</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ... 这里 fetch 函数省略</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> dataA = <span class="keyword">await</span> fetchDataA()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataA is -&gt;'</span>, dataA)</span><br><span class="line">        <span class="keyword">const</span> dataB = <span class="keyword">await</span> fetchDataB()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataB is -&gt;'</span>, dataB)</span><br><span class="line">        <span class="keyword">const</span> dataC = <span class="keyword">await</span> fetchDataC()</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'dataC is -&gt;'</span>, dataC)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'err is -&gt;'</span>, err)</span><br><span class="line">        <span class="comment">// 难道要定义 err 类型，然后判断吗？？</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * if (err.type === 'dataA') &#123;</span></span><br><span class="line"><span class="comment">         *  console.log('dataA err is', err)</span></span><br><span class="line"><span class="comment">         * &#125;</span></span><br><span class="line"><span class="comment">         * ......</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>如果是这样写只会增加编码的复杂度，而且要多写代码，这个时候就应该想想怎么优雅的解决，<code>async/await</code> 本质就是 <code>promise</code> 的语法糖，既然是 <code>promise</code> 那么就可以使用 <code>then</code> 函数了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> fetchData = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                resolve(<span class="string">'fetch data is me'</span>)</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> fetchData().then(<span class="function"><span class="params">data</span> =&gt;</span> data ).catch(<span class="function"><span class="params">err</span> =&gt;</span> err)</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>在上面写法中，如果 fetchData 返回 resolve 正确结果时，data 是我们要的结果，如果是 reject 了，发生错误了，那么 data 是错误结果，这显然是行不通的，再对其完善。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> fetchData = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                resolve(<span class="string">'fetch data is me'</span>)</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> [err, data] = <span class="keyword">await</span> fetchData().then(<span class="function"><span class="params">data</span> =&gt;</span> [<span class="literal">null</span>, data] ).catch(<span class="function"><span class="params">err</span> =&gt;</span> [err, <span class="literal">null</span>])</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'err'</span>, err)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data'</span>, data)</span><br><span class="line">    <span class="comment">// err null</span></span><br><span class="line">    <span class="comment">// data fetch data is me</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>这样是不是好很多了呢，但是问题又来了，不能每个 await 都写这么长，写着也不方便也不优雅，再优化一下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> fetchData = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                resolve(<span class="string">'fetch data is me'</span>)</span><br><span class="line">            &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 抽离成公共方法</span></span><br><span class="line">    <span class="keyword">const</span> awaitWrap = <span class="function">(<span class="params">promise</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> promise</span><br><span class="line">            .then(<span class="function"><span class="params">data</span> =&gt;</span> [<span class="literal">null</span>, data])</span><br><span class="line">            .catch(<span class="function"><span class="params">err</span> =&gt;</span> [err, <span class="literal">null</span>])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> [err, data] = <span class="keyword">await</span> awaitWrap(fetchData())</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'err'</span>, err)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'data'</span>, data)</span><br><span class="line">    <span class="comment">// err null</span></span><br><span class="line">    <span class="comment">// data fetch data is me</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>将对 <code>await</code> 处理的方法抽离成公共的方法，在使用 <code>await</code> 调用 <code>awaitWrap</code> 这样的方法是不是更优雅了呢。如果使用 typescript 实现大概是这个样子。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function awaitWrap&lt;T, U = any&gt;(promise: Promise&lt;T&gt;): Promise&lt;[U | null, T | null]&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> promise</span><br><span class="line">        .then&lt;[<span class="literal">null</span>, T]&gt;<span class="function">(<span class="params">(data: T</span>) =&gt;</span> [<span class="literal">null</span>, data])</span><br><span class="line">        .catch&lt;[U, <span class="literal">null</span>]&gt;(<span class="function"><span class="params">err</span> =&gt;</span> [err, <span class="literal">null</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> async/await </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack 基础配置纪实</title>
      <link href="/webpack-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E7%BA%AA%E5%AE%9E/"/>
      <url>/webpack-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E7%BA%AA%E5%AE%9E/</url>
      
        <content type="html"><![CDATA[<p>webpack基础配置纪实<br><a id="more"></a></p><blockquote><p><a href="https://github.com/kingzez/webpack-demo" target="_blank" rel="noopener">GitHub 源码</a></p></blockquote><h2 id="entry-打包入口配置"><a href="#entry-打包入口配置" class="headerlink" title="entry 打包入口配置"></a>entry 打包入口配置</h2><p>接受三种方式：string， array， object</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./src/main.js'</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: [<span class="string">'./src/main.js'</span>, <span class="string">'./src/test.js'</span>]</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: <span class="string">'./src/main.js'</span>,</span><br><span class="line">        test: <span class="string">'./src/test.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="output-打包导出配置"><a href="#output-打包导出配置" class="headerlink" title="output 打包导出配置"></a>output 打包导出配置</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: <span class="string">'./src/main.js'</span>,</span><br><span class="line">        a: <span class="string">'./src.a.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: <span class="string">'./dist'</span>,</span><br><span class="line">        filename: <span class="string">'js/[name]-[chunkhash].js'</span>,</span><br><span class="line">        publicPath: <span class="string">'http://cdn.com/'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>path：打包后导出的文件路径</p><p>filename：打包后的文件名</p><pre><code>[name]对应文件名[hash]打包文件hash值[chunkhash]打包后每个单独文件的hash值</code></pre><p>publicPath：打包上线环境，用来替换文件路径</p><h2 id="plugins-插件系统-数组"><a href="#plugins-插件系统-数组" class="headerlink" title="plugins 插件系统(数组)"></a>plugins 插件系统(数组)</h2><p>html-webpack-plugin 自动化生成项目中的html页面</p><p>通过npm安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install html-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure><p>在webpack.config.js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: <span class="string">'./src/main.js'</span>,</span><br><span class="line">        a: <span class="string">'./src/a.js'</span>,</span><br><span class="line">        b: <span class="string">'./src/b.js'</span>,</span><br><span class="line">        c: <span class="string">'./src/c.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: <span class="string">'./dist'</span>,</span><br><span class="line">        filename: [name]-[chunkhash].js,</span><br><span class="line">        public: <span class="string">'http:cdn.com/'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">//创建一个htmlWebpackPlugin对象，并传入值</span></span><br><span class="line">        <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'index.html'</span>, <span class="comment">//生成html文件的模板文件</span></span><br><span class="line">            filename: <span class="string">'a.html'</span>, <span class="comment">//目标文件的名称</span></span><br><span class="line">            inject: <span class="literal">false</span>,  <span class="comment">//插入html文档中的位置，value分别为 true，false，head，body</span></span><br><span class="line">            title: <span class="string">'this is a.html'</span>, <span class="comment">// 传入的html的title</span></span><br><span class="line">            excludeChunks: [<span class="string">'b'</span>, <span class="string">'c'</span>] <span class="comment">// 引入的除b.js 与c.js以外的js文件</span></span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'index.html'</span>,</span><br><span class="line">            filename: <span class="string">'b.html'</span>,</span><br><span class="line">            inject: <span class="literal">false</span>,</span><br><span class="line">            title: <span class="string">'this is b.html'</span>,</span><br><span class="line">            excludeChunks: [<span class="string">'a'</span>, <span class="string">'c'</span>]</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> htmlWebpackPlugin(&#123;</span><br><span class="line">            template: <span class="string">'index.html'</span>,</span><br><span class="line">            filename: <span class="string">'c.html'</span>,</span><br><span class="line">            inject: <span class="literal">false</span>,</span><br><span class="line">            title: <span class="string">'this is c.html'</span>,</span><br><span class="line">            excludeChunks: [<span class="string">'a'</span>, <span class="string">'b'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.html模板文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在webpack中默认识别ejs --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- title的值为htmlWebpackPlugin传入的值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">htmlWebpackPlugin.options.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// js的行内引入方法</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%=</span> <span class="attr">compilation.assets</span>[<span class="attr">htmlWebpackPlugin.files.chunks.main.entry.substr</span>(<span class="attr">htmlWebpackPlugin.files.publicPath.length</span>)]<span class="attr">.source</span>() %&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 再通过循环遍历除去main.js 外联引入对应的js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">k</span> <span class="attr">in</span> <span class="attr">htmlWebpackPlugin.files.chunks</span>) &#123; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">k</span> != <span class="string">'main'</span>) &#123; %&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&lt;%= htmlWebpackPlugin.files.chunks[k].entry %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>html-webpack-plugin更多api移步<a href="https://github.com/jantimon/html-webpack-plugin" target="_blank" rel="noopener">官方api</a>查看</li></ul></blockquote><blockquote><ul><li>涉及webpack源码的<a href="https://github.com/jantimon/html-webpack-plugin/blob/master/examples/inline/template.jade#L10" target="_blank" rel="noopener">行内引入js</a></li></ul></blockquote><p>关于html-webpack-plugin插件的使用，工程源码为多页面应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/kingzez/webpack-demo.git</span><br></pre></td></tr></table></figure><p>首先切换到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout html-webpack-plugin</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看效果。</p><h2 id="Loaders"><a href="#Loaders" class="headerlink" title="Loaders"></a>Loaders</h2><blockquote><ul><li>babel-loader</li><li>css-loader</li><li>style-loader</li><li>postcss-loader</li><li>less-loader</li><li>sass-loader</li><li>html-loader</li><li>ejs-loader</li><li>file-loader</li><li>url-loader</li><li>image-webpack-loader</li></ul></blockquote><p>Loader中所有项目源码均为单页面应用。</p><p>Loaders 同样也是一个数组，需要定义在一个module中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="babel-loader"><a href="#babel-loader" class="headerlink" title="babel-loader"></a>babel-loader</h3><p>babel-loader 用于对ES6的代码的转换，首先在终端中执行npm<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev babel-loader babel-core</span><br></pre></td></tr></table></figure></p><p>然后再webpack.config.js中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    context: <span class="string">'__dirname'</span>,</span><br><span class="line">    entry: <span class="string">'./src/app.js'</span>,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: <span class="string">'./dist'</span>,</span><br><span class="line">        filename: <span class="string">'js/[name].bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">                loaders: [&#123;</span><br><span class="line">                    test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">                    loader: <span class="string">'babel'</span>,</span><br><span class="line">                    include: path.resolve(__dirname, <span class="string">'src'</span>), <span class="comment">//path.resolve node的api，用于处理路径；__dirname为当前项目目录，</span></span><br><span class="line">                    exclude: path.resolve(__dirname, <span class="string">'node_modules'</span>),</span><br><span class="line">                    query: &#123;</span><br><span class="line">                        presets: [<span class="string">'latest'</span>] <span class="comment">// babel的配置，可在webpack.config.js中配置也可在package.json或创建.babelrc文件</span></span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="css-loader-amp-style-loader-amp-postcss-loader"><a href="#css-loader-amp-style-loader-amp-postcss-loader" class="headerlink" title="css-loader &amp; style-loader &amp; postcss-loader"></a>css-loader &amp; style-loader &amp; postcss-loader</h3><p>css-loader 用于处理css模块的打包, style-loader 用于将打包好的css模块插入html中,安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev css-loader</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev style-loader</span><br></pre></td></tr></table></figure><p>在webpack.config.js中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        loader: <span class="string">'style-loader!css-loader'</span> <span class="comment">// loader处理顺序是css-loader打包css文件，后通过style-loader插入到html中</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在处理浏览器兼容的情况下，需要对各个浏览器加前缀，这时需要css后处理器postcss-loader，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev postcss-loader</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev autoprefixer // 自动添加前缀</span><br></pre></td></tr></table></figure><p>在webpack.config.js中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            loader: <span class="string">'style-loader!css-loader!postcss-loader'</span> <span class="comment">// loader处理顺序post-loader处理后加上浏览器的前缀，再由css-loader打包css文件，后通过style-loader插入到html中</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br><span class="line">postcss: [</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)(&#123;</span><br><span class="line">        browsers: [<span class="string">'last 5 versions'</span>] <span class="comment">//浏览器的最新五个版本</span></span><br><span class="line">    &#125;)</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>如果多个css文件之间存在<code>@import</code>，以上配置还需要修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">    loaders: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            loader: <span class="string">'style!css?importLoaders=1!postcss'</span> <span class="comment">// css-loader的importLoaders参数可以解决@import的css文件不处理的问题</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br><span class="line">postcss: [</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>)(&#123;</span><br><span class="line">        browsers: [<span class="string">'last 5 versions'</span>] <span class="comment">//浏览器的最新五个版本</span></span><br><span class="line">    &#125;)</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>关于babel-loader css-loader style-loader postcss-loader 的使用，工程源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout css-style-postcss-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看效果。</p><h3 id="less-loader-amp-sass-loader"><a href="#less-loader-amp-sass-loader" class="headerlink" title="less-loader &amp; sass-loader"></a>less-loader &amp; sass-loader</h3><p>less-loader 是对less文件进行处理打包，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev less-loader</span><br></pre></td></tr></table></figure><p>在webpack.config.js中加入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        loader: <span class="string">'style!css!postcss!less'</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>关于less-loader 的使用，工程源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout less-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看效果。</p><p>sass-loader同理不做过多介绍，简单看一下webpack.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">        loader: <span class="string">'style!css!postcss!sass'</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="html-loader-amp-ejs-loader"><a href="#html-loader-amp-ejs-loader" class="headerlink" title="html-loader &amp; ejs-loader"></a>html-loader &amp; ejs-loader</h3><p>html-loader 和 ejs-loader 用于处理模板文件，如果你在一个js文件中<code>import html from &#39;somewhere&#39;</code>，接着  <code>npm run webpack</code> 会看到报错信息，说没有处理器处理html文件，so 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev html-loader</span><br></pre></td></tr></table></figure><p>同样也可以处理ejs模板文件，该ejs模板文件的扩展名也可以自定义，这里我们定义<code>tpl</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev ejs-loader</span><br></pre></td></tr></table></figure><p>看一下在 webpack.config.js 中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">        &#123;</span><br><span class="line">            test: <span class="regexp">/\.html$/</span>,</span><br><span class="line">            loader: <span class="string">'html-loader'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            test: <span class="regexp">/\.tpl/</span>,</span><br><span class="line">            loader: <span class="string">'ejs-loader'</span></span><br><span class="line">        &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>关于html-loader ejs-loader 的使用，工程源码，可分别执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout less-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看html-loader的效果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout ejs-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看ejs-loader的效果。</p><h3 id="file-loader-amp-url-loader-amp-image-webpack-loader"><a href="#file-loader-amp-url-loader-amp-image-webpack-loader" class="headerlink" title="file-loader &amp; url-loader &amp; image-webpack-loader"></a>file-loader &amp; url-loader &amp; image-webpack-loader</h3><p>用于处理图片以及其他文件，例子中对图片处理，先用file-loader处理，那么安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev file-loader</span><br></pre></td></tr></table></figure><p>安装完成后对webpack.config.js配置进行修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">         test: <span class="regexp">/\.png|jpg|gif|svg$/i</span>, <span class="comment">//用于匹配各种扩展名结尾的文件</span></span><br><span class="line">         loader: <span class="string">'file-loader'</span>,</span><br><span class="line">         query: &#123;</span><br><span class="line">             name: <span class="string">'assets/[name]-[hash:5].[ext]'</span> <span class="comment">// 可选 用于将图片打包到assets文件夹中</span></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在根目录中的index.html css 中的<code>img</code> <code>background</code> 的图片引用一般为相对路径，最佳解决方案为线上的CDN绝对路径，在模板文件中的图片引用如果一定要使用相对路径的话，需要这样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"$&#123; require('../../assets/avator.png') &#125;"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>详细代码请看我的工程项目源码，关于 file-loader 的使用，工程源码，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout file-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看 file-loader 的效果。</p><p>url-loader 同样也可以实现图片的处理，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev url-loader</span><br></pre></td></tr></table></figure><p>安装完成后，看一下webpack.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.png|jpg|gif|svg$/i</span>, <span class="comment">// image 可用 file-loader 和 url-loader image-loader 处理</span></span><br><span class="line">        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">        query: &#123;</span><br><span class="line">            limit: <span class="number">20000</span>, <span class="comment">//定义限制图片打包大小，超过限制值，会将图片转成base64写入</span></span><br><span class="line">            name: <span class="string">'assets/[name]-[hash:5].[ext]'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>较好的方案是 url-loader 与 image-webpack-loader 结合使用，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev image-webpack-loader</span><br></pre></td></tr></table></figure><p>安装完成后，看一下webpack.config.js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loaders: [</span><br><span class="line">    &#123;</span><br><span class="line">        test: <span class="regexp">/\.png|jpg|gif|svg$/i</span>, <span class="comment">// image 可用 file-loader 和 url-loader image-loader 处理</span></span><br><span class="line">        loaders: [</span><br><span class="line">            <span class="string">'url-loader?limit=1000&amp;name=assets/[name]-[hash:5].[ext]'</span>,</span><br><span class="line">            <span class="string">'image-webpack'</span></span><br><span class="line">            ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>首先通过 image-webpackloader 压缩图片后处理再由url-loader处理，通过参数<code>limit</code>限制图片大小，图片超过limit限制的值将转成base64，如果没超过限制值，则正常打包图片。</p><p>关于 url-loader 与 image-webpack-loader 的使用，工程源码，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout image-webpack-loader</span><br></pre></td></tr></table></figure><p>并执行 <code>npm install</code> 完成依赖的安装后执行 <code>npm run webpack</code> 查看 url-loader 与 image-webpack-loader 结合的效果。</p><p>完整的webpack.config.js demo查看，请执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout release</span><br></pre></td></tr></table></figure><p>本纪实经过本人实际操作后的记录，算为入门级的实践。</p>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入浅出this的理解</title>
      <link href="/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAthis%E7%9A%84%E7%90%86%E8%A7%A3/"/>
      <url>/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAthis%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p><code>this</code>在js中一直是谜一样的存在着，在面试中也是经常会被问道，接下来总结下我所理解的<code>this</code>。<br><a id="more"></a>首先引入<a href="http://bonsaiden.github.io/JavaScript-Garden/zh/#function.this" target="_blank" rel="noopener">秘密花园</a>中对this的工作原理，文中指出有五种情况，分别是：</p><ul><li>全局范围内</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>;<span class="comment">//在全局范围内使用`this`，它将会指向全局对象</span></span><br></pre></td></tr></table></figure><ul><li>函数调用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo();<span class="comment">//this指向全局对象</span></span><br></pre></td></tr></table></figure><ul><li>方法调用</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.foo();<span class="comment">//this指向test对象</span></span><br></pre></td></tr></table></figure><ul><li>调用构造函数</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> foo();<span class="comment">//函数与new一块使用即构造函数，this指向新创建的对象</span></span><br></pre></td></tr></table></figure><ul><li>显式的设置this</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a, b, c</span>) </span>&#123;&#125;</span><br><span class="line"><span class="keyword">var</span> bar = &#123;&#125;;</span><br><span class="line">foo.apply(bar, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);<span class="comment">//this被设置成bar</span></span><br><span class="line">foo.call(bar, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);<span class="comment">//this被设置成bar</span></span><br></pre></td></tr></table></figure><h4 id="从函数调用理解this"><a href="#从函数调用理解this" class="headerlink" title="从函数调用理解this"></a>从函数调用理解this</h4><p>有这样一道题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">func: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> foo = obj.func;</span><br><span class="line">obj.func() <span class="comment">//this是obj</span></span><br><span class="line">foo() <span class="comment">//this是window</span></span><br></pre></td></tr></table></figure><p>解释函数结果为什么不一样？</p><p>这道题可以从函数调用来理解，从我看到的博文中有这样的解释，秘密花园中的函数调用，方法调用，显式的设置this都属于函数调用，相当于函数调用的三种方式，可以写成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foo(params);</span><br><span class="line">obj.child.foo(params);</span><br><span class="line">foo.call(context, params); <span class="comment">//apply同理</span></span><br></pre></td></tr></table></figure><p>而且前两种都可以写成第三种形式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">foo(params); =&gt;&gt; foo.call(<span class="literal">undefined</span>, params);</span><br><span class="line">obj.child.foo(); =&gt;&gt; obj.child.foo.call(obj.child, params);</span><br></pre></td></tr></table></figure><p>所以说函数调用都是<code>foo.call(context, params)</code>的变体，即函数调用只有一种。这样<code>this</code>的值就是文中的<code>context</code>，<code>this</code>就是你函数调用时传入的<code>context</code>。</p><p>举例代码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">foo();</span><br></pre></td></tr></table></figure><p>当你无法确认<code>this</code>指代的值时，转化成<code>call</code>形式会更好理解</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">foo.call(<span class="literal">undefined</span>); <span class="comment">//or foo.call();</span></span><br></pre></td></tr></table></figure><p>函数执行结果为<code>window</code>，在浏览器中有一条规定，传入<code>context</code>为<code>null</code>或<code>undefined</code>时，则为全局对象（window对象）；严格模式下<code>context</code>为<code>undefined</code>。</p><p>举例代码中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">func: <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.foo();</span><br></pre></td></tr></table></figure><p>转化为<code>call</code>形式为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">func: <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.foo.call(obj);</span><br></pre></td></tr></table></figure><p>很明显，<code>this</code>指代obj。</p><h4 id="Event-Handler-中的this"><a href="#Event-Handler-中的this" class="headerlink" title="Event Handler 中的this"></a>Event Handler 中的this</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn.addEventListener(<span class="string">'click'</span> ,<span class="function"><span class="keyword">function</span> <span class="title">handler</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// 请问这里的 this 是什么</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>handler 中的<code>this</code>是什么？用上面的方法好像没法转化了，因为不知道<code>addEventListener</code>内源码实现，查看文档<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener#The_value_of_this_within_the_handler" target="_blank" rel="noopener">MDN</a></p><blockquote><p>通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。</p></blockquote><blockquote><p>当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。</p></blockquote><p>所以可以假设浏览器addEventListener是这样实现的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当事件被触发时</span></span><br><span class="line">handler.call(event.currentTarget, event) <span class="comment">// this =&gt; event.currentTarget</span></span><br></pre></td></tr></table></figure><p>以上就是对<code>this</code>的理解。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> this </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用相关集锦</title>
      <link href="/git%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3%E9%9B%86%E9%94%A6/"/>
      <url>/git%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3%E9%9B%86%E9%94%A6/</url>
      
        <content type="html"><![CDATA[<p>总结之前写过的git相关文章，编成目录，也方便自己查看<br><a id="more"></a></p><ol><li><a href="/2015/08/22/git创建ssh key/">Git创建ssh key</a></li><li><a href="/2015/08/23/git push冲突时解决方法/">git push冲突时解决方法或通过fetch来更新分支代码</a></li><li><a href="/2015/10/18/CentOS下搭建git服务器/">CentOS下搭建Git服务器</a></li><li><a href="/2015/10/19/如何完全删除gitosis/">如何完全删除gitosis</a></li><li><a href="/2015/12/20/人称git核弹级 filter-branch/">人称Git核弹级 filter-branch</a></li><li><a href="/2017/03/20/git-pull-强制覆盖local/">git-pull-强制覆盖local</a></li><li><a href="/2017/04/10/git重写最近一次历史/">Git重写最近一次历史</a></li><li><a href="/2017/04/10/Git-忽略已跟踪文件的改动/">Git忽略已跟踪文件的改动</a></li><li><a href="/2017/04/09/git-stash-用于保存和恢复工作进度/">git stash 用于保存和恢复工作进度</a></li></ol><blockquote><p>“git merge” used to allow merging two branches that have no common base by default, which led to a brand new history of an existing project created and then get pulled by an <!--more--> unsuspecting maintainer, which allowed an unnecessary parallel history merged into the existing project. The command has been taught not to allow this by default, with an escape hatch –allow-unrelated-histories option to be used in a rare event that merges histories of two projects that started their lives independently.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge --allow-unrelated-histories 允许合并无关历史记录的分支，比如两个项目</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git忽略已跟踪文件的改动</title>
      <link href="/Git-%E5%BF%BD%E7%95%A5%E5%B7%B2%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%94%B9%E5%8A%A8/"/>
      <url>/Git-%E5%BF%BD%E7%95%A5%E5%B7%B2%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%94%B9%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>在实际使用中，有时候不可避免会有操作失误，将系统文件添加到版本库中，这时要怎么忽略已跟踪的文件？通过以下步骤：<br><a id="more"></a></p><ul><li>从 Git 的数据库中删除对于该文件的追踪；</li><li>把对应的规则写入 .gitignore，让忽略真正生效；</li><li>commit＋push。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --assume-unchanged</span><br></pre></td></tr></table></figure></li></ul><p>作用是将此文件移出版本控制，git不会记录此文件的修改，这样再将该文件加到<code>.ignore</code>中，与之对应的是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git update-index --no-assume-unchanged</span><br></pre></td></tr></table></figure></p><p>如果是操作失误，即将操作失误移出版本控制的文件重新标识为git可记录的文件</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git重写最近一次历史</title>
      <link href="/git%E9%87%8D%E5%86%99%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E5%8E%86%E5%8F%B2/"/>
      <url>/git%E9%87%8D%E5%86%99%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>假设你刚刚提交的一个commit中有个错误，想修改一下commit的message，但是又不想在修改无意义的文件再次commit，这时需要使用命令<code>--amend</code>即重写最近的一次commit历史。<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend -m <span class="string">"your new commit message"</span></span><br></pre></td></tr></table></figure></p><p>在amend之后，commit的时间不会被重写，如果想要重写commit的时间需要使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend --reset-author</span><br></pre></td></tr></table></figure></p><p>其中需要注意的是amend命令重写上一个commit，所以在已经push了上一个commit的情况下，尽可能的不要使用amend。如果你执意要amend已经push的commit，一定要保证这个commit所在的分支只有你一个人，否则将给其他人带来毁灭性的打击，在amend之后使用<code>git push --force</code>。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git stash 用于保存和恢复工作进度</title>
      <link href="/git-stash-%E7%94%A8%E4%BA%8E%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D%E5%B7%A5%E4%BD%9C%E8%BF%9B%E5%BA%A6/"/>
      <url>/git-stash-%E7%94%A8%E4%BA%8E%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D%E5%B7%A5%E4%BD%9C%E8%BF%9B%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>git stash 用于保存和恢复工作进度<br><a id="more"></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><p>保存当前的工作进度。会分别对暂存区和工作区的状态进行保存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash save "message..."</span><br></pre></td></tr></table></figure><p>这条命令实际上是第一条 <code>git stash</code> 命令的完整版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash list</span><br></pre></td></tr></table></figure><p>显示进度列表。此命令显然暗示了git stash 可以多次保存工作进度，并用在恢复时候进行选择</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop [--index] [\&lt;stash&gt;]</span><br></pre></td></tr></table></figure><p>如果不使用任何参数，会恢复最新保存的工作进度，并将恢复的工作进度从存储的工作进度列表中清除。</p><p>如果提供<stash>参数（来自 <code>git stash list</code> 显示的列表），则从该 <code>&lt;stash&gt;</code> 中恢复。恢复完毕也将从进度列表中删除 <code>&lt;stash&gt;</code>。</stash></p><p>选项–index 除了恢复工作区的文件外，还尝试恢复暂存区。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash apply [--index] [\&lt;stash&gt;]</span><br></pre></td></tr></table></figure><p>除了不删除恢复的进度之外，其余和 <code>git stash pop</code> 命令一样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git stash clear</span><br></pre></td></tr></table></figure><p>删除所有存储的进度</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git pull 强制覆盖本地文件</title>
      <link href="/git-pull-%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96local/"/>
      <url>/git-pull-%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96local/</url>
      
        <content type="html"><![CDATA[<p>git pull 强制覆盖本地文件<br><a id="more"></a>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到<code>git fetch</code>命令。<code>git fetch</code>命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。<br>默认情况下，<code>git fetch</code>取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>Done!😄</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>严格模式·Strict mode</title>
      <link href="/Strict-mode/"/>
      <url>/Strict-mode/</url>
      
        <content type="html"><![CDATA[<p>ECMAScript5的严格模式是JavaScript中的一种限制性更强的变种方式。严格模式不是一个子集：它在语义上与正常代码有着明显的差异。<a id="more"></a>不支持严格模式的浏览器与支持严格模式的浏览器行为上也不一样，所以不要在未经严格模式特性测试情况下使用严格模式。严格模式可以与非严格模式共存，所以脚本可以逐渐的选择性加入严格模式。</p><p>严格模式在语义上与正常的JavaScript有一些不同。首先，严格模式会将JavaScript陷阱直接变成明显的错误。其次，严格模式修正了一些引擎难以优化的错误：同样的代码有些时候严格模式下会比非严格模式下更快。第三，严格模式禁用了一些有可能在未来版本中定义的语法。</p><p>如果你想让你的JavaScript代码在严格模式下运行，可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode" target="_blank" rel="noopener">转换成严格模式</a></p><blockquote><p>有时，你会看到符合规范的、非严格模式被称为”懒散模式”，这不是官方术语，但你应该注意到它</p></blockquote><h2 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h2><p>严格模式可以应用到整个script标签或个别函数中。不要再封闭大括号<code>{}</code>内这样做，在这样的上下文中这么做是没有任何效果的。在<code>eval</code>代码，Function代码，时间处理属性，传入setTimeout方法的字符串和包含整个脚本的块中开启严格模式会如预期一样工作。</p><h3 id="为某个script标签开启严格模式"><a href="#为某个script标签开启严格模式" class="headerlink" title="为某个script标签开启严格模式"></a>为某个script标签开启严格模式</h3><p>为整个script标签开启严格模式，需要在所有语句之前放一个特定语句<code>&quot;use strict&quot;;</code>或<code>&#39;use strict&#39;;</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 整个语句都开启严格模式的语法</span></span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> v = <span class="string">"Hi!  I'm a strict mode script!"</span>;</span><br></pre></td></tr></table></figure><p>这种语法存在陷阱，不能盲目的合并冲突代码。试想合并一个严格模式的脚本和一个非严格模式的脚本：合并后的脚本代码看起来是严格模式。反之亦然：非严格合并严格看起来是非严格的。合并均为严格模式的脚本或均为非严格模式的都没问题，只有在合并严格模式与非严格模式有可能有问题。建议按一个个函数去开启严格模式（至少在学习的过渡期要这样做）。</p><p>您也可以将整个脚本的内容用一个函数包括起来，然后在这个外部函数中使用严格模式。这样做就可以消除合并的问题，但是这就意味着您必须要在函数作用域外声明一个全局变量。</p><h3 id="为某个函数开启严格模式"><a href="#为某个函数开启严格模式" class="headerlink" title="为某个函数开启严格模式"></a>为某个函数开启严格模式</h3><p>同样的，要给某个函数开启严格模式，得把<code>&quot;use strict&quot;</code>;  (或 <code>&#39;use strict&#39;;</code> )声明一字不漏地放在函数体所有语句之前。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">// 函数级别严格模式语法</span></span><br><span class="line"><span class="meta">  'use strict'</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">nested</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"And so am I!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">"Hi!  I'm a strict mode function!  "</span> + nested();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">notStrict</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">"I'm not strict."</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="严格模式有哪些不同"><a href="#严格模式有哪些不同" class="headerlink" title="严格模式有哪些不同"></a>严格模式有哪些不同</h2><p>严格模式同时改变了语法及运行时行为。变化通常分为这几类：将问题直接转化为错误（如语法错误或运行时错误）, 简化了如何为给定名称的特定变量计算，简化了 <code>eval</code> 以及 <code>arguments</code>, 将写”安全“JavaScript的步骤变得更简单，以及改变了预测未来ECMAScript行为的方式。</p><h3 id="将拼写错转成异常"><a href="#将拼写错转成异常" class="headerlink" title="将拼写错转成异常"></a>将拼写错转成异常</h3><p>在严格模式下, 先前被接受的拼写错误将会被认为是异常. JavaScript被设计为能使新人开发者更易于上手, 所以有时候会给本来错误操作赋予新的不报错误的语义(non-error semantics). 有时候这可以解决当前的问题, 但有时候却会给以后留下更大的问题. 严格模式则把这些失误当成错误, 以便可以发现并立即将其改正.</p><p>首先，严格模式下无法在意外创建全局变量。在普通的JavaScript里面给一个拼写错误的变量名赋值会使全局对象新增一个属性并继续“工作”（尽管后面可能出错：在现在的JavaScript中有可能）。严格模式中意外创建全局变量被抛出错误替代：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line">                       <span class="comment">// 假如有一个全局变量叫做mistypedVariable</span></span><br><span class="line">mistypedVaraible = <span class="number">17</span>; <span class="comment">// 因为变量名拼写错误</span></span><br><span class="line">                       <span class="comment">// 这一行代码就会抛出 ReferenceError</span></span><br></pre></td></tr></table></figure></p><p>其次，严格模式会引起静默失败（silently fail，注：不报错也没有任何效果）的赋值操作抛出异常。例如NaN是一个不可写的全局变量，在正常模式下，给NaN赋值不会产生任何作用，开发者也不会受到任何错误反馈。但在严格模式下，给NaN赋值会抛出异常，任何在正常模式下引起静默失败的赋值操作（给不可写属性赋值，给只读属性（getter-only）赋值，给不可扩展对象（non-extensible object）的新属性赋值）都会抛出异常。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给不可写属性赋值</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj1, <span class="string">"x"</span>, &#123; <span class="attr">value</span>: <span class="number">42</span>, <span class="attr">writable</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">obj1.x = <span class="number">9</span>; <span class="comment">// 抛出TypeError错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 给只读属性赋值</span></span><br><span class="line"><span class="keyword">var</span> obj2 = &#123; <span class="keyword">get</span> x() &#123; <span class="keyword">return</span> <span class="number">17</span>; &#125; &#125;;</span><br><span class="line">obj2.x = <span class="number">5</span>; <span class="comment">// 抛出TypeError错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 给不可扩展对象的新属性赋值</span></span><br><span class="line"><span class="keyword">var</span> fixed = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.preventExtensions(fixed);</span><br><span class="line">fixed.newProp = <span class="string">"ohai"</span>; <span class="comment">// 抛出TypeError错误</span></span><br></pre></td></tr></table></figure></p><p>第三, 在严格模式下, 试图删除不可删除的属性时会抛出异常(之前这种操作不会产生任何效果):<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"use strcit"</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="built_in">Object</span>.prototype; <span class="comment">// 抛出TypeError错误</span></span><br></pre></td></tr></table></figure></p><p>第四，在Gecko版本34之前，严格模式要求一个对象内的所有属性名在对象内必须唯一。正常模式下重名属性是允许的，最后一个重名的属性决定其属性值。因为只有最后一个属性起作用，当代码要去改变属性值而不是修改最后一个重名属性的时候，复制这个对象就产生一连串的bug。在严格模式下，重名属性被认为是语法错误：</p><blockquote><p>这个问题在ECMAScript6中已经不存在</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> o = &#123;<span class="attr">p</span>: <span class="number">1</span>, <span class="attr">p</span>:<span class="number">2</span>&#125;; <span class="comment">//语法错误</span></span><br></pre></td></tr></table></figure><p>第五，严格模式要求函数的参数名唯一，在正常模式下，最后一个重名参数名会掩盖之前的重名参数，之前的参数仍然可以通过<code>arguments[i]</code>来访问，还不是因为完全无法访问，然而在这种隐藏毫无意义而且可能是意料之外的（比如它可能本来是打错的），所以在严格模式下重名参数被认为是语法错误：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, a, c</span>)</span>&#123; <span class="comment">// !!! 语法错误</span></span><br><span class="line"><span class="meta">  "use strict"</span>;</span><br><span class="line">  <span class="keyword">return</span> a + b + c; <span class="comment">// 代码运行到这里会出错</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第六, 严格模式禁止八进制数字语法. ECMAScript并不包含八进制语法, 但所有的浏览器都支持这种以零(0)开头的八进制语法: 0644 === 420 还有 “\045” === “%”.在ECMAScript 6中支持为一个数字加”0o”的前缀来表示八进制数.<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  a = <span class="number">0o10</span>; <span class="comment">//ES6: 八进制</span></span><br></pre></td></tr></table></figure></p><p>有些新手开发者认为数字的前导零没有语法意义, 所以他们会用作对齐措施 — 但其实这会改变数字的意义! 八进制语法很少有用并且可能会错误使用, 所以严格模式下八进制语法会引起语法错误:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">015</span> + <span class="comment">// !!! 语法错误</span></span><br><span class="line">          <span class="number">197</span> +</span><br><span class="line">          <span class="number">142</span>;</span><br></pre></td></tr></table></figure></p><p>第七，ECMAScript 6中的严格模式禁止设置primitive值的属性.不采用严格模式,设置属性将会简单忽略(no-op),采用严格模式,将抛出TypeError错误<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="literal">false</span>.true = <span class="string">""</span>;<span class="comment">//TypeError</span></span><br><span class="line">(<span class="number">14</span>).sailing = <span class="string">"home"</span>;<span class="comment">//TypeError</span></span><br><span class="line"><span class="string">"with"</span>.you = <span class="string">"far away"</span>;<span class="comment">//TypeError</span></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></p><h3 id="简化变量的使用"><a href="#简化变量的使用" class="headerlink" title="简化变量的使用"></a>简化变量的使用</h3><p>严格模式简化了代码中变量名字映射到变量定义的方式. 很多编译器的优化是依赖存储变量X位置的能力：这对全面优化JavaScript代码至关重要. JavaScript有些情况会使得代码中名字到变量定义的基本映射只在运行时才产生. 严格模式移除了大多数这种情况的发生, 所以编译器可以更好的优化严格模式的代码.</p><p>首先, 严格模式禁用 with.  with 所引起的问题是块内的任何名称可以映射(map)到with传进来的对象的属性, 也可以映射到包围这个块的作用域内的变量(甚至是全局变量), 这一切都是在运行时决定的: 在代码运行之前是无法得知的. 严格模式下, 使用 with 会引起语法错误, 所以就不会存在 with 块内的变量在运行是才决定引用到哪里的情况了:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">17</span>;</span><br><span class="line"><span class="keyword">with</span> (obj) <span class="comment">// !!! 语法错误</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 如果没有开启严格模式，with中的这个x会指向with上面的那个x，还是obj.x？</span></span><br><span class="line">  <span class="comment">// 如果不运行代码，我们无法知道，因此，这种代码让引擎无法进行优化，速度也就会变慢。</span></span><br><span class="line">  x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一种取代 <code>with</code> 的简单方法是，将目标对象赋给一个短命名变量，然后访问这个变量上的相应属性。</p><p>第二, 严格模式下的 eval 不再为上层范围(surrounding scope,注:包围eval代码块的范围)引入新变量. 在正常模式下,  代码 eval(“var x;”) 会给上层函数(surrounding function)或者全局引入一个新的变量 x . 这意味着, 一般情况下,  在一个包含 eval 调用的函数内所有没有引用到参数或者局部变量的名称都必须在运行时才能被映射到特定的定义 (因为 eval 可能引入的新变量会覆盖它的外层变量). 在严格模式下 eval 仅仅为被运行的代码创建变量, 所以 eval 不会使得名称映射到外部变量或者其他局部变量:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">17</span>;</span><br><span class="line"><span class="keyword">var</span> evalX = <span class="built_in">eval</span>(<span class="string">"'use strict'; var x = 42; x"</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(x === <span class="number">17</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(evalX === <span class="number">42</span>);</span><br></pre></td></tr></table></figure></p><p>相应的，如果函数eval被在严格模式下的eval(…)以表达的形式调用时，其代码会被当做严格模式下的代码执行，当然也可以在代码中显式开启严格模式，但这样做并不是必须的。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict1</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">eval</span>(str); <span class="comment">//str中的代码在严格模式下运行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict2</span>(<span class="params">f, str</span>)</span>&#123;</span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">return</span> f(str);<span class="comment">// 没有直接调用eval(...): 当且仅当str中的代码开启了严格模式时</span></span><br><span class="line">                 <span class="comment">// 才会在严格模式下运行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nonstrict</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str); <span class="comment">// 当且仅当str中的代码开启了"use strict"，str中的代码才会在严格模式下运行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">strict1(<span class="string">"'Strict mode code!'"</span>);</span><br><span class="line">strict1(<span class="string">"'use strict'; 'Strict mode code!'"</span>);</span><br><span class="line">strict2(<span class="built_in">eval</span>, <span class="string">"'Non-strict code.'"</span>);</span><br><span class="line">strict2(<span class="built_in">eval</span>, <span class="string">"'use strict'; 'Strict mode code!'"</span>);</span><br><span class="line">nonstrict(<span class="string">"'Non-strict code.'"</span>);</span><br><span class="line">nonstrict(<span class="string">"'use strict'; 'Strict mode code!'"</span>);</span><br></pre></td></tr></table></figure></p><p>因此，在 eval 执行的严格模式代码下，变量的行为与严格模式下非 eval 执行的代码中的变量相同。</p><p>第三, 严格模式禁止删除声明变量。delete name 在严格模式下会引起语法错误：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x;</span><br><span class="line"><span class="keyword">delete</span> x; <span class="comment">// !!! 语法错误</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"var y; delete y;"</span>); <span class="comment">// !!! 语法错误</span></span><br></pre></td></tr></table></figure><h3 id="让eval和arguments变的简单"><a href="#让eval和arguments变的简单" class="headerlink" title="让eval和arguments变的简单"></a>让eval和arguments变的简单</h3><p>严格模式让arguments和eval少了一些奇怪的行为。两者在通常的代码中都包含了很多奇怪的行为： eval会添加删除绑定，改变绑定好的值，还会通过用它索引过的属性给形参取别名的方式修改形参. 虽然在未来的ECMAScript版本解决这个问题之前，是不会有补丁来完全修复这个问题，但严格模式下将eval和arguments作为关键字对于此问题的解决是很有帮助的。</p><p>首先, 名称 eval 和 arguments 不能通过程序语法被绑定(be bound)或赋值. 以下的所有尝试将引起语法错误:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="built_in">eval</span> = <span class="number">17</span>;</span><br><span class="line"><span class="built_in">arguments</span>++;</span><br><span class="line">++<span class="built_in">eval</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123; <span class="keyword">set</span> p(arguments) &#123; &#125; &#125;;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">eval</span>;</span><br><span class="line"><span class="keyword">try</span> &#123; &#125; <span class="keyword">catch</span> (<span class="built_in">arguments</span>) &#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">eval</span>) </span>&#123; &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arguments</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"><span class="keyword">var</span> y = <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123; &#125;;</span><br><span class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"arguments"</span>, <span class="string">"'use strict'; return 17;"</span>);</span><br></pre></td></tr></table></figure></p><p>第二，严格模式下，参数的值不会随 arguments 对象的值的改变而变化。在正常模式下，对于第一个参数是 arg 的函数，对 arg 赋值时会同时赋值给 arguments[0]，反之亦然（除非没有参数，或者 arguments[0] 被删除）。严格模式下，函数的 arguments 对象会保存函数被调用时的原始参数。arguments[i] 的值不会随与之相应的参数的值的改变而变化，同名参数的值也不会随与之相应的 arguments[i] 的值的改变而变化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">arguments</span>.callee; &#125;;</span><br><span class="line">f(); <span class="comment">// 抛出类型错误</span></span><br></pre></td></tr></table></figure><h3 id="“安全的”-JavaScript"><a href="#“安全的”-JavaScript" class="headerlink" title="“安全的” JavaScript"></a>“安全的” JavaScript</h3><p>严格模式下更容易写出“安全”的JavaScript。现在有些网站提供了方式给用户编写能够被网站其他用户执行的JavaScript代码。在浏览器环境下，JavaScript能够获取用户的隐私信息，因此这类Javascript必须在运行前部分被转换成需要申请访问禁用功能的权限。没有很多的执行时检查的情况，Javascript的灵活性让它无法有效率地做这件事。一些语言中的函数普遍出现，以至于执行时检查他们会引起严重的性能损耗。做一些在严格模式下发生的小改动，要求用户提交的JavaScript开启严格模式并且用特定的方式调用，就会大大减少在执行时进行检查的必要。</p><p>第一，在严格模式下通过<code>this</code>传递给一个函数的值不会被强制转换为一个对象。对一个普通的函数来说，<code>this</code>总会是一个对象：不管调用时<code>this</code>    它本来就是一个对象；还是用布尔值，字符串或者数字调用函数时函数里面被封装成对象的<code>this</code>；还是使用<code>undefined</code>或者<code>null</code>调用函数式<code>this</code>代表的全局对象（使用<code>call</code>, <code>apply</code>或者<code>bind</code>方法来指定一个确定的<code>this</code>）。这种自动转化为对象的过程不仅是一种性能上的损耗，同时在浏览器中暴露出全局对象也会成为安全隐患，因为全局对象提供了访问那些所谓安全的JavaScript环境必须限制的功能的途径。<strong>所以对于一个开启严格模式的函数，指定的<code>this</code>不再被封装为对象，而且如果没有指定<code>this</code>的话它值是<code>undefined</code></strong>：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"><span class="built_in">console</span>.assert(fun() === <span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(fun.call(<span class="number">2</span>) === <span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(fun.apply(<span class="literal">null</span>) === <span class="literal">null</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(fun.call(<span class="literal">undefined</span>) === <span class="literal">undefined</span>);</span><br><span class="line"><span class="built_in">console</span>.assert(fun.bind(<span class="literal">true</span>)() === <span class="literal">true</span>);</span><br></pre></td></tr></table></figure></p><p>第二，在严格模式中再也不能通过广泛实现的ECMAScript扩展“游走于”JavaScript的栈中。在普通模式下用这些扩展的话，当一个叫fun的函数正在被调用的时候，fun.caller是最后一个调用fun的函数，而且fun.arguments包含调用fun时用的形参。这两个扩展接口对于“安全”JavaScript而言都是有问题的，因为他们允许“安全的”代码访问”专有”函数和他们的（通常是没有经过保护的）形参。如果fun在严格模式下，那么fun.caller和fun.arguments都是不可删除的属性而且在存值、取值时都会报错：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">restricted</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">  "use strict"</span>;</span><br><span class="line">  restricted.caller;    <span class="comment">// 抛出类型错误</span></span><br><span class="line">  restricted.arguments; <span class="comment">// 抛出类型错误</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">privilegedInvoker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> restricted();</span><br><span class="line">&#125;</span><br><span class="line">privilegedInvoker();</span><br></pre></td></tr></table></figure><p>第三，严格模式下的arguments不会再提供访问与调用这个函数相关的变量的途径。在一些旧时的ECMAScript实现中arguments.caller曾经是一个对象，里面存储的属性指向那个函数的变量。这是一个安全隐患，因为它通过函数抽象打破了本来被隐藏起来的保留值；它同时也是引起大量优化工作的原因。出于这些原因，现在的浏览器没有实现它。但是因为它这种历史遗留的功能，arguments.caller在严格模式下同样是一个不可被删除的属性，在赋值或者取值时会报错：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a, b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">  "use strict"</span>;</span><br><span class="line">  <span class="keyword">var</span> v = <span class="number">12</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">arguments</span>.caller; <span class="comment">// 抛出类型错误</span></span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// 不会暴露v（或者a，或者b）</span></span><br></pre></td></tr></table></figure><h3 id="为未来的ECMAScript版本铺平道路"><a href="#为未来的ECMAScript版本铺平道路" class="headerlink" title="为未来的ECMAScript版本铺平道路"></a>为未来的ECMAScript版本铺平道路</h3><p>未来版本的ECMAScript很有可能会引入新语法，ECMAScript5中的严格模式就提早设置了一些限制来减轻之后版本改变产生的影响。如果提早使用了严格模式中的保护机制，那么做出改变就会变得更容易。</p><p>首先，在严格模式中一部分字符变成了保留的关键字。这些字符包括implements, interface, let, package, private, protected, public, static和yield。在严格模式下，你不能再用这些名字作为变量名或者形参名。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">package</span>(<span class="params">protected</span>)</span>&#123; <span class="comment">// !!!</span></span><br><span class="line"><span class="meta">  "use strict"</span>;</span><br><span class="line">  <span class="keyword">var</span> implements; <span class="comment">// !!!</span></span><br><span class="line"></span><br><span class="line">  interface: <span class="comment">// !!!</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">break</span> interface; <span class="comment">// !!!</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!!</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">static</span>) </span>&#123; <span class="string">'use strict'</span>; &#125; <span class="comment">// !!!</span></span><br></pre></td></tr></table></figure></p><p>两个针对Mozilla开发的警告：第一，如果你的JavaScript版本在1.7及以上（你的chrome代码或者你正确使用了<code>&lt;script type=&quot;&quot;&gt;</code>）并且开启了严格模式的话，因为<code>let</code>和<code>yield</code>是最先引入的关键字，所以它们会起作用。但是网络上用<code>&lt;script src=&quot;&quot;&gt;</code>或者<code>&lt;script&gt;</code>…<code>&lt;/script&gt;</code> 加载的代码，<code>let</code>或者<code>yield</code>都不会作为关键字起作用；第二，尽管ES5无条件的保留了<code>class</code>, <code>enum</code>, <code>expor</code>, <code>extends</code>, <code>import</code>和<code>super</code>关键字，在Firefox 5之前，Mozilla仅仅在严格模式中保留了它们。</p><p>其次，严格模式禁止了不在脚本或者函数层面上的函数声明。在浏览器的普通代码中，在“所有地方”的函数声明都是合法的。这并不在ES5规范中（甚至是ES3）！这是一种针对不同浏览器中不同语义的一种延伸。未来的ECMAScript版本很有希望制定一个新的，针对不在脚本或者函数层面进行函数声明的语法。在严格模式下禁止这样的函数声明对于将来ECMAScript版本的推出扫清了障碍：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></span><br><span class="line">  f();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></span><br><span class="line">  f2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 合法</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">eit</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// 同样合法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这种禁止放到严格模式中并不是很合适，因为这样的函数声明方式从ES5中延伸出来的。但这是ECMAScript委员会推荐的做法，浏览器就实现了这一点。</p><h2 id="浏览器的严格模式"><a href="#浏览器的严格模式" class="headerlink" title="浏览器的严格模式"></a>浏览器的严格模式</h2><p>主流浏览器现在实现了严格模式。但是不要盲目的依赖它，因为市场上仍然有大量的浏览器版本只部分支持严格模式或者根本就不支持（比如IE10之前的版本）。严格模式改变了语义。依赖这些改变可能会导致没有实现严格模式的浏览器中出现问题或者错误。谨慎地使用严格模式，通过检测相关代码的功能保证严格模式不出问题。最后，记得在支持或者不支持严格模式的浏览器中测试你的代码。如果你只在不支持严格模式的浏览器中测试，那么在支持的浏览器中就很有可能出问题，反之亦然。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 严格模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataTables 1.10.x使用指南</title>
      <link href="/DataTables-1-10-x%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/DataTables-1-10-x%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>DataTables是一个jQuery的表格插件。这是一个高度灵活的工具，依据的基础逐步增强，这将增加先进的互动控制，支持任何HTML表格。主要特点：<br><a id="more"></a></p><ul><li>自动分页处理</li><li>即时表格数据过滤</li><li>数据排序以及数据类型自动检测</li><li>自动处理列宽度</li><li>可通过CSS定制样式</li><li>支持隐藏列</li><li>易用</li><li>可扩展性和灵活性</li><li>国际化</li><li>动态创建表格</li><li>免费的</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>因为DataTables是依赖jquery，所以要先引入jquery，再引入<code>jquery.dataTables.min.js</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//code.jquery.com/jquery-1.12.4.js</span></span><br><span class="line">https:<span class="comment">//cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js</span></span><br></pre></td></tr></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>对于数据表能够增强HTML表格效果，表格必须是有效的，要有<code>&lt;thead&gt;</code>,<code>&lt;tbody&gt;</code>标签，可选的有<code>&lt;tfoot&gt;</code>标签。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"table_id"</span> <span class="attr">class</span>=<span class="string">"display"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1 Data 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1 Data 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 2 Data 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 2 Data 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="安装javascript-css文件"><a href="#安装javascript-css文件" class="headerlink" title="安装javascript/css文件"></a>安装javascript/css文件</h2><p>共三种不同的方式安装</p><ul><li>使用DataTables CDN</li><li>下载后本地引入</li><li>通过NPM或Bower包管理工具安装</li></ul><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"//cdn.datatables.net/1.10.13/css/jquery.dataTables.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf8"</span> <span class="attr">src</span>=<span class="string">"//cdn.datatables.net/1.10.13/js/jquery.dataTables.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h3><p>下载安装包<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/DataTables/datatables.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf8"</span> <span class="attr">src</span>=<span class="string">"/DataTables/datatables.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install datatables.net    <span class="comment"># Core library</span></span><br><span class="line">npm install datatables.net-dt <span class="comment"># Styling</span></span><br></pre></td></tr></table></figure><h2 id="初始化表格"><a href="#初始化表格" class="headerlink" title="初始化表格"></a>初始化表格</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready( <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#table_id'</span>).DataTable();</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><h1 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h1><ul><li>数据处理模式</li><li>数据类型</li><li>数据源</li></ul><h2 id="处理模式"><a href="#处理模式" class="headerlink" title="处理模式"></a>处理模式</h2><p>分为两种：客户端处理模式和服务端处理模式。</p><p>客户端处理模式：完整的数据集加载和数据处理都是在浏览器中完成。</p><p>服务端处理模式：通过Ajax请求数据绘画表格，服务端只返回数据，数据处理由服务端来完成。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>分为数组（Array）、对象（Object）、实例（new MyClass()）。</p><ul><li>数组：数组数据<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = [</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">        <span class="string">"System Architect"</span>,</span><br><span class="line">        <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"5421"</span>,</span><br><span class="line">        <span class="string">"2011/04/25"</span>,</span><br><span class="line">        <span class="string">"$3,120"</span></span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Garrett Winters"</span>,</span><br><span class="line">        <span class="string">"Director"</span>,</span><br><span class="line">        <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"8422"</span>,</span><br><span class="line">        <span class="string">"2011/07/25"</span>,</span><br><span class="line">        <span class="string">"$5,300"</span></span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><p>表格初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(&apos;#example&apos;).DataTable( &#123;</span><br><span class="line">    data: data</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>效果图为</p><ul><li>对象：对象数据<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[    &#123;</span><br><span class="line">        <span class="string">"name"</span>:       <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">        <span class="string">"position"</span>:   <span class="string">"System Architect"</span>,</span><br><span class="line">        <span class="string">"salary"</span>:     <span class="string">"$3,120"</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</span><br><span class="line">        <span class="string">"office"</span>:     <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"extn"</span>:       <span class="string">"5421"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"name"</span>:       <span class="string">"Garrett Winters"</span>,</span><br><span class="line">        <span class="string">"position"</span>:   <span class="string">"Director"</span>,</span><br><span class="line">        <span class="string">"salary"</span>:     <span class="string">"$5,300"</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/07/25"</span>,</span><br><span class="line">        <span class="string">"office"</span>:     <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"extn"</span>:       <span class="string">"8422"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ul><p>表格初始化为<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#example'</span>).DataTable( &#123;</span><br><span class="line">    data: data,</span><br><span class="line">    columns: [</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>效果图为</p><p>实例化：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Employee</span> (<span class="params"> name, position, salary, office </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.position = position;</span><br><span class="line">    <span class="keyword">this</span>.salary = salary;</span><br><span class="line">    <span class="keyword">this</span>._office = office;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.office = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._office;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#example'</span>).DataTable( &#123;</span><br><span class="line">    data: [</span><br><span class="line">        <span class="keyword">new</span> Employee( <span class="string">"Tiger Nixon"</span>, <span class="string">"System Architect"</span>, <span class="string">"$3,120"</span>, <span class="string">"Edinburgh"</span> ),</span><br><span class="line">        <span class="keyword">new</span> Employee( <span class="string">"Garrett Winters"</span>, <span class="string">"Director"</span>, <span class="string">"$5,300"</span>, <span class="string">"Edinburgh"</span> )</span><br><span class="line">    ],</span><br><span class="line">    columns: [</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>效果图如下</p><h2 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h2><ul><li>DOM (html文件)</li><li>Javascript</li><li>Ajax 数据源</li></ul><h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p>加载数据<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line">    ajax: <span class="string">'/api/myData'</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>可以使用json数据源，数组数据源，对象数据源。以下举例说明：</p><p>1.简单的数组数据<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[    &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">        <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</span><br><span class="line">        <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</span><br><span class="line">        <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"extn"</span>: <span class="string">"5421"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用方法如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line">ajax: &#123;</span><br><span class="line">        url: <span class="string">'/api/myData'</span>,</span><br><span class="line">        dataSrc: <span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    columns: [ ... ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>2.对象数据<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">            <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</span><br><span class="line">            <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</span><br><span class="line">            <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</span><br><span class="line">            <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</span><br><span class="line">            <span class="string">"extn"</span>: <span class="string">"5421"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用方法如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line">ajax: <span class="string">'/api/myData'</span>,</span><br><span class="line">    columns: [ ... ]</span><br><span class="line">&#125; );</span><br><span class="line"></span><br><span class="line"><span class="comment">// or!</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line">    ajax: &#123;</span><br><span class="line">        url: <span class="string">'/api/myData'</span>,</span><br><span class="line">        dataSrc: <span class="string">'data'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    columns: [ ... ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>3.对象数据对应关系<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;  <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">    <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</span><br><span class="line">    <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</span><br><span class="line">    <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</span><br><span class="line">    <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</span><br><span class="line">    <span class="string">"extn"</span>: <span class="string">"5421"</span></span><br><span class="line">&#125;</span><br><span class="line"> $(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line"> ajax: ...,</span><br><span class="line">    columns: [</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'state_date'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'extn'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><p>4.嵌套对象关系<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</span><br><span class="line">    <span class="string">"hr"</span>: &#123;</span><br><span class="line">        <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</span><br><span class="line">        <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</span><br><span class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"contact"</span>: &#123;</span><br><span class="line">        <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</span><br><span class="line">        <span class="string">"extn"</span>: <span class="string">"5421"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</span><br><span class="line">ajax: ...,</span><br><span class="line">    columns: [</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.position'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.salary'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.state_date'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'contact.office'</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">data</span>: <span class="string">'contact.extn'</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></p><h1 id="在线例子"><a href="#在线例子" class="headerlink" title="在线例子"></a><a href="https://www.datatables.net/examples/ajax/" target="_blank" rel="noopener">在线例子</a></h1><h1 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h1><p>使用案例说明配置项，以下是常用的配置项，详细请到官网<a href="https://www.datatables.net/" target="_blank" rel="noopener">https://www.datatables.net/</a>查询。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">var reportMonthtable = $(&apos;#monthReport&apos;).DataTable(&#123;</span><br><span class="line">    retrieve: true, //防止多次初始化</span><br><span class="line">    data: dataSet, //数据集</span><br><span class="line">    columns: [</span><br><span class="line">        &#123; &quot;data&quot;: &quot;ruleName&quot; &#125;,</span><br><span class="line">        &#123; &quot;data&quot;: &quot;mainWhere&quot; &#125;,</span><br><span class="line">        &#123; &quot;data&quot;: &quot;UV&quot; &#125;,</span><br><span class="line">        &#123; &quot;data&quot;: &quot;PV&quot; &#125;,</span><br><span class="line">        &#123; &quot;data&quot;: &quot;sessions&quot; &#125;</span><br><span class="line">    ], //表头名称</span><br><span class="line">    paging: true, //显示翻页</span><br><span class="line">    lengthChange: false, //关闭每页显示</span><br><span class="line">    &quot;info&quot;: false, //关闭当前显示表格信息</span><br><span class="line">    searching: false, //关闭搜索框</span><br><span class="line">    scrollY: 200, //自定义滚动高度</span><br><span class="line">    iDisplayLength: jtPageSize, //每页显示条数</span><br><span class="line">    order: [], //插件bug 取代默认值</span><br><span class="line">    columnDefs: [&#123;</span><br><span class="line">            orderable: false, //禁用排序</span><br><span class="line">            targets: [0, 1] //指定的列</span><br><span class="line">        &#125;,</span><br><span class="line">        // 将mainWhere列变为蓝色</span><br><span class="line">        &#123;</span><br><span class="line">            targets: [1], // 目标列位置，下标从0开始</span><br><span class="line">            data: &quot;mainWhere&quot;, // 数据列名</span><br><span class="line">            render: function(data, type, full) &#123; // 返回自定义内容</span><br><span class="line">                return &quot;&lt;span style=&apos;color:#337ab7;&apos;&gt;&quot; + data + &quot;&lt;/span&gt;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    bProcessing: true, //加载进度条</span><br><span class="line">    stateSave: true, //保存翻页状态</span><br><span class="line">    //语言配置</span><br><span class="line">    language: &#123;</span><br><span class="line">        sProcessing: &quot;正在加载中......&quot;,</span><br><span class="line">        sLengthMenu: &quot;每页显示 _MENU_ 条记录&quot;,</span><br><span class="line">        sZeroRecords: &quot;该时间段无统计数据&quot;,</span><br><span class="line">        sEmptyTable: &quot;该时间段无统计数据&quot;,</span><br><span class="line">        sInfoEmpty: &quot;&quot;,</span><br><span class="line">        sInfo: &quot;当前显示 _START_ 到 _END_ 条，共 _TOTAL_ 条记录&quot;,</span><br><span class="line">        sInfoFiltered: &quot;数据表中共为 _MAX_ 条记录&quot;,</span><br><span class="line">        sSearch: &quot;&quot;,</span><br><span class="line">        oPaginate: &#123;</span><br><span class="line">            sFirst: &quot;首页&quot;,</span><br><span class="line">            sPrevious: &quot;上一页&quot;,</span><br><span class="line">            sNext: &quot;下一页&quot;,</span><br><span class="line">            sLast: &quot;末页&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><p>结合项目中与angularjs结合使用，angular通过service获取后端数据，将数据集导入初始化中，但是该插件暂时不支持<code>promise</code>，只能通过变量数据集，这将导致数据变化后表格的数据不能及时更新，需要刷新页面才可以，这不是我们想要的效果，可以通过ui-router中的<code>$state</code>服务的<code>$state.reload</code>来实现reload操作，无需刷新页面即可达到数据变化后页面能够更新重绘。</p><h1 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h1><p><a href="https://www.datatables.net/" target="_blank" rel="noopener">https://www.datatables.net/</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js datatables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初试Mithril.js</title>
      <link href="/%E5%88%9D%E8%AF%95Mithril-js/"/>
      <url>/%E5%88%9D%E8%AF%95Mithril-js/</url>
      
        <content type="html"><![CDATA[<p>初试Mithril.js<a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;mithril&lt;/title&gt;</span><br><span class="line">    &lt;script src=&quot;node_modules/mithril/mithril.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// this simplicity , we use this component to namespace the model classes</span><br><span class="line">var todo = &#123;&#125;;</span><br><span class="line">// the Todo class has two properties</span><br><span class="line">todo.Todo = function(data) &#123;</span><br><span class="line">this.description = m.prop(data.description);</span><br><span class="line">this.done = m.prop(false);</span><br><span class="line">&#125;;</span><br><span class="line">// TodoList class is a list of Todo&apos;s</span><br><span class="line">todo.TodoList = Array;</span><br><span class="line">// the view-model tracks a running list of todos,</span><br><span class="line">// store a description for new todos before they are created</span><br><span class="line">// and takes care of the logic surrounding when adding is permitted</span><br><span class="line">// and clearing the input after adding a todo to the list</span><br><span class="line">todo.vm = (function() &#123;</span><br><span class="line">var vm = &#123;&#125;;</span><br><span class="line">vm.init = function() &#123;</span><br><span class="line">// a running list of todos</span><br><span class="line">vm.list = new todo.TodoList();</span><br><span class="line">// a slot to store the name of a new todo before it is created</span><br><span class="line">vm.description = m.prop(&quot;&quot;);</span><br><span class="line">// adds a todo to the list, and clears the description filed for user convenience</span><br><span class="line">vm.add = function() &#123;</span><br><span class="line">if (vm.description) &#123;</span><br><span class="line">vm.list.push(new todo.Todo(&#123;description: vm.description()&#125;));</span><br><span class="line">vm.description(&quot;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line">return vm;</span><br><span class="line">&#125;())</span><br><span class="line">// the controller defineds what part of the model is relevant for the current page</span><br><span class="line">// in our case, there&apos;s only one view-model that handles everything</span><br><span class="line">todo.controller = function() &#123;</span><br><span class="line">todo.vm.init()</span><br><span class="line">&#125;;</span><br><span class="line">// here is the view</span><br><span class="line">todo.view = function() &#123;</span><br><span class="line">return [</span><br><span class="line">m(&quot;input&quot;, &#123;onchange: m.withAttr(&quot;value&quot;, todo.vm.description), value: todo.vm.description()&#125;),</span><br><span class="line">m(&quot;button&quot;, &#123;onclick: todo.vm.add&#125;, &quot;Add&quot;),</span><br><span class="line">m(&quot;table&quot;, [</span><br><span class="line">todo.vm.list.map(function(task, index) &#123;</span><br><span class="line">return m(&quot;tr&quot;, [</span><br><span class="line">m(&quot;td&quot;, [</span><br><span class="line">m(&quot;input[type=checkbox]&quot;, &#123;onclick: m.withAttr(&quot;checked&quot;, task.done), checked: task.done()&#125;)</span><br><span class="line">]),</span><br><span class="line">m(&quot;td&quot;, &#123;style: &#123;textDecoration: task.done() ? &quot;line-through&quot; : &quot;none&quot;&#125;&#125;, task.description()),</span><br><span class="line">])</span><br><span class="line">&#125;)</span><br><span class="line">])</span><br><span class="line">]</span><br><span class="line">&#125;;</span><br><span class="line">// initialize the application</span><br><span class="line">m.mount(document.body, &#123;controller: todo.controller, view: todo.view&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mithril.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yarn A new package manager for JavaScript</title>
      <link href="/Yarn-A-new-package-manager-for-JavaScript-1/"/>
      <url>/Yarn-A-new-package-manager-for-JavaScript-1/</url>
      
        <content type="html"><![CDATA[<p>Facebook 开源了 yarn 这个新的 JavaScript 包管理工具，yarn 和 npm 做的是完全一样的事情：作为 nodejs 的包管理工具。既然是一样的事情，那么 yarn 必须有一些优点，才能说服大家去用。根据官方网站的介绍，yarn 有以下六项特点：<br><a id="more"></a><br>（2016 年 10 月 11 日）到今天（10月18）八天内达到14934star，这是何等的快速……</p><blockquote><p>离线模式（重要）</p></blockquote><p>如果之前已经安装过一个软件包，再次安装时就不用再从网络下载了。<br>这一点很重要，npm 饱受诟病的一点就是，每次安装依赖，都需要从网络下载一大堆东西，而且是全部重新下载。工程多的时候比较烦人。这下子可以节约大量时间了。</p><blockquote><p>依赖关系确定性（重要）</p></blockquote><p>在每一台机器上针对同一个工程安装依赖时，生成的依赖关系顺序和版本是一致的。<br>就是说我在另一台设备上对同样的工程安装依赖，或者把这台机器工程下的 node_modules 目录删除来重新安装依赖。由于关联依赖中，没有指定版本号的库，发生了版本更新，就会导致再次安装的依赖，其中具体某些软件包的版本是不一致的。 在这种情况下，你会发现原来能够正常运行的程序，忽然变得不能工作或一堆 BUG。<br>yarn 采用的解决方式是，引入了一个 yarn.lock 文件来应对这个问题。lock 机制在很多包管理中都有用到。例如 ruby 的 rubygems 就会生成 Gemfile.lock.<br>yarn.lock 会记录你安装的所有大大小小的软件包的具体版本号。只要你不删除 yarn.lock 文件，再次运行 yarn install 时，会根据其中记录的版本号获取所有依赖包。你可以把 yarn.lock 提交到版本库里，这样其他同事签出代码并运行 yarn install 时，可以保证大家安装的依赖都是完全一致的。<br>这就特别适合大型项目的多人协作开发和部署。</p><blockquote><p>更好的网络性能</p></blockquote><p>下载软件包时，会进行更好的排序，避免“请求瀑布”，最大限度提高网络利用率。</p><blockquote><p>多注册来源处理</p></blockquote><p>所有的依赖包，不管他被不同的库间接关联引用多少次，安装这个包时，只会从一个注册来源去装，要么是 npm 要么是 bower, 防止出现混乱不一致。</p><blockquote><p>网络弹性处理</p></blockquote><p>安装依赖的过程中，不会因为某个单次网络请求的失败导致整个安装挂掉（不由自主的要黑一下 npm）。当请求失败时会进行自动重试。</p><blockquote><p>扁平模式（重要）</p></blockquote><p>当关联依赖中包括对某个软件包的重复引用，在实际安装时将尽量避免重复的创建。</p><p>为了说明这个问题，我们假设目前工程依赖 A, B, C 三个库，而他们对某个库 somelib 存在这样的依赖关系：</p><p>A - somelib 1.4.x<br>B - somelib 1.6.x<br>C - somelib 1.6.x</p><p>如果要安装 ABC 三个库，那么 somelib 会存在版本冲突。npm 会在实际安装时，给三个库分别下载各自依赖的 somelib 版本。假设 npm 先安装了 A, 由于 A 依赖 somelib 1.4.x 版本，那么 1.4.x 会变成主版本。</p><p>再安装 B, C 时，由于 B, C 依赖的都不是 1.4.x, 于是安装完之后，关系就变成这个样子了：</p><p>node_modules<br>├── A<br>├── somelib 1.4.x<br>├── B<br>│  └── node_modules<br>│      └── somelib 1.6.x<br>└── C<br>    └── node_modules<br>        └── somelib 1.6.x</p><p>明明 B, C 都依赖 1.6.x 版本，实际上 npm 却要把这个版本保存两次，这样明显是对磁盘空间的浪费。我们把这种情况就称为“不扁平的”。尽管 npm 也提供了诸如 flat 等指令去支持“扁平化”处理，yarn 明显试图在这方面做得更好。</p><p>总结三大特点： 超快速、超级安全、超级可靠</p><p>（有没有感觉这猫忒怪……）</p><p>下面说一下安装使用：<br>yarn与npm相同，都是依靠package.json文件安装包。yarn要怎么安装呢？</p><p>macOS下：<br>首先需要先安装Node.js，如果已安装则略过。通过Homebrew安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install yarn</span><br></pre></td></tr></table></figure></p><p>设置PATH<br>需要终端中设置PATH环境变量，以便于全局使用。<br>添加<code>export PATH=&quot;$PATH:$HOME/.yarn/bin&quot;</code>到 profile中 (可能是 .profile, .bashrc, .zshrc, 等等)<br>测试一下~<br>yarn –version</p><p>Windows下：<br>首先需要先安装Node.js，如果已安装则略过。windows下有两种方式安装<br>1.下载.msi文件安装 <a href="https://yarnpkg.com/latest.msi" target="_blank" rel="noopener">https://yarnpkg.com/latest.msi</a><br>2.通过Chocolatey安装（chocolatey是windows下包管理软件，详情移步了解<a href="https://chocolatey.org/install）" target="_blank" rel="noopener">https://chocolatey.org/install）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install yarn</span><br></pre></td></tr></table></figure></p><p>设置PATH<br>添加<code>set PATH=%PATH%;C:\.yarn\bin</code> 到shell环境变量中</p><p>npm下快速安装<br>可以通过npm安装，非常方便<br>npm install -g yarn</p><p>设置PATH<br>Unix/Linux/macOS<br>需要终端中设置PATH环境变量，以便于全局使用。<br>添加 <code>export PATH=&quot;$PATH:$HOME/.yarn/bin&quot;</code>到 profile中 (可能是 .profile, .bashrc, .zshrc, 等等)<br>windows<br>添加<code>set PATH=%PATH%;C:\.yarn\bin</code>到shell环境变量中<br>测试一下~<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn --version</span><br></pre></td></tr></table></figure></p><p>安装之后，就可以愉快优雅的创建项目了~</p><p>创建一个新项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn init</span><br></pre></td></tr></table></figure><p>添加项目依赖包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add [package]</span><br><span class="line">yarn add [package]@[version]</span><br><span class="line">yarn add [package]@[tag]</span><br></pre></td></tr></table></figure><p>更新依赖包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn upgrade [package]</span><br><span class="line">yarn upgrade [package]@[version]</span><br><span class="line">yarn upgrade [package]@[tag]</span><br></pre></td></tr></table></figure><p>移除依赖包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn remove [package]</span><br></pre></td></tr></table></figure><p>安装项目依赖的所有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure></p><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install</span><br></pre></td></tr></table></figure><p>简单比较一下yarn与npm的命令<br>运行<code>yarn</code>运行相当于<code>npm install</code><br>运行  <code>yarn add &lt;name&gt;</code>运行相当于<code>npm install --save &lt;name&gt;</code></p><p>Reference：<br><a href="https://yarnpkg.com/" target="_blank" rel="noopener">https://yarnpkg.com/</a></p><p><a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener">https://github.com/yarnpkg/yarn</a></p><p><a href="https://code.facebook.com/posts/1840075619545360" target="_blank" rel="noopener">https://code.facebook.com/posts/1840075619545360</a></p><p><a href="https://zhuanlan.zhihu.com/p/22892675?from=timeline&amp;isappinstalled=0" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22892675?from=timeline&amp;isappinstalled=0</a></p><p><a href="https://www.zhihu.com/question/51502849" target="_blank" rel="noopener">https://www.zhihu.com/question/51502849</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>$scope与controller as区别</title>
      <link href="/scope%E4%B8%8Econtroller-as%E5%8C%BA%E5%88%AB/"/>
      <url>/scope%E4%B8%8Econtroller-as%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>AngularJS中controller的实现主要有两种方法：<br><a id="more"></a></p><ul><li>第一种为：我们熟悉的将model绑定到$scope上，在html页面中<code>ng-controller=&quot;SettingsController&quot;</code>。</li><li>第二种为：将方法和属性直接绑定到controller上，在html页面中<code>ng-controller=&quot;SettingsController as setting&quot;</code>。<br>第一种我们都很熟悉，那么这两种到底有什么区别呢？例子来自angularJS官网。</li></ul><p><em>controller as</em><br>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;ctrl-as-exmpl&quot; ng-controller=&quot;SettingsController1 as settings&quot;&gt;</span><br><span class="line">  Name: &lt;input type=&quot;text&quot; ng-model=&quot;settings.name&quot;/&gt;</span><br><span class="line">  [ &lt;a href=&quot;&quot; ng-click=&quot;settings.greet()&quot;&gt;greet&lt;/a&gt; ]&lt;br/&gt;</span><br><span class="line">  Contact:</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li ng-repeat=&quot;contact in settings.contacts&quot;&gt;</span><br><span class="line">      &lt;select ng-model=&quot;contact.type&quot;&gt;</span><br><span class="line">         &lt;option&gt;phone&lt;/option&gt;</span><br><span class="line">         &lt;option&gt;email&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; ng-model=&quot;contact.value&quot;/&gt;</span><br><span class="line">      [ &lt;a href=&quot;&quot; ng-click=&quot;settings.clearContact(contact)&quot;&gt;clear&lt;/a&gt;</span><br><span class="line">      | &lt;a href=&quot;&quot; ng-click=&quot;settings.removeContact(contact)&quot;&gt;X&lt;/a&gt; ]</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;[ &lt;a href=&quot;&quot; ng-click=&quot;settings.addContact()&quot;&gt;add&lt;/a&gt; ]&lt;/li&gt;</span><br><span class="line"> &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>app.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">angular.module(&apos;controllerAsExample&apos;, [])</span><br><span class="line">  .controller(&apos;SettingsController1&apos;, SettingsController1);</span><br><span class="line"></span><br><span class="line">function SettingsController1() &#123;</span><br><span class="line">  this.name = &quot;John Smith&quot;;</span><br><span class="line">  this.contacts = [</span><br><span class="line">    &#123;type: &apos;phone&apos;, value: &apos;408 555 1212&apos;&#125;,</span><br><span class="line">    &#123;type: &apos;email&apos;, value: &apos;john.smith@example.org&apos;&#125; ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SettingsController1.prototype.greet = function() &#123;</span><br><span class="line">  alert(this.name);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">SettingsController1.prototype.addContact = function() &#123;</span><br><span class="line">  this.contacts.push(&#123;type: &apos;email&apos;, value: &apos;yourname@example.org&apos;&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">SettingsController1.prototype.removeContact = function(contactToRemove) &#123;</span><br><span class="line"> var index = this.contacts.indexOf(contactToRemove);</span><br><span class="line">  this.contacts.splice(index, 1);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">SettingsController1.prototype.clearContact = function(contact) &#123;</span><br><span class="line">  contact.type = &apos;phone&apos;;</span><br><span class="line">  contact.value = &apos;&apos;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><em>$scope</em><br>index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;ctrl-exmpl&quot; ng-controller=&quot;SettingsController2&quot;&gt;</span><br><span class="line">  Name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;/&gt;</span><br><span class="line">  [ &lt;a href=&quot;&quot; ng-click=&quot;greet()&quot;&gt;greet&lt;/a&gt; ]&lt;br/&gt;</span><br><span class="line">  Contact:</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li ng-repeat=&quot;contact in contacts&quot;&gt;</span><br><span class="line">      &lt;select ng-model=&quot;contact.type&quot;&gt;</span><br><span class="line">         &lt;option&gt;phone&lt;/option&gt;</span><br><span class="line">         &lt;option&gt;email&lt;/option&gt;</span><br><span class="line">      &lt;/select&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; ng-model=&quot;contact.value&quot;/&gt;</span><br><span class="line">      [ &lt;a href=&quot;&quot; ng-click=&quot;clearContact(contact)&quot;&gt;clear&lt;/a&gt;</span><br><span class="line">      | &lt;a href=&quot;&quot; ng-click=&quot;removeContact(contact)&quot;&gt;X&lt;/a&gt; ]</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">    &lt;li&gt;[ &lt;a href=&quot;&quot; ng-click=&quot;addContact()&quot;&gt;add&lt;/a&gt; ]&lt;/li&gt;</span><br><span class="line"> &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>app.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">angular.module(&apos;controllerExample&apos;, [])</span><br><span class="line">  .controller(&apos;SettingsController2&apos;, [&apos;$scope&apos;, SettingsController2]);</span><br><span class="line"></span><br><span class="line">function SettingsController2($scope) &#123;</span><br><span class="line">  $scope.name = &quot;John Smith&quot;;</span><br><span class="line">  $scope.contacts = [</span><br><span class="line">    &#123;type:&apos;phone&apos;, value:&apos;408 555 1212&apos;&#125;,</span><br><span class="line">    &#123;type:&apos;email&apos;, value:&apos;john.smith@example.org&apos;&#125; ];</span><br><span class="line"></span><br><span class="line">  $scope.greet = function() &#123;</span><br><span class="line">    alert($scope.name);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  $scope.addContact = function() &#123;</span><br><span class="line">    $scope.contacts.push(&#123;type:&apos;email&apos;, value:&apos;yourname@example.org&apos;&#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  $scope.removeContact = function(contactToRemove) &#123;</span><br><span class="line">    var index = $scope.contacts.indexOf(contactToRemove);</span><br><span class="line">    $scope.contacts.splice(index, 1);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  $scope.clearContact = function(contact) &#123;</span><br><span class="line">    contact.type = &apos;phone&apos;;</span><br><span class="line">    contact.value = &apos;&apos;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>定义controller时不用显式的依赖$scope，好处就是一个普通的函数定义，例子中的SettingsController2就是所谓的POJO（Plain Old Javascript Object，Java里的概念），这样的Object与框架无关，里面只有逻辑。即便有一天你的项目不再使用AngularJS了，依然可以很方便的重用和移植这些逻辑。另外，从测试的角度看，这样的Object也是单元测试友好的。单元测试强调的就是孤立其他依赖元素，而POJO恰恰满足这个条件，可以单纯的去测试这个函数的输入输出，而不用费劲的去模拟一个假的$scope。</p><p>另外，还有一个比较牵强的好处：防止滥用$scope的$watch，$on，$broadcast方法。可能刚刚就有人想问了，不依赖$scope我怎么watch一个model，怎样广播和响应事件。答案是没法弄，这些事还真是只有$scope能干。但很多时候在controller里watch一个model是很多余的，这样做会明显的降低性能。所以，当你本来就依赖$scope的时候，你会习惯性的调用这些方法来实现自己的逻辑。但当使用controller as的时候，由于没有直接依赖$scope，使用watch前你会稍加斟酌，没准就思考到了别的实现方式了呢。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angularjs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS自带Apache的坑</title>
      <link href="/MacOS%E8%87%AA%E5%B8%A6Apache%E7%9A%84%E5%9D%91/"/>
      <url>/MacOS%E8%87%AA%E5%B8%A6Apache%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<p>刚刚升级了10.12，<code>sudo apachectl start</code>启动apache的时候瞬间懵逼了，<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl start</span><br><span class="line">(48)Address already <span class="keyword">in</span> use: AH00072: make_sock: could not <span class="built_in">bind</span> to address [::]:80</span><br><span class="line">(48)Address already <span class="keyword">in</span> use: AH00072: make_sock: could not <span class="built_in">bind</span> to address 0.0.0.0:80</span><br><span class="line">no listening sockets available, shutting down</span><br><span class="line">AH00015: Unable to open logs</span><br></pre></td></tr></table></figure></p><p>明明没有启动，也没做什么，后来发现原因是我使用的不是mac自带的apache，升级之后就悲剧，因为在新的系统中，apache是默认启动的，且不支持删除，所以解决方法是</p><ul><li><p>停止apache</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl -k stop</span><br></pre></td></tr></table></figure></li><li><p>关闭apache随系统启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist</span><br></pre></td></tr></table></figure></li></ul><p>这样就可以了，再次<code>sudo apachectl start</code> 就是自己安装的apache服务了。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>angularjs与MDL的整合</title>
      <link href="/angularjs%E4%B8%8EMDL%E7%9A%84%E6%95%B4%E5%90%88/"/>
      <url>/angularjs%E4%B8%8EMDL%E7%9A%84%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>很喜欢Material Design的风格，最近做项目打算用<a href="https://getmdl.io" target="_blank" rel="noopener">Material Design Lite</a><a id="more"></a>搭配angularjs 1.3.x,首先需要注意的是MDL在动态网页中需要更新注册组件即<code>upgradeAllRegistered</code>,起初不了解，在angular中引用MDL的js和css，但是按钮的涟漪效果以及其他涉及js操作的样式都无效，（一脸懵逼中……）后来仔细研读官方文档后才注意到这个小坑，动态网页中需要随时更新注册组件才能生效，官方文档是这么说的：</p><blockquote><p>Material Design Lite will automatically register and render all elements marked with MDL classes upon page load. However in the case where you are creating DOM elements dynamically you need to register new elements using the <code>upgradeElement</code> function. Here is how you can dynamically create the same raised button with ripples shown in the section above:</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;container&quot;/&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var button = document.createElement(&apos;button&apos;);</span><br><span class="line">  var textNode = document.createTextNode(&apos;Click Me!&apos;);</span><br><span class="line">  button.appendChild(textNode);</span><br><span class="line">  button.className = &apos;mdl-button mdl-js-button mdl-js-ripple-effect&apos;;</span><br><span class="line">  componentHandler.upgradeElement(button);</span><br><span class="line">  document.getElementById(&apos;container&apos;).appendChild(button);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>找到原因后就要解决问题了，在angularjs中如何更新组件呢？因为这个更新是每时每刻都在运行的，所以要加在angular的启动文件app.js中，需要注意的是run加的位置，区分config和run的区别，config阶段是给了ng上下文一个针对constant与provider修改其内部属性的一个阶段，而run阶段是在config之后的在运行独立的代码块，通常写法runBlock，简单的说一下就是ng启动阶段是 config–&gt;run–&gt;compile/link，那么解决方法是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">angular.module(&apos;app&apos;,[])</span><br><span class="line">.run([&apos;$rootScope&apos;, &apos;$timeout&apos;, function($rootScope, $timeout) &#123;</span><br><span class="line">$rootScope.$on(&apos;$viewContentLoaded&apos;, () =&gt; &#123;</span><br><span class="line">$timeout(() =&gt; &#123;</span><br><span class="line">componentHandler.upgradeAllRegistered();</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></p><p>那么开始后续的开发~</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> angularjs </tag>
            
            <tag> MDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iterm 2 cd 神器</title>
      <link href="/iterm-2-cd-%E7%A5%9E%E5%99%A8/"/>
      <url>/iterm-2-cd-%E7%A5%9E%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><em>autojump - 更快的方式来浏览你的文件系统</em><br><a id="more"></a><br>安装通过Homebrew</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install autojump</span><br></pre></td></tr></table></figure><p>在zsh下需要配置zsh文件，在.zshrc下添加命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$[[ -s `brew --prefix`/etc/autojump.sh ]] &amp;&amp; . `brew --prefix`/etc/autojump.sh</span><br></pre></td></tr></table></figure></p><p>保存文件，即可使用。<br>使用方法是<code>j</code>经常使用或之前使用过的文件夹，即可直接跳到你要浏览的目录，省去中间需要的各种<code>cd</code>。非常方便。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iterm2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apply、call和bind用法区别</title>
      <link href="/apply-call%E5%92%8Cbind%E7%94%A8%E6%B3%95%E5%8C%BA%E5%88%AB/"/>
      <url>/apply-call%E5%92%8Cbind%E7%94%A8%E6%B3%95%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>每个函数中都包含两个非继承而来的方法：<code>apply()</code>, <code>call</code>。这两个方法的用途都是在特定的作用域下调用函数，实际上等于设置函数体内this对象的值。首先，<code>apply()</code>方法接收两个参数：一个是在其中运行函数的作用域，另一个是参数数组。其中，第二个参数可以是Array的实例，也可以是arguments对象，例如：<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function sum (num1, num2)&#123;</span><br><span class="line">return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sumCall1(num1, num2)&#123;</span><br><span class="line">return sum.apply(this, arguments);  //传入arguments对象</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function sumCall2(num1, num2)&#123;</span><br><span class="line">return sum.apply(this, [num1,num2]);  //传入数组</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sumCall1(1,3);  // 4</span><br><span class="line">sumCall2(1,3);  // 4</span><br></pre></td></tr></table></figure></p><p>上面例子中，sumCall1()在执行sum()函数时传入了this作为this值（因为是在全局作用域中调用的，所以传入的就是window对象）和arguments对象，然而sumCall2()同样也调用sum()函数，但它传入的则是this和一个参数数组，都返回同样的结果。</p><blockquote><p>在严格模式下，未指定环境对象而调用函数，则this值不会转成window。除非明确把函数添加到某个对象或者调用<code>apply()</code>或<code>call()</code>，否则this值将是undefined。</p></blockquote><p><code>call()</code>方法与<code>apply()</code>方法的作用相同，它们的区别在于接收参数的方式不同，对于<code>call()</code>方法而言，第一个参数是this不变，变化的是其余参数都是直接传递给函数，也就是说在使用<code>call()</code>时，传递函数的参数要一一列举出来，看下面的例子🌰：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function sum(num1, num2)&#123;</span><br><span class="line">return num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function callSum(num1, num2)&#123;</span><br><span class="line">return sum.call(this, num1,num2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">callSum(1，3) // 4</span><br></pre></td></tr></table></figure></p><p>在使用<code>call()</code>方法的情况下，callSum要传入每一个参数值，结果与使用<code>apply()</code>并没有什么不同。至于是使用<code>apply()</code>还是<code>call()</code>，完全取决于你采用哪种给函数传递参数的方式最方便。如果你打算直接传入arguments对象，或者包含函数中先接收到的也是一个数组，那么使用<code>apply()</code>肯定很方便；否则，选择<code>call()</code>更合适，（再不给函数传递参数的情况下，使用哪个方法都无所谓。）</p><p>事实上，传递参数并非<code>apply()</code>和<code>call()</code>真正用武之地，它们最强大的地方是能够扩充函数的赖以运行的作用域，看下面例子🌰：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">window.color = &quot;red&quot;;</span><br><span class="line">var o.color = &quot;blue&quot;;</span><br><span class="line"></span><br><span class="line">function sayColor()&#123;</span><br><span class="line">alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sayColor();</span><br><span class="line"></span><br><span class="line">sayColor.call(this);//red</span><br><span class="line">sayColor.call(window);//red</span><br><span class="line">sayColor.call(o);//blue</span><br></pre></td></tr></table></figure></p><p>使用<code>apply()</code>或<code>call()</code>来扩充作用域的最大好处就是对象不需要与方法有任何耦合关系。在ES5中还定义了一个方法<code>bind()</code>。这个方法会创建一个函数的实例，其this值会被绑定到传给<code>bind()</code>函数的值。再来个例子🌰。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">window.color = &quot;red&quot;;</span><br><span class="line">var o.color = &quot;blue&quot;;</span><br><span class="line"></span><br><span class="line">function sayColor()&#123;</span><br><span class="line">alert(this.color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var objSayColor = sayColor.bind(o);</span><br><span class="line">objSayColor();//blue</span><br></pre></td></tr></table></figure></p><p>在这里，<code>sayColor()</code>调用<code>bind()</code>并传入对象o，创建了<code>objSayColor()</code>函数，<code>objSayColor()</code>函数this值等于o，因此即使是在全局作用域中调用这个函数，也会看到”blue”。</p><p>补充：<br>传入的第一个参数为<code>null</code>，函数体内的this会默认指向宿主对象，在浏览器中，如果使用严格模式，则还为null。<br>函数是在非严格模式下，指定为 <code>null</code> 或 <code>undefined</code> 的 this 值会被替换成全局对象，<br>就先说这么多~</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sass中混合宏、继承、占位符比较</title>
      <link href="/Sass%E4%B8%AD%E6%B7%B7%E5%90%88%E5%AE%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%AF%94%E8%BE%83/"/>
      <url>/Sass%E4%B8%AD%E6%B7%B7%E5%90%88%E5%AE%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<p>初学Sass对Sass的一点理解和笔记，Sass同Scss，其实两者指的都是一个，区别在于书写格式上，Sass的书写形式为ruby（其实我不了解ruby）<a id="more"></a>，省去了class的<code>. {} ;</code>, Scss的书写形式更像是css的写法，关于Sass就说这么多，这不是重点，该篇文章也不是Sass的入门等等，主要作为自己的学习笔记 。<br>关于混合宏、继承和占位符的区别比较： </p><h4 id="混合宏"><a href="#混合宏" class="headerlink" title="混合宏"></a>混合宏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">声明方式 @mixin</span><br><span class="line">调用方式 @include</span><br></pre></td></tr></table></figure><blockquote><p>常用于 相同的代码块需要在不同的环境传递不同的值时，可以通过混合宏来定义重复使用的代码块<br><strong>不足</strong>：编译出来的css代码有相同部分的代码块不能自动合并，从而导致代码冗余</p></blockquote><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">声明方式 .class</span><br><span class="line">调用方式 @extend</span><br></pre></td></tr></table></figure><blockquote><p>常用于 相同的代码块不需要传递不同的值，且在sass中已定义，这样可以通过Sass继承调用已存在的基类，使用继承可以将调用相同基类的代码合并到一起<br><strong>不足</strong>： 即使基类不存在与html的结构中，继承后都会生成基类样式的代码块</p></blockquote><h4 id="占位符-placeholder"><a href="#占位符-placeholder" class="headerlink" title="占位符%placeholder"></a>占位符%placeholder</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">声明方式 %placeholder</span><br><span class="line">调用方式 @extend</span><br></pre></td></tr></table></figure><blockquote><p>常用于 占位符与继承基本类型类似，不同的是相同的代码不存在基类中，需要额外声明，如果不调用已声明的占位符，则不会产生其相关代码，如果在不同选择器中调用占位符，那么编译出的css则是合并相同的代码，不会造成代码冗余</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> sass </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端资源收集</title>
      <link href="/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/"/>
      <url>/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<ol><li><p>综合类</p><a id="more"></a> <ul><li><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="noopener">前端知识体系</a></li><li><a href="https://github.com/JacksonTian/fks" target="_blank" rel="noopener">前端知识结构</a></li><li><a href="https://github.com/unruledboy/WebFrontEndStack" target="_blank" rel="noopener">Web前端开发大系概览</a></li><li><a href="http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html" target="_blank" rel="noopener">Web前端开发大系概览-中文版</a></li><li><a href="https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png" target="_blank" rel="noopener">Web Front-end Stack v2.2</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noopener">免费的编程中文书籍索引</a></li><li><a href="https://github.com/dypsilon/frontend-dev-bookmarks" target="_blank" rel="noopener">前端书籍</a></li><li><a href="https://github.com/vhf/free-programming-books" target="_blank" rel="noopener">前端免费书籍大全</a></li><li><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="noopener">前端知识体系</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noopener">免费的编程中文书籍索引</a></li><li><a href="http://study.163.com/course/introduction/224014.htm" target="_blank" rel="noopener">智能社 - 精通JavaScript开发</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="noopener">重新介绍 JavaScript（JS 教程）</a></li><li><a href="http://v.163.com/special/opencourse/bianchengdaolun.html" target="_blank" rel="noopener">麻省理工学院公开课：计算机科学及编程导论</a></li><li><a href="http://segmentfault.com/a/1190000002640298" target="_blank" rel="noopener">JavaScript中的this陷阱的最全收集–没有之一</a></li><li><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html" target="_blank" rel="noopener">JS函数式编程指南</a></li><li><a href="http://liubin.github.io/promises-book/" target="_blank" rel="noopener">JavaScript Promise迷你书（中文版）</a></li><li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">腾讯移动Web前端知识库</a></li><li><a href="https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide" target="_blank" rel="noopener">Front-End-Develop-Guide 前端开发指南</a></li><li><a href="https://li-xinyang.gitbooks.io/frontend-notebook/content/" target="_blank" rel="noopener">前端开发笔记本</a></li><li><a href="https://github.com/nieweidong/fetool" target="_blank" rel="noopener">大前端工具集 - 聂微东</a></li><li><a href="https://dwqs.gitbooks.io/frontenddevhandbook/content/" target="_blank" rel="noopener">前端开发者手册</a></li></ul></li><li><p>入门类</p><ul><li><a href="http://www.cnblogs.com/jikey/p/3613082.html" target="_blank" rel="noopener">前端入门教程</a></li><li><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">瘳雪峰的Javascript教程</a></li><li><a href="http://www.imooc.com/view/11" target="_blank" rel="noopener">jQuery基础教程</a></li><li><a href="http://www.imooc.com/view/506" target="_blank" rel="noopener">前端工程师必备的PS技能——切图篇</a></li><li><a href="https://github.com/qiu-deqing/FE-learning" target="_blank" rel="noopener">结合个人经历总结的前端入门方法</a></li></ul></li><li><p>效果类</p><ul><li><a href="http://www.imooc.com/learn/58" target="_blank" rel="noopener">弹出层</a></li><li><a href="http://www.imooc.com/learn/18" target="_blank" rel="noopener">焦点图轮播特效</a></li></ul></li><li><p>工具类</p><ul><li><a href="http://www.imooc.com/learn/93" target="_blank" rel="noopener">css sprite 雪碧图制作</a></li><li><a href="http://www.imooc.com/learn/390" target="_blank" rel="noopener">版本控制入门 – 搬进 Github</a></li><li><a href="http://www.imooc.com/learn/30" target="_blank" rel="noopener">Grunt-beginner前端自动化工具</a></li></ul></li><li><p>慕课专题</p><ul><li><a href="http://www.imooc.com/space/teacher/id/197450" target="_blank" rel="noopener">张鑫旭 - 慕课系列</a></li><li><a href="http://www.imooc.com/space/teacher/id/104593" target="_blank" rel="noopener">lyn - 慕课系列</a></li><li><a href="http://www.imooc.com/space/teacher/id/290139" target="_blank" rel="noopener">艾伦 - 慕课系列</a></li><li><a href="http://www.imooc.com/view/494" target="_blank" rel="noopener">碧仔 - Hello，移动WEB</a></li></ul></li><li><p>周报类</p><ul><li><a href="https://github.com/PaicHyperionDev/MobileDevWeekly" target="_blank" rel="noopener">平安科技移动开发二队技术周报</a></li></ul></li></ol><h3 id="六-API"><a href="#六-API" class="headerlink" title="六. API:"></a>六. API:</h3><h4 id="1-总目录"><a href="#1-总目录" class="headerlink" title="1. 总目录"></a>1. 总目录</h4><ol><li><p>开发中心</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">mozilla js参考</a></li><li><a href="https://developer.chrome.com/extensions/api_index.html" target="_blank" rel="noopener">chrome开发中心（chrome的内核已转向blink）</a></li><li><a href="https://developer.apple.com/library/safari/navigation" target="_blank" rel="noopener">safari开发中心</a></li><li><a href="https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94" target="_blank" rel="noopener">microsoft js参考</a>.aspx)</li><li><a href="http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html" target="_blank" rel="noopener">js秘密花园</a></li><li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/" target="_blank" rel="noopener">js秘密花园</a></li><li><a href="http://www.w3help.org/" target="_blank" rel="noopener">w3help</a> 综合Bug集合网站</li></ul></li><li><p>综合搜索</p><ul><li><a href="http://www.javascripting.com/" target="_blank" rel="noopener">javascripting</a></li><li><a href="http://microjs.com/" target="_blank" rel="noopener">各种流行库搜索</a></li></ul></li><li><p>综合API</p><ul><li><a href="http://www.runoob.com/" target="_blank" rel="noopener">runoob.com-包含各种API集合</a></li><li><a href="http://tool.oschina.net/apidocs" target="_blank" rel="noopener">开源中国在线API文档合集</a></li><li><a href="http://devdocs.io/" target="_blank" rel="noopener">devdocs</a> 英文综合API网站</li></ul></li></ol><h4 id="2-jQuery"><a href="#2-jQuery" class="headerlink" title="2. jQuery"></a>2. jQuery</h4><ul><li><a href="http://www.jquery123.com/" target="_blank" rel="noopener">jQuery API 中文文档</a></li><li><a href="http://hemin.cn/jq/" target="_blank" rel="noopener">hemin 在线版</a></li><li><a href="http://www.css88.com/jqapi-1.9/on/" target="_blank" rel="noopener">css88 jq api</a></li><li><a href="http://www.css88.com/jquery-ui-api/" target="_blank" rel="noopener">css88 jqui api</a></li><li><a href="http://learn.jquery.com/" target="_blank" rel="noopener">学习jquery</a></li><li><a href="http://james.padolsey.com/jquery/" target="_blank" rel="noopener">jquery 源码查找</a></li></ul><h4 id="3-Ecmascript"><a href="#3-Ecmascript" class="headerlink" title="3. Ecmascript"></a>3. Ecmascript</h4><ul><li><a href="https://leanpub.com/understandinges6/read" target="_blank" rel="noopener">Understanding ECMAScript 6 - Nicholas C. Zakas</a></li><li><a href="https://leanpub.com/exploring-es6/read" target="_blank" rel="noopener">exploring-es6</a></li><li><a href="https://github.com/es6-org/exploring-es6" target="_blank" rel="noopener">exploring-es6翻译</a></li><li><a href="http://es6-org.github.io/exploring-es6/" target="_blank" rel="noopener">exploring-es6翻译后预览</a></li><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰 es6</a></li><li><a href="http://javascript.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰 Javascript</a></li><li><a href="http://yanhaijing.com/es5/" target="_blank" rel="noopener">ECMA-262，第 5 版</a></li><li><a href="http://es5.github.io/" target="_blank" rel="noopener">es5</a></li></ul><h4 id="4-Js-template"><a href="#4-Js-template" class="headerlink" title="4. Js template"></a>4. Js template</h4><ul><li><a href="http://garann.github.io/template-chooser/" target="_blank" rel="noopener">template-chooser</a></li><li><a href="https://github.com/aui/artTemplate" target="_blank" rel="noopener">artTemplate</a></li><li><a href="https://github.com/aui/tmodjs/blob/master/README.md" target="_blank" rel="noopener">tomdjs</a></li><li><a href="http://juicer.name/docs/docs_zh_cn.html" target="_blank" rel="noopener">淘宝模板juicer模板</a></li><li><a href="http://koen301.github.io/fxtpl/" target="_blank" rel="noopener">Fxtpl v1.0 繁星前端模板引擎</a></li><li><a href="http://laytpl.layui.com/" target="_blank" rel="noopener">laytpl</a></li><li><a href="https://github.com/mozilla/nunjucks" target="_blank" rel="noopener">mozilla - nunjucks</a></li><li><a href="https://github.com/PaulGuo/Juicer" target="_blank" rel="noopener">Juicer</a></li><li><a href="http://akdubya.github.io/dustjs/" target="_blank" rel="noopener">dustjs</a></li><li><a href="http://ecomfe.github.io/etpl/" target="_blank" rel="noopener">etpl</a></li></ul><h4 id="5-弹出层"><a href="#5-弹出层" class="headerlink" title="5. 弹出层"></a>5. 弹出层</h4><ul><li><a href="https://github.com/aui/artDialog" target="_blank" rel="noopener">artDialog 最新版</a></li><li><a href="http://aui.github.io/artDialog/doc/index.html" target="_blank" rel="noopener">artDialog 文档</a></li><li><a href="https://code.google.com/p/artdialog/downloads/list" target="_blank" rel="noopener">google code 下载地址</a></li><li><a href="http://layer.layui.com/" target="_blank" rel="noopener">贤心弹出层</a></li><li><a href="https://github.com/bh-lay/UI" target="_blank" rel="noopener">响应式用户交互组件库</a></li><li><a href="http://t4t5.github.io/sweetalert/" target="_blank" rel="noopener">sweetalert-有css3动画弹出层</a></li></ul><h4 id="6-CSS"><a href="#6-CSS" class="headerlink" title="6. CSS"></a>6. CSS</h4><ul><li><a href="http://tympanus.net/codrops/css_reference/" target="_blank" rel="noopener">CSS 语法参考</a></li><li><a href="http://isux.tencent.com/css3/index.html" target="_blank" rel="noopener">CSS3动画手册</a></li><li><a href="http://isux.tencent.com/css3/tools.html" target="_blank" rel="noopener">腾讯css3动画制作工具</a></li><li><a href="http://linxz.github.io/tianyizone/" target="_blank" rel="noopener">志爷css小工具集合</a></li><li><a href="http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb" target="_blank" rel="noopener">css3 js 移动大杂烩</a></li><li><a href="http://bouncejs.com/" target="_blank" rel="noopener">bouncejs 触摸库</a></li><li><a href="http://fian.my.id/Waves/" target="_blank" rel="noopener">css3 按钮动画</a></li><li><a href="http://daneden.github.io/animate.css/" target="_blank" rel="noopener">animate.css</a></li><li><a href="http://www.alloyteam.com/2015/10/8536/" target="_blank" rel="noopener">全局CSS的终结(狗带) [译]</a></li></ul><h4 id="7-Angularjs"><a href="#7-Angularjs" class="headerlink" title="7. Angularjs"></a>7. Angularjs</h4><ul><li><a href="https://github.com/dolymood/AngularLearning" target="_blank" rel="noopener">Angular.js 的一些学习资源</a></li><li><a href="http://angularjs.cn/" target="_blank" rel="noopener">angularjs中文社区</a></li><li><a href="http://www.cnblogs.com/xuwenmin888/p/3739096.html" target="_blank" rel="noopener">Angularjs源码学习</a></li><li><a href="http://www.ifeenan.com/?c=AngularJS" target="_blank" rel="noopener">Angularjs源码学习</a></li><li><a href="http://angular-ui.github.io/bootstrap/" target="_blank" rel="noopener">angular对bootstrap的封装</a></li><li><a href="https://cnodejs.org/topic/51404e0f069911196d2e3923" target="_blank" rel="noopener">angularjs + nodejs</a></li><li><a href="http://www.cnblogs.com/lvdabao/tag/AngularJs/" target="_blank" rel="noopener">吕大豹 Angularjs</a></li><li><a href="http://www.infoq.com/cn/news/2013/02/angular-web-app" target="_blank" rel="noopener">AngularJS 最佳实践</a></li><li><a href="http://www.lovelucy.info/angularjs-best-practices.html" target="_blank" rel="noopener">Angular的一些扩展指令</a></li><li><a href="https://github.com/Pasvaz/bindonce" target="_blank" rel="noopener">Angular数据绑定原理</a></li><li><a href="https://github.com/angular-ui/" target="_blank" rel="noopener">一些扩展Angular UI组件</a></li><li><a href="http://voidcanvas.com/emberjs-vs-angularjs-performance-testing/" target="_blank" rel="noopener">Ember和AngularJS的性能测试</a></li><li><a href="http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html" target="_blank" rel="noopener">带你走近AngularJS - 基本功能介绍</a></li><li><a href="http://angular.duapp.com/docs/guide" target="_blank" rel="noopener">Angularjs开发指南</a></li><li><a href="http://www.cnblogs.com/amosli/p/3710648.html" target="_blank" rel="noopener">Angularjs学习</a></li><li><a href="http://www.rainweb.cn/article/angularjs-jquery.html" target="_blank" rel="noopener">不要带着jQuery的思维去学习AngularJS</a></li><li><a href="http://wangjiatao.diandian.com/?tag=angularjs" target="_blank" rel="noopener">angularjs 学习笔记</a></li><li><a href="http://www.angularjs.cn/T008" target="_blank" rel="noopener">angularjs 开发指南</a></li><li><a href="https://github.com/jmcunningham/AngularJS-Learning" target="_blank" rel="noopener">angularjs 英文资料</a></li><li><a href="http://angular-ui.github.io/bootstrap/" target="_blank" rel="noopener">angular bootstrap</a></li><li><a href="https://github.com/opitzconsulting/jquery-mobile-angular-adapter" target="_blank" rel="noopener">angular jq mobile</a></li><li><a href="http://mgcrea.github.io/angular-strap/" target="_blank" rel="noopener">angular ui</a></li><li><a href="http://www.tuicool.com/articles/7ZZVr2" target="_blank" rel="noopener">整合jQuery Mobile+AngularJS经验谈</a></li><li><a href="http://blog.jobbole.com/46589/" target="_blank" rel="noopener">有jQuery背景，该如何用AngularJS编程思想</a></li><li><a href="http://each.sinaapp.com/angular/" target="_blank" rel="noopener">AngularJS在线教程</a></li><li><a href="http://www.zouyesheng.com/angular.html" target="_blank" rel="noopener">angular学习笔记</a></li></ul><h4 id="8-React"><a href="#8-React" class="headerlink" title="8. React"></a>8. React</h4><ul><li><a href="http://www.react-china.org/" target="_blank" rel="noopener">react.js 中文论坛</a></li><li><a href="https://facebook.github.io/react/index.html" target="_blank" rel="noopener">react.js 官方网址</a></li><li><a href="https://facebook.github.io/react/docs/getting-started.html" target="_blank" rel="noopener">react.js 官方文档</a></li><li><a href="http://material-ui.com/#/" target="_blank" rel="noopener">react.js material UI</a></li><li><a href="http://touchstonejs.io/" target="_blank" rel="noopener">react.js TouchstoneJS UI</a></li><li><a href="http://amazeui.org/react/" target="_blank" rel="noopener">react.js amazeui UI</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="noopener">React 入门实例教程 - 阮一峰</a></li><li><a href="http://wiki.jikexueyuan.com/project/react-native/" target="_blank" rel="noopener">React Native 中文版</a></li><li><a href="http://www.html-js.com/article/Fakefish%203053" target="_blank" rel="noopener">Webpack 和 React 小书 - 前端乱炖</a></li><li><a href="https://fakefish.github.io/react-webpack-cookbook/" target="_blank" rel="noopener">Webpack 和 React 小书 - gitbook</a></li><li><a href="https://github.com/webpack/webpack" target="_blank" rel="noopener">webpack</a></li><li><a href="http://html-js.com/article/3009" target="_blank" rel="noopener">Webpack，101入门体验</a></li><li><a href="http://html-js.com/article/3113" target="_blank" rel="noopener">webpack入门教程</a></li><li><a href="http://segmentfault.com/a/1190000003499526" target="_blank" rel="noopener">基于webpack搭建前端工程解决方案探索</a></li><li><a href="http://www.piliyu.com/" target="_blank" rel="noopener">React原创实战视频教程</a></li></ul><h4 id="9-移动端API"><a href="#9-移动端API" class="headerlink" title="9. 移动端API"></a>9. 移动端API</h4><ol><li>API    <ul><li><a href="https://github.com/jtyjty99999/mobileTech" target="_blank" rel="noopener">99移动端知识集合</a></li><li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">移动端前端开发知识库</a></li><li><a href="http://caibaojian.com/mobile-web-bug.html" target="_blank" rel="noopener">移动前端的一些坑和解决方法（外观表现）</a></li><li><a href="http://www.cnblogs.com/PeunZhang/p/3407453.html" target="_blank" rel="noopener">【原】移动web资源整理</a></li><li><a href="http://mweb.baidu.com/zeptoapi/" target="_blank" rel="noopener">zepto 1.0 中文手册</a></li><li><a href="http://www.html-5.cn/Manual/Zepto/" target="_blank" rel="noopener">zepto 1.0 中文手册</a></li><li><a href="http://www.css88.com/doc/zeptojs_api/" target="_blank" rel="noopener">zepto 1.1.2</a></li><li><a href="http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html" target="_blank" rel="noopener">zepto 中文注释</a></li><li><a href="http://app-framework-software.intel.com/api.php" target="_blank" rel="noopener">jqmobile 手册</a></li><li><a href="https://github.com/maxzhang/maxzhang.github.com/issues" target="_blank" rel="noopener">移动浏览器开发集合</a></li><li><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="noopener">移动开发大杂烩</a></li><li><a href="http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">微信webview中的一些问题</a></li></ul></li><li>框架    <ul><li><a href="http://framework7.taobao.org/" target="_blank" rel="noopener">特色的HTML框架可以创建精美的iOS应用</a></li><li><a href="http://m.sui.taobao.org/" target="_blank" rel="noopener">淘宝SUI</a></li></ul></li></ol><h4 id="10-avalon"><a href="#10-avalon" class="headerlink" title="10. avalon"></a>10. avalon</h4><ul><li><a href="http://avalonjs.github.io/" target="_blank" rel="noopener">avalonjs</a></li><li><a href="http://ued.qunar.com/oniui/index.html" target="_blank" rel="noopener">Avalon新一代UI库： OniUI</a></li><li><a href="https://github.com/RubyLouvre/avalon.oniui" target="_blank" rel="noopener">avalon.oniui-基于avalon的组件库</a></li><li><a href></a></li></ul><h4 id="11-Requriejs"><a href="#11-Requriejs" class="headerlink" title="11. Requriejs"></a>11. Requriejs</h4><ul><li><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="noopener">Javascript模块化编程（一）：模块的写法 </a></li><li><a href="http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html" target="_blank" rel="noopener">Javascript模块化编程（二）：AMD规范</a></li><li><a href="http://www.ruanyifeng.com/blog/2012/11/require_js.html" target="_blank" rel="noopener">Javascript模块化编程（三）：require.js的用法</a></li><li><a href="http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html" target="_blank" rel="noopener">RequireJS入门（一）</a></li><li><a href="http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html" target="_blank" rel="noopener">RequireJS入门（二）</a></li><li><a href="http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html" target="_blank" rel="noopener">RequireJS进阶（三）</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/3632580.html" target="_blank" rel="noopener">requrie源码学习</a></li><li><a href="http://www.oschina.net/translate/getting-started-with-the-requirejs-library" target="_blank" rel="noopener">requrie 入门指南</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/3214926.html" target="_blank" rel="noopener">requrieJS 学习笔记</a></li><li><a href="http://cyj.me/why-seajs/requirejs/" target="_blank" rel="noopener">requriejs 其一 </a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/3221081.html" target="_blank" rel="noopener">require backbone结合</a></li></ul><h4 id="12-Seajs"><a href="#12-Seajs" class="headerlink" title="12. Seajs"></a>12. Seajs</h4><ul><li><a href="http://seajs.org/" target="_blank" rel="noopener">seajs</a></li><li><a href="http://cyj.me/why-seajs/zh/" target="_blank" rel="noopener">seajs 中文手册</a></li></ul><h4 id="13-Less-sass"><a href="#13-Less-sass" class="headerlink" title="13. Less,sass"></a>13. Less,sass</h4><ul><li><a href="http://www.w3cplus.com/sassguide/" target="_blank" rel="noopener">sass</a></li><li><a href="http://www.sass.hk/" target="_blank" rel="noopener">sass教程-sass中国</a></li><li><a href="http://sass.bootcss.com/" target="_blank" rel="noopener">Sass 中文文档</a></li><li><a href="http://less.bootcss.com/" target="_blank" rel="noopener">less</a></li></ul><h4 id="14-Markdown"><a href="#14-Markdown" class="headerlink" title="14. Markdown"></a>14. Markdown</h4><ul><li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown 语法说明 (简体中文版)</a></li><li><a href="https://github.com/LearnShare/Learning-Markdown/blob/master/README.md" target="_blank" rel="noopener">markdown入门参考</a></li><li><a href="https://www.gitbook.com/" target="_blank" rel="noopener">gitbook</a> 国外的在线markdown可编辑成书</li><li><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">mdeditor</a>  一款国内的在线markdown编辑器</li><li><a href="https://stackedit.io" target="_blank" rel="noopener">stackedit</a> 国外的在线markdown编辑器，功能强大，同步云盘</li><li><a href="http://bh-lay.github.io/mditor/" target="_blank" rel="noopener">mditor</a> 一款轻量级的markdown编辑器</li><li><a href="https://github.com/lepture/editor" target="_blank" rel="noopener">lepture-editor</a></li><li><a href="https://github.com/jbt/markdown-editor" target="_blank" rel="noopener">markdown-editor</a></li></ul><h4 id="15-D3"><a href="#15-D3" class="headerlink" title="15. D3"></a>15. D3</h4><ul><li><a href="https://github.com/mbostock/d3/wiki/Tutorials" target="_blank" rel="noopener">d3 Tutorials</a></li><li><a href="https://github.com/mbostock/d3/wiki/Gallery" target="_blank" rel="noopener">Gallery</a></li><li><a href="http://datavisual.lofter.com/post/40cf3a_188e535" target="_blank" rel="noopener">lofter</a></li><li><a href="http://alanland.iteye.com/blog/1878595" target="_blank" rel="noopener">iteye</a></li><li><a href="http://javascript.ruanyifeng.com/library/d3.html" target="_blank" rel="noopener">ruanyifeng</a></li></ul><h4 id="16-兼容性"><a href="#16-兼容性" class="headerlink" title="16. 兼容性"></a>16. 兼容性</h4><ul><li><a href="http://kangax.github.io/compat-table/es6/" target="_blank" rel="noopener">esma 兼容列表</a></li><li><a href="http://jigsaw.w3.org/css-validator/validator.html.zh-cn" target="_blank" rel="noopener">W3C CSS验证服务</a></li><li><a href="http://caniuse.com/#index" target="_blank" rel="noopener">caniuse</a></li><li><a href="http://csscreator.com/properties" target="_blank" rel="noopener">csscreator</a></li><li><a href="https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85" target="_blank" rel="noopener">microsoft</a>.aspx)</li><li><a href="http://www.responsinator.com/" target="_blank" rel="noopener">在线测兼容-移动端</a></li><li><a href="https://www.manymo.com/emulators" target="_blank" rel="noopener">emulators</a></li></ul><h4 id="17-UI相关"><a href="#17-UI相关" class="headerlink" title="17. UI相关"></a>17. UI相关</h4><ul><li><a href="http://v3.bootcss.com/" target="_blank" rel="noopener">bootcss</a></li><li><a href="http://www.w3cplus.com/MetroUICSS/" target="_blank" rel="noopener">MetroUICSS</a></li><li><a href="http://semantic-ui.com/" target="_blank" rel="noopener">semantic</a></li><li><a href="http://alexwolfe.github.io/Buttons/" target="_blank" rel="noopener">Buttons</a></li><li><a href="http://hiloki.github.io/kitecss/" target="_blank" rel="noopener">kitecss</a></li><li><a href="http://www.pintuer.com/" target="_blank" rel="noopener">pintuer</a></li><li><a href="http://amazeui.org/" target="_blank" rel="noopener">amazeui</a></li><li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">worldhello</a></li><li><a href="http://igit.linuxtoy.org/contents.html" target="_blank" rel="noopener">linuxtoy</a></li><li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank" rel="noopener">gitmagic</a></li><li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">rogerdudler</a></li><li><a href="http://gitref.justjavac.com/" target="_blank" rel="noopener">gitref</a></li><li><a href="http://git-scm.com/book/zh" target="_blank" rel="noopener">book</a></li><li><a href="http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/" target="_blank" rel="noopener">gogojimmy</a></li></ul><h4 id="18-HTTP"><a href="#18-HTTP" class="headerlink" title="18. HTTP"></a>18. HTTP</h4><ul><li><a href="http://segmentfault.com/bookmark/1230000002521721" target="_blank" rel="noopener">HTTP API 设计指南</a></li></ul><h4 id="19-其它API"><a href="#19-其它API" class="headerlink" title="19. 其它API"></a>19. 其它API</h4><ul><li><a href="javascriptoo">javascript流行库汇总</a></li><li><a href="http://niceue.com/validator/demo/index.php" target="_blank" rel="noopener">验证api</a></li><li><a href="http://www.css88.com/doc/underscore/" target="_blank" rel="noopener">underscore 中文手册</a></li><li><a href="http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031" target="_blank" rel="noopener">underscore源码分析</a></li><li><a href="http://yalishizhude.github.io/tags/underscore/" target="_blank" rel="noopener">underscore源码分析-亚里士朱德的博客</a></li><li><a href="http://underscorejs.org/" target="_blank" rel="noopener">underscrejs en api</a></li><li><a href="https://lodash.com/" target="_blank" rel="noopener">lodash - underscore的代替品</a></li><li><a href="http://extjs-doc-cn.github.io/ext4api/" target="_blank" rel="noopener">ext4api</a></li><li><a href="http://www.csser.com/tools/backbone/backbone.js.html" target="_blank" rel="noopener">backbone 中文手册</a></li><li><a href="http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm" target="_blank" rel="noopener">qwrap手册</a></li><li><a href="http://easings.net/zh-cn" target="_blank" rel="noopener">缓动函数</a></li><li><a href="http://www.w3school.com.cn/svg/svg_reference.asp" target="_blank" rel="noopener">svg 中文参考</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG" target="_blank" rel="noopener">svg mdn参考</a></li><li><a href="https://github.com/gabelerner/canvg" target="_blank" rel="noopener">svg 导出 canvas</a></li><li><a href="https://github.com/exupero/saveSvgAsPng" target="_blank" rel="noopener">svg 导出 png</a></li><li><a href="http://www.zamzar.com/convert/ai-to-svg/" target="_blank" rel="noopener">ai-to-svg</a></li><li><a href="https://github.com/machao/localStorage" target="_blank" rel="noopener">localStorage 库</a></li></ul><h4 id="20-图表类"><a href="#20-图表类" class="headerlink" title="20. 图表类"></a>20. 图表类</h4><ul><li><a href="http://www.hcharts.cn/api/index.php" target="_blank" rel="noopener">Highcharts 中文API</a></li><li><a href="http://api.highcharts.com/highcharts" target="_blank" rel="noopener">Highcharts 英文API</a></li><li><a href="http://echarts.baidu.com/" target="_blank" rel="noopener">ECharts 百度的图表软件</a></li><li><a href="http://lbs.amap.com/api/" target="_blank" rel="noopener">高德地图</a></li><li><a href="http://paperjs.org/" target="_blank" rel="noopener">开源的矢量图脚本框架</a></li><li><a href="http://jvectormap.com/" target="_blank" rel="noopener">svg 地图</a></li></ul><h4 id="21-vue"><a href="#21-vue" class="headerlink" title="21. vue"></a>21. vue</h4><ul><li><a href="http://cn.vuejs.org/" target="_blank" rel="noopener">Vue</a></li><li><a href="http://forum.vuejs.org/" target="_blank" rel="noopener">Vue 论坛</a></li><li><a href="http://www.cnblogs.com/aaronjs/p/3660102.html" target="_blank" rel="noopener">Vue 入门指南</a></li><li><a href="http://segmentfault.com/a/1190000000411057" target="_blank" rel="noopener">Vue 的一些资源索引</a></li><li><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">awesome-vue</a></li></ul><h4 id="21-正则"><a href="#21-正则" class="headerlink" title="21. 正则"></a>21. 正则</h4><ul><li><a href="http://segmentfault.com/a/1190000002471140" target="_blank" rel="noopener">JS正则表达式元字符</a></li><li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">MDN-正则表达式</a></li><li><a href="http://javascript.ruanyifeng.com/stdlib/regexp.html" target="_blank" rel="noopener">ruanyifeng - RegExp对象</a></li><li><a href="http://div.io/topic/764?page=1" target="_blank" rel="noopener">小胡子哥 - 进阶正则表达式</a></li><li><a href="https://github.com/Cedriking/is.js/blob/master/is.js" target="_blank" rel="noopener">is.js</a></li><li><a href="http://regexper.com/" target="_blank" rel="noopener">正则在线测试</a></li><li><a href></a></li></ul><h4 id="22-ionic"><a href="#22-ionic" class="headerlink" title="22. ionic"></a>22. ionic</h4><ul><li><a href="https://github.com/ychow/ionic-guide" target="_blank" rel="noopener">ionic</a></li></ul><h4 id="23-其它"><a href="#23-其它" class="headerlink" title="23. 其它"></a>23. 其它</h4><ul><li><a href="http://mockjs.com/" target="_blank" rel="noopener">Mock.js 是一款模拟数据生成器</a></li></ul><h3 id="七-开发规范"><a href="#七-开发规范" class="headerlink" title="七. 开发规范"></a>七. 开发规范</h3><ol><li><p>前端</p><ul><li><a href="http://alloyteam.github.io/CodeGuide" target="_blank" rel="noopener">通过分析github代码库总结出来的工程师代码书写习惯</a></li><li><a href="http://codeguide.bootcss.com/" target="_blank" rel="noopener">HTML&amp;CSS编码规范 by @mdo</a></li><li><a href="http://www.alloyteam.com/2011/10/107/" target="_blank" rel="noopener">团队合作的css命名规范-腾讯AlloyTeam前端团队</a></li><li><a href="http://yuwenhui.github.io/" target="_blank" rel="noopener">前端编码规范之js - by yuwenhui</a></li><li><a href="http://www.cnblogs.com/hustskyking/p/javascript-spec.html" target="_blank" rel="noopener">前端编码规范之js - by 李靖</a></li><li><a href="http://zhibimo.com/read/Ashu/front-end-style-guide/" target="_blank" rel="noopener">前端开发规范手册</a></li><li><a href="https://github.com/yuche/javascript#table-of-contents" target="_blank" rel="noopener">Airbnb JavaScript 编码规范（简体中文版）</a></li><li><a href="http://www.zhihu.com/question/20351507" target="_blank" rel="noopener">AMD与CMD规范的区别</a></li><li><a href="http://www.cnblogs.com/tugenhua0707/p/3507957.html" target="_blank" rel="noopener">AMD与CMD规范的区别</a></li><li><a href="http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html" target="_blank" rel="noopener">KISSY 源码规范</a></li><li><a href="http://codeguide.bootcss.com/" target="_blank" rel="noopener">bt编码规范</a></li><li><a href="https://github.com/Suxiaogang/Code_Guide" target="_blank" rel="noopener">规范加强版</a></li><li><a href="http://blog.jobbole.com/79075/" target="_blank" rel="noopener">前端代码规范 及 最佳实践</a></li><li><a href="http://coderlmn.github.io/code-standards/" target="_blank" rel="noopener">百度前端规范</a></li><li><a href="http://isobar-idev.github.io/code-standards/" target="_blank" rel="noopener">百度前端规范</a></li><li><a href="http://zhuanlan.zhihu.com/fuyun/19884834" target="_blank" rel="noopener">百度前端规范</a></li><li><a href="https://github.com/gf-rd/es6-coding-style" target="_blank" rel="noopener">ECMAScript6 编码规范–广发证券前端团队</a></li><li><a href="http://blog.jobbole.com/79484/" target="_blank" rel="noopener">JavaScript 风格指南/编码规范（Airbnb公司版）</a></li><li><a href="http://nec.netease.com/standard" target="_blank" rel="noopener">网易前端开发规范</a></li><li><a href="http://www.75team.com/archives/1049" target="_blank" rel="noopener">css模块</a></li><li><a href="https://github.com/ecomfe/spec" target="_blank" rel="noopener">前端规范资源列表</a></li></ul></li><li><p>PHP</p><ul><li><a href="http://segmentfault.com/a/1190000000443795" target="_blank" rel="noopener">最流行的PHP 代码规范</a></li><li><a href="https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md" target="_blank" rel="noopener">最流行的PHP 代码规范</a></li></ul></li><li><p>Android</p><ul><li><a href="http://www.cnblogs.com/lcw/p/3619181.html" target="_blank" rel="noopener">【敏捷开发】Android团队开发规范</a></li><li><a href="http://www.jianshu.com/p/4390f4fe19b3" target="_blank" rel="noopener">Android 开发规范与应用</a></li></ul></li></ol><h3 id="八-其它收集"><a href="#八-其它收集" class="headerlink" title="八. 其它收集"></a>八. 其它收集</h3><h4 id="1-各大公司开源项目"><a href="#1-各大公司开源项目" class="headerlink" title="1. 各大公司开源项目"></a>1. 各大公司开源项目</h4><ul><li><a href="https://code.facebook.com/projects/web/" target="_blank" rel="noopener">Facebook Projects</a></li><li><a href="http://fex.baidu.com/" target="_blank" rel="noopener">百度web前端研发部</a></li><li><a href="http://efe.baidu.com/" target="_blank" rel="noopener">百度EFE</a></li><li><a href="https://github.com/fex-team/" target="_blank" rel="noopener">百度github</a></li><li><a href="http://www.alloyteam.com/" target="_blank" rel="noopener">alloyteam</a></li><li><a href="http://alloyteam.github.io/" target="_blank" rel="noopener">alloyteam-github</a></li><li><a href="https://github.com/AlloyTeam/AlloyGameEngine" target="_blank" rel="noopener">alloyteam-AlloyGameEngine</a></li><li><a href="http://alloyteam.github.io/AlloyDesigner/" target="_blank" rel="noopener">AlloyDesigner</a> 即时修改，即时保存，设计稿较正，其它开发辅助工具</li><li><a href="http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao/" target="_blank" rel="noopener">H5交互页编辑器AEditor介绍</a> H5动画交互页开发的工具介绍</li><li><a href="http://aeditor.alloyteam.com/" target="_blank" rel="noopener">AEditor</a> H5动画交互页开发的工具</li><li><a href="http://forum.maka.im/wordpress/" target="_blank" rel="noopener">maka</a></li><li><a href="https://github.com/fenbility/weekly-feed" target="_blank" rel="noopener">值得订阅的weekly</a></li><li><a href="http://cube.qq.com/" target="_blank" rel="noopener">腾讯html5</a></li><li><a href="http://75team.github.io/" target="_blank" rel="noopener">奇舞团开源项目</a></li><li><a href="http://ued.qunar.com/" target="_blank" rel="noopener">Qunar UED</a></li><li><a href="http://scrat.io" target="_blank" rel="noopener">Scrat</a></li></ul><h4 id="2-Javascript"><a href="#2-Javascript" class="headerlink" title="2. Javascript"></a>2. Javascript</h4><ol><li><p>常用    </p><ul><li><a href="http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome/" target="_blank" rel="noopener">ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性</a></li><li><a href="http://mottie.github.io/Keyboard/" target="_blank" rel="noopener">模拟键盘</a></li><li><a href="https://github.com/hotoo/pinyin" target="_blank" rel="noopener">拼音</a></li><li><a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="noopener">中国个人身份证号验证</a></li></ul></li><li><p>算法</p><ul><li><a href="https://github.com/Ralph-Wang/algorithm.in.js" target="_blank" rel="noopener">数据结构与算法 JavaScript 描述. 章节练习</a></li><li><a href="https://github.com/twobin/twobinSort" target="_blank" rel="noopener">常见排序算法（JS版）</a></li><li><a href="https://github.com/luofei2011/jsAgm/blob/master/js/sort.js" target="_blank" rel="noopener">经典排序</a></li><li><a href="https://github.com/hechangmin/jssort" target="_blank" rel="noopener">常见排序算法-js版本</a></li><li><a href="https://github.com/lightningtgc/JavaScript-Algorithms" target="_blank" rel="noopener">JavaScript 算法与数据结构 精华集</a></li><li><a href="http://www.nowcoder.com/live/courses" target="_blank" rel="noopener">面试常考算法题精讲</a></li><li><a href></a></li></ul></li><li><p>移动端</p><ul><li><a href="https://github.com/ftlabs/fastclick" target="_blank" rel="noopener">fastclick</a></li><li><a href="https://github.com/mmastrac/jquery-noclickdelay" target="_blank" rel="noopener">no-click-delay</a></li></ul></li><li><p>JSON</p><ul><li><a href="http://beta.json-generator.com/" target="_blank" rel="noopener">模拟生成JSON数据</a></li><li><a href="http://jsonp.afeld.me/" target="_blank" rel="noopener">返回跨域JSONAPI</a></li></ul></li></ol><h4 id="3-Html5"><a href="#3-Html5" class="headerlink" title="3. Html5"></a>3. Html5</h4><ul><li><a href="http://www.zhihu.com/question/24398907" target="_blank" rel="noopener">HTML5 有哪些让你惊艳的 demo？</a></li></ul><h4 id="4-CSS"><a href="#4-CSS" class="headerlink" title="4. CSS"></a>4. CSS</h4><ul><li><a href="http://browserhacks.com/" target="_blank" rel="noopener">browserhacks</a></li><li><a href></a></li></ul><h4 id="5-jQuery"><a href="#5-jQuery" class="headerlink" title="5. jQuery"></a>5. jQuery</h4><ol><li><p>焦点图</p><ul><li><a href="https://github.com/koen301/myfocus" target="_blank" rel="noopener">myfocus</a></li><li><a href="http://www.chhua.com/myfocus/" target="_blank" rel="noopener">myfocus-官方演示站</a></li><li><a href="http://www.superslide2.com/" target="_blank" rel="noopener">SuperSlidev2.1 – 大话主席</a></li><li><a href="http://www.bujichong.com/sojs/soChange/index.html" target="_blank" rel="noopener">soChange</a></li></ul></li></ol><h4 id="6-Ext-EasyUI-J-UI-及其它各种UI方案"><a href="#6-Ext-EasyUI-J-UI-及其它各种UI方案" class="headerlink" title="6. Ext, EasyUI, J-UI 及其它各种UI方案"></a>6. Ext, EasyUI, J-UI 及其它各种UI方案</h4><ol><li><p>Ext</p><ul><li><a href="https://www.sencha.com/products/extjs/" target="_blank" rel="noopener">extjs</a></li><li><a href="http://docs.sencha.com/extjs/4.0.7/" target="_blank" rel="noopener">ext4英文api</a></li><li><a href="http://extjs-doc-cn.github.io/ext4api/" target="_blank" rel="noopener">ext4中文api</a></li><li><a href></a></li></ul></li><li><p>EasyUI</p><ul><li><a href="http://jquery-easyui.googlecode.com/svn/trunk/src/" target="_blank" rel="noopener">jquery easyui 未压缩源代码</a></li></ul></li><li><p>J-UI</p><ul><li><a href="http://jui.org/" target="_blank" rel="noopener">J-UI</a></li></ul></li><li><p>Other</p><ul><li><a href="http://dcloudio.github.io/mui/" target="_blank" rel="noopener">MUI-最接近原生APP体验的高性能前端框架</a></li><li><a href="http://amazeui.org/" target="_blank" rel="noopener">Amaze UI | 中国首个开源 HTML5 跨屏前端框架</a></li><li><a href="http://m.sui.taobao.org/" target="_blank" rel="noopener">淘宝 HTML5 前端框架</a></li><li><a href="http://docs.kissyui.com/" target="_blank" rel="noopener">KISSY - 阿里前端JavaScript库</a></li><li><a href="http://nej.netease.com/" target="_blank" rel="noopener">网易Nej - Nice Easy Javascript</a></li><li><a href="http://demos.telerik.com/kendo-ui/mvvm/index" target="_blank" rel="noopener">Kendo UI MVVM Demo</a></li><li><a href="http://www.bootcss.com/" target="_blank" rel="noopener">Bootstrap</a></li><li><a href="http://smartui.chinamzz.com/" target="_blank" rel="noopener">Smart UI</a></li><li><a href="http://developer.yahoo.com/yui/grids/" target="_blank" rel="noopener">雅虎UI - CSS UI</a></li></ul></li></ol><h4 id="7-页面-社会化-分享功能"><a href="#7-页面-社会化-分享功能" class="headerlink" title="7. 页面 社会化 分享功能"></a>7. 页面 社会化 分享功能</h4><ul><li><a href="http://share.baidu.com/" target="_blank" rel="noopener">百度分享</a> pc端</li><li><a href="http://jiathis.com/" target="_blank" rel="noopener">JiaThis</a> pc端</li><li><a href="http://developer.baidu.com/soc/share" target="_blank" rel="noopener">社会化分享组件</a> 移动端</li><li><a href="http://www.mob.com/#/index" target="_blank" rel="noopener">ShareSDK 轻松实现社会化功能</a> 移动端</li><li><a href="http://dev.umeng.com/social/android/quick-integration" target="_blank" rel="noopener">友盟分享</a> 移动端</li></ul><h4 id="8-富文本编辑器"><a href="#8-富文本编辑器" class="headerlink" title="8. 富文本编辑器"></a>8. 富文本编辑器</h4><ul><li><a href="https://www.tinymce.com/" target="_blank" rel="noopener">功能齐全 tinymce</a></li><li><a href="http://ueditor.baidu.com/website/" target="_blank" rel="noopener">百度 ueditor</a></li><li><a href="http://ckeditor.com/" target="_blank" rel="noopener">经典的ckeditor</a></li><li><a href="http://kindeditor.net/" target="_blank" rel="noopener">经典的kindeditor</a></li><li><a href="http://www.bootcss.com/p/bootstrap-wysiwyg/" target="_blank" rel="noopener">wysiwyg</a></li><li><a href="http://integ.github.io/BachEditor/" target="_blank" rel="noopener">一个有情怀的编辑器。Bach’s Editor</a></li><li><a href="https://github.com/mycolorway/simditor" target="_blank" rel="noopener">tower用的编辑器</a></li><li><a href="https://github.com/summernote/summernote" target="_blank" rel="noopener">summernote 编辑器</a></li><li><a href="http://neilj.github.io/Squire/" target="_blank" rel="noopener">html5编辑器</a></li><li><a href="http://lab.hustlzp.com/XEditor/" target="_blank" rel="noopener">XEditor</a></li><li><a href="https://github.com/wangfupeng1988/wangEditor" target="_blank" rel="noopener">wangEditor</a></li></ul><h4 id="9-日历"><a href="#9-日历" class="headerlink" title="9. 日历"></a>9. 日历</h4><ol><li><p>PC</p><ul><li><a href="http://www.my97.net/dp/demo/index.htm" target="_blank" rel="noopener">经典my97</a></li><li><a href="http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html" target="_blank" rel="noopener">强大的独立日期选择器</a></li><li><a href="http://fullcalendar.io/" target="_blank" rel="noopener">fullcalendar</a></li><li><a href="http://blog.csdn.net/francislaw/article/details/7740630" target="_blank" rel="noopener">fullcalendar日历控件知识点集合 </a></li><li><a href="http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html" target="_blank" rel="noopener">中文api</a></li><li><a href="https://github.com/zzyss86/LunarCalendar" target="_blank" rel="noopener">农历日历</a></li><li><a href="http://www.sucaisj.com/jiaoben/date/201509/16856.html" target="_blank" rel="noopener">超酷的仿百度带节日日历老黄历控件</a></li><li><a href="http://momentjs.com/" target="_blank" rel="noopener">日期格式化</a></li><li><a href="https://github.com/Johnqing/QPAYCalendar/" target="_blank" rel="noopener">大牛日历控件</a></li><li><a href="https://github.com/Iamlars/dateMarker" target="_blank" rel="noopener">我群某管理作品</a></li><li><a href="http://digitalbush.com/projects/masked-input-plugin/" target="_blank" rel="noopener">input按位替换-官网</a></li><li><a href="https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2" target="_blank" rel="noopener">input按位替换-github</a></li><li><a href="https://github.com/dangrossman/bootstrap-daterangepicker" target="_blank" rel="noopener">bootstrap-daterangepicker</a></li><li><a href="http://www.vandelaydesign.com/30-best-free-jquery-plugins/" target="_blank" rel="noopener">国外30个插件集合</a></li><li><a href="http://dbushell.com/2012/10/09/pikaday-javascript-datepicker/" target="_blank" rel="noopener">JavaScript datepicker</a></li><li><a href="http://jonthornton.github.io/Datepair.js/" target="_blank" rel="noopener">Datepair.js</a></li><li><a href="https://github.com/glad/glDatePicker" target="_blank" rel="noopener">一个风格多样的日历</a></li><li><a href="http://amsul.ca/pickadate.js/date/" target="_blank" rel="noopener">弹出层式的全日历</a></li><li><a href="http://www.daterangepicker.com/" target="_blank" rel="noopener">jquery双日历</a></li></ul></li><li><p>移动</p><ul><li><a href="http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115" target="_blank" rel="noopener">大气实用jQuery手机移动端日历日期选择插件</a></li><li><a href="https://mobiscroll.com/" target="_blank" rel="noopener">jQuery Mobile 移动开发中的日期插件Mobiscroll </a></li></ul></li></ol><ol start="3"><li><p>Date library</p><ul><li><a href="https://github.com/datejs/Datejs" target="_blank" rel="noopener">Datejs</a></li><li><a href="http://sugarjs.com/api/Date" target="_blank" rel="noopener">sugarjs</a></li></ul></li></ol><h4 id="10-综合效果搜索平台"><a href="#10-综合效果搜索平台" class="headerlink" title="10. 综合效果搜索平台"></a>10. 综合效果搜索平台</h4><ul><li><a href="http://www.jq22.com" target="_blank" rel="noopener">效果网</a></li><li><a href="http://www.17sucai.com/" target="_blank" rel="noopener">17素材</a></li><li><a href="http://microjs.com/" target="_blank" rel="noopener">常用的JavaScript代码片段</a></li></ul><h4 id="11-前端工程化"><a href="#11-前端工程化" class="headerlink" title="11. 前端工程化"></a>11. 前端工程化</h4><ol><li><p>概述</p><ul><li><a href="http://www.awesomes.cn/" target="_blank" rel="noopener">前端工具大全</a></li><li><a href="https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#" target="_blank" rel="noopener">什么是前端工程化</a></li></ul></li><li><p>Gulp </p><ul><li><a href="http://gulpjs.com/" target="_blank" rel="noopener">Gulp官网</a></li><li><a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener">Gulp中文网</a></li><li><a href="https://github.com/Platform-CUF/use-gulp" target="_blank" rel="noopener">gulp资料收集</a></li><li><a href="http://javascript.ruanyifeng.com/tool/gulp.html" target="_blank" rel="noopener">Gulp：任务自动管理工具 - ruanyifeng</a></li><li><a href="http://gulpjs.com/plugins/" target="_blank" rel="noopener">Gulp插件</a></li><li><a href="http://www.ido321.com/1622.html" target="_blank" rel="noopener">Gulp不完全入门教程</a></li><li><a href="https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33" target="_blank" rel="noopener">为什么使用gulp?</a></li><li><a href="http://www.dbpoo.com/getting-started-with-gulp/" target="_blank" rel="noopener">Gulp安装及配合组件构建前端开发一体化</a></li><li><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="noopener">Gulp 入门指南</a></li><li><a href="https://github.com/nimojs/blog/issues/19" target="_blank" rel="noopener">Gulp 入门指南 - nimojs</a></li><li><a href="http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">Gulp入门教程</a></li><li><a href="http://www.imooc.com/video/5692" target="_blank" rel="noopener">Gulp in Action</a></li><li><a href="http://www.w3ctech.com/topic/134" target="_blank" rel="noopener">Gulp开发教程（翻译）</a></li><li><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="noopener">前端构建工具gulpjs的使用介绍及技巧</a></li></ul></li><li><p>Grunt</p><ul><li><a href="http://gruntjs.com/" target="_blank" rel="noopener">gruntjs</a></li><li><a href="http://www.gruntjs.net/" target="_blank" rel="noopener">Grunt中文网</a></li></ul></li><li><p>Fis</p><ul><li><a href="http://fex-team.github.io/fis-site/index.html" target="_blank" rel="noopener">fis 官网</a></li><li><a href="http://fis.baidu.com/" target="_blank" rel="noopener">fis</a></li></ul></li></ol><h4 id="12-轮播图"><a href="#12-轮播图" class="headerlink" title="12. 轮播图"></a>12. 轮播图</h4><ol><li><p>pc图轮</p><ul><li><a href="http://www.jsfoot.com/jquery/demo/2011-09-20/192.html" target="_blank" rel="noopener">单屏轮播sochange</a></li><li><a href="http://bxslider.com/examples/carousel-demystified" target="_blank" rel="noopener">左右按钮多图切换</a></li><li><a href="https://github.com/alvarotrigo/fullPage.js/" target="_blank" rel="noopener">fullpage全屏轮播</a></li></ul></li><li><p>移动端</p><ul><li><a href="http://www.swipejs.com/" target="_blank" rel="noopener">无缝切换</a></li><li><a href="http://www.idangero.us/swiper/" target="_blank" rel="noopener">滑屏效果</a></li><li><a href="https://github.com/peunzhang/fullpage" target="_blank" rel="noopener">全屏fullpage</a></li><li><a href="https://github.com/qiqiboy/touchslider" target="_blank" rel="noopener">单个图片切换</a></li><li><a href="https://github.com/peunzhang/slip.js" target="_blank" rel="noopener">单个全屏切换</a></li><li><a href="http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group" target="_blank" rel="noopener">百度的切换库</a></li><li><a href="https://github.com/peunzhang/iSlider" target="_blank" rel="noopener">单个全屏切换</a></li><li><a href="https://github.com/saw/touch-interfaces" target="_blank" rel="noopener">滑屏效果</a></li><li><a href="http://baijs.com/tinycircleslider/" target="_blank" rel="noopener">旋转拖动设置</a></li><li><a href="http://touchslider.com/" target="_blank" rel="noopener">类似于swipe切换</a></li><li><a href="http://www.swiper.com.cn/demo/index.html" target="_blank" rel="noopener">支持多种形式的触摸滑动</a></li><li><a href="https://github.com/joker-ye/main/blob/master/wap/index.html" target="_blank" rel="noopener">滑屏效果</a></li><li><a href="http://www.superslide2.com/" target="_blank" rel="noopener">大话主席pc移动图片轮换</a></li><li><a href="https://github.com/hahnzhu/parallax.js" target="_blank" rel="noopener">滑屏效果</a></li><li><a href="https://github.com/yanhaijing/zepto.fullpage" target="_blank" rel="noopener">基于zepto的fullpage</a></li><li><a href="http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html" target="_blank" rel="noopener">[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应</a></li><li><a href="http://loo2k.com/blog/detecting-wechat-client/" target="_blank" rel="noopener">判断微信客户端的那些坑</a></li><li><a href="https://github.com/JefferyWang/nativeShare.js" target="_blank" rel="noopener">可以通过javascript直接调用原生分享的工具</a></li><li><a href="http://www.jiathis.com/help/html/weixin-share-code" target="_blank" rel="noopener">JiaThis 分享到微信代码</a></li><li><a href="http://fex.baidu.com/blog/2015/05/cross-mobile/" target="_blank" rel="noopener">聊聊移动端跨平台开发的各种技术</a></li><li><a href="http://www.zhihu.com/question/29922082" target="_blank" rel="noopener">前端自动化测试</a></li><li><a href="http://ajccom.github.io/niceslider/" target="_blank" rel="noopener">多种轮换图片</a></li><li><a href="https://mango.github.io/slideout/" target="_blank" rel="noopener">滑动侧边栏</a></li></ul></li></ol><h4 id="13-文件上传"><a href="#13-文件上传" class="headerlink" title="13. 文件上传"></a>13. 文件上传</h4><ul><li><a href="http://fex.baidu.com/webuploader/" target="_blank" rel="noopener">百度上传组件</a></li><li><a href="https://blueimp.github.io/jQuery-File-Upload/" target="_blank" rel="noopener">上传</a></li><li><a href="http://www.hdfu.net/" target="_blank" rel="noopener">flash 头像上传</a></li><li><a href="http://www.dropzonejs.com/" target="_blank" rel="noopener">图片上传预览</a></li><li><a href="http://elemefe.github.io/image-cropper/" target="_blank" rel="noopener">图片裁剪</a></li><li><a href="http://www.shearphoto.com/" target="_blank" rel="noopener">图片裁剪-shearphoto</a></li><li><a href="http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2" target="_blank" rel="noopener">jQuery图片处理</a></li><li><a href></a></li></ul><h4 id="14-模拟select"><a href="#14-模拟select" class="headerlink" title="14. 模拟select"></a>14. 模拟select</h4><ul><li><a href="http://aui.github.io/popupjs/doc/selectbox.html" target="_blank" rel="noopener">糖饼 select</a></li><li><a href="https://github.com/rmm5t/jquery-flexselect" target="_blank" rel="noopener">flexselect</a></li><li><a href="http://loudev.com/" target="_blank" rel="noopener">双select</a></li><li><a href="http://select2.github.io/" target="_blank" rel="noopener">select2</a></li><li><a href></a></li></ul><h4 id="15-取色插件"><a href="#15-取色插件" class="headerlink" title="15. 取色插件"></a>15. 取色插件</h4><ul><li><a href="http://www.jq22.com/plugin/367" target="_blank" rel="noopener">类似 Photoshop 的界面取色插件</a></li><li><a href="https://github.com/jquery/jquery-color/" target="_blank" rel="noopener">jquery color</a></li><li><a href="http://www.oschina.net/project/tag/287/color-picker" target="_blank" rel="noopener">取色插件集合</a></li><li><a href="https://github.com/mattfarina/farbtastic" target="_blank" rel="noopener">farbtastic 圆环＋正方形</a></li><li><a href></a></li></ul><h4 id="16-城市联动"><a href="#16-城市联动" class="headerlink" title="16. 城市联动"></a>16. 城市联动</h4><ul><li><a href="http://www.ijquery.cn/?p=360" target="_blank" rel="noopener">jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果</a></li><li><a href></a></li></ul><h4 id="17-剪贴板"><a href="#17-剪贴板" class="headerlink" title="17. 剪贴板"></a>17. 剪贴板</h4><ul><li><a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="noopener">剪贴板</a></li><li><a href="http://zenorocha.github.io/clipboard.js/" target="_blank" rel="noopener">clipboard 最新的剪切方案</a></li><li><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">不是Flash的剪贴板</a></li></ul><h4 id="18-简繁转换"><a href="#18-简繁转换" class="headerlink" title="18. 简繁转换"></a>18. 简繁转换</h4><ul><li><a href="https://github.com/BYVoid/OpenCC" target="_blank" rel="noopener">简繁转换</a></li></ul><h4 id="19-表格-Grid"><a href="#19-表格-Grid" class="headerlink" title="19. 表格 Grid"></a>19. 表格 Grid</h4><ul><li><a href="http://facebook.github.io/fixed-data-table/" target="_blank" rel="noopener">facebook表格</a></li><li><a href="http://handsontable.com/" target="_blank" rel="noopener">类似于Excel编辑表格-handsontable</a></li><li><a href="http://bootstrap-table.wenzhixin.net.cn/" target="_blank" rel="noopener">bootstrap-table插件</a></li><li><a href="https://www.datatables.net/" target="_blank" rel="noopener">datatables</a></li></ul><h4 id="20-在线演示"><a href="#20-在线演示" class="headerlink" title="20. 在线演示"></a>20. 在线演示</h4><ul><li><a href="http://runjs.cn/" target="_blank" rel="noopener">js 在线编辑 - runjs</a></li><li><a href="http://jsbin.com/" target="_blank" rel="noopener">js 在线编辑 - jsbin</a></li><li><a href="http://codepen.io/" target="_blank" rel="noopener">js 在线编辑 - codepen</a></li><li><a href="http://jsfiddle.net/" target="_blank" rel="noopener">js 在线编辑 - jsfiddle</a></li><li><a href="http://ideone.com/" target="_blank" rel="noopener">java 在线编辑 - runjs</a></li><li><a href="http://code.hcharts.cn/" target="_blank" rel="noopener">js 在线编辑 - hcharts</a></li><li><a href="http://jsdm.com/" target="_blank" rel="noopener">js 在线编辑 - jsdm</a></li><li><a href="http://sqlfiddle.com/" target="_blank" rel="noopener">sql 在线编辑 - sqlfiddle</a></li><li><a href="https://thimble.mozilla.org" target="_blank" rel="noopener">mozilla 在线编辑器</a></li></ul><h4 id="21-播放器"><a href="#21-播放器" class="headerlink" title="21. 播放器"></a>21. 播放器</h4><ul><li><a href="https://github.com/zmmbreeze/DeadSimpleVideoPlayer" target="_blank" rel="noopener">Html5 VideoPlayer</a></li></ul><h4 id="22-粒子动画"><a href="#22-粒子动画" class="headerlink" title="22. 粒子动画"></a>22. 粒子动画</h4><ul><li><a href="http://a-jie.github.io/Proton/#example" target="_blank" rel="noopener">Proton 烟花</a></li></ul><h3 id="九-Nodejs"><a href="#九-Nodejs" class="headerlink" title="九. Nodejs"></a>九. Nodejs</h3><ul><li><a href="http://liuqing.pw/" target="_blank" rel="noopener">nodejs 篇幅比较巨大</a></li><li><a href="https://github.com/alsotang/node-lessons" target="_blank" rel="noopener">Node.js 包教不包会</a></li><li><a href="http://www.rainweb.cn/article/category/Nodejs" target="_blank" rel="noopener">篇幅比较少</a></li><li><a href="http://www.w3cfuns.com/article-5598538-1-1.html" target="_blank" rel="noopener">node express 入门教程</a></li><li><a href="http://my.oschina.net/u/568264/blog/193773" target="_blank" rel="noopener">nodejs定时任务</a></li><li><a href="http://60sky.com/" target="_blank" rel="noopener">一个nodejs博客</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/3536547.html" target="_blank" rel="noopener">【NodeJS 学习笔记04】新闻发布系统</a></li><li><a href="http://www.cnblogs.com/qqloving/p/3541099.html" target="_blank" rel="noopener">过年7天乐，学nodejs 也快乐</a></li><li><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank" rel="noopener">七天学会NodeJS</a></li><li><a href="http://www.cnblogs.com/zhongweiv/p/nodejs_events.html" target="_blank" rel="noopener">Nodejs学习笔记（二）— 事件模块</a></li><li><a href="http://www.cnblogs.com/liusuqi/p/3735491.html" target="_blank" rel="noopener">nodejs入门</a></li><li><a href="https://github.com/zensh/jsgen" target="_blank" rel="noopener">angularjs nodejs</a></li><li><a href="http://blog.fens.me/series-nodejs/" target="_blank" rel="noopener">从零开始nodejs系列文章</a></li><li><a href="http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb" target="_blank" rel="noopener">理解nodejs</a></li><li><a href="http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/" target="_blank" rel="noopener">nodejs事件轮询</a></li><li><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="noopener">node入门</a></li><li><a href="http://ourjs.com/detail/53e1f281c5910a9806000001" target="_blank" rel="noopener">nodejs cms</a></li><li><a href="http://ourjs.com/detail/529ca5950cb6498814000005" target="_blank" rel="noopener">Node初学者入门，一本全面的NodeJS教程</a></li><li><a href="http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/" target="_blank" rel="noopener">NodeJS的代码调试和性能调优</a></li></ul><h3 id="十-性能优化"><a href="#十-性能优化" class="headerlink" title="十. 性能优化"></a>十. 性能优化</h3><ol><li><p>常规优化</p><ul><li><a href="http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering" target="_blank" rel="noopener">Javascript高性能动画与页面渲染</a></li><li><a href="http://isux.tencent.com/h5-performance.html" target="_blank" rel="noopener">移动H5前端性能优化指南</a></li><li><a href="http://ued.5173.com/?p=1731" target="_blank" rel="noopener">5173首页前端性能优化实践</a></li><li><a href="http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers" target="_blank" rel="noopener">给网页设计师和前端开发者看的前端性能优化</a></li><li><a href="http://www.orzpoint.com/profiling-css-and-optimization-notes/" target="_blank" rel="noopener">复杂应用的 CSS 性能分析和优化建议</a></li><li><a href="http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD/" target="_blank" rel="noopener">张鑫旭——前端性能</a></li><li><a href="http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html" target="_blank" rel="noopener">前端性能监控总结</a></li><li><a href="http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF/" target="_blank" rel="noopener">网站性能优化之CSS无图片技术</a></li><li><a href="http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html" target="_blank" rel="noopener">web前端性能优化进阶路</a></li><li><a href="http://my.eoe.cn/tuwandou/archive/4544.html" target="_blank" rel="noopener">前端技术：网站性能优化之CSS无图片技术</a></li><li><a href="http://www.baiduux.com/blog/2011/02/15/browser-loading/" target="_blank" rel="noopener">浏览器的加载与页面性能优化</a></li><li><a href="http://www.w3ctech.com/p/1503" target="_blank" rel="noopener">页面加载中的图片性能优化</a></li><li><a href="http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD" target="_blank" rel="noopener">Hey——前端性能</a></li><li><a href="http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2/" target="_blank" rel="noopener">html优化</a></li><li><a href="http://www.99css.com/tag/%e6%80%a7%e8%83%bd" target="_blank" rel="noopener">99css——性能</a></li><li><a href="http://www.yslow.net/category.php?cid=20" target="_blank" rel="noopener">Yslow——性能优化</a></li><li><a href="http://www.cnblogs.com/yslow/" target="_blank" rel="noopener">YSLOW中文介绍</a></li><li><a href="http://www.360ito.com/article/40.html" target="_blank" rel="noopener">转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化</a></li><li><a href="http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml" target="_blank" rel="noopener">Yahoo!团队实践分享：网站性能</a></li><li><a href="http://blog.jiasule.com/i/153" target="_blank" rel="noopener">网站性能优化指南：什么使我们的网站变慢？</a></li><li><a href="http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html" target="_blank" rel="noopener">网站性能优化实践，减少加载时间，提高用户体验</a></li><li><a href="http://www.umtry.com/archives/747.html" target="_blank" rel="noopener">浅谈网站性能优化 前端篇</a></li><li><a href="http://www.adinnet.cn/blog/designview/2012-7-12/678.html" target="_blank" rel="noopener">前端重构实践之如何对网站性能优化？</a></li><li><a href="http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9/" target="_blank" rel="noopener">前端性能优化：使用媒体查询加载指定大小的背景图片</a></li><li><a href="http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html" target="_blank" rel="noopener">网站性能系列博文</a></li><li><a href="http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml" target="_blank" rel="noopener">加载，不只是少一点点</a></li><li><a href="http://mzhou.me/article/95310/" target="_blank" rel="noopener">前端性能的测试与优化</a></li><li><a href="http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading/" target="_blank" rel="noopener">分享网页加载速度优化的一些技巧？</a></li><li><a href="http://www.f2es.com/images-bytes-opt/" target="_blank" rel="noopener">页面加载中的图片性能优化</a></li><li><a href="http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html" target="_blank" rel="noopener">web前端优化(基于Yslow)</a></li><li><a href="https://www.qianduan.net/website-performance-optimization-tool.html" target="_blank" rel="noopener">网站性能优化工具大全</a></li><li><a href="http://www.alloyteam.com/2012/10/high-performance-html/" target="_blank" rel="noopener">【高性能前端1】高性能HTML</a></li><li><a href="http://www.alloyteam.com/2012/10/high-performance-css/" target="_blank" rel="noopener">【高性能前端2】高性能CSS</a></li><li><a href="http://coolshell.cn/articles/6470.html" target="_blank" rel="noopener">由12306谈谈网站前端性能和后端性能优化</a></li><li><a href="http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/" target="_blank" rel="noopener">AlloyTeam——前端优化</a></li><li><a href="http://www.cnblogs.com/developersupport/p/3248695.html" target="_blank" rel="noopener">毫秒必争，前端网页性能最佳实践</a></li><li><a href="http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html" target="_blank" rel="noopener">网站性能工具Yslow的使用方法</a></li><li><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1" target="_blank" rel="noopener">前端工程与性能优化（上）：静态资源版本更新与缓存</a></li><li><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2" target="_blank" rel="noopener">前端工程与性能优化（下）：静态资源管理与模板框架</a></li><li><a href="http://blog.jobbole.com/48369/" target="_blank" rel="noopener">HTTPS连接的前几毫秒发生了什么</a></li><li><a href="http://uicss.cn/yslow/#more-12319" target="_blank" rel="noopener">Yslow</a></li><li><a href="http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1/" target="_blank" rel="noopener">Essential Web Performance Metrics — A Primer, Part 1</a></li><li><a href="http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2/" target="_blank" rel="noopener">Essential Web Performance Metrics — Part 2</a></li><li><a href="http://jayli.github.io/blog/data/2011/12/23/yuislide.html" target="_blank" rel="noopener">YUISlide,针对移动设备的动画性能优化</a></li><li><a href="http://joelglovier.com/improving-site-performance/" target="_blank" rel="noopener">Improving Site Performance</a></li><li><a href="http://segmentfault.com/a/1190000000367899" target="_blank" rel="noopener">让网站提速的最佳前端实践</a></li><li><a href="http://sixrevisions.com/web-development/why-website-speed-is-important/" target="_blank" rel="noopener">Why Website Speed is Important</a></li><li><a href="https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance/" target="_blank" rel="noopener">Need for Speed – How to Improve your Website Performance</a></li><li><a href="https://github.com/amfe/article/issues/1" target="_blank" rel="noopener">阿里无线前端性能优化指南 (Pt.1 加载期优化) </a></li><li><a href></a></li></ul></li><li><p>优化工具</p><ul><li><a href="http://www.html-js.com/article/3083" target="_blank" rel="noopener">JavaScript 性能分析新工具 OneProfile</a></li><li><a href="http://www.html-js.com/article/3091" target="_blank" rel="noopener">JavaScript 堆内存分析新工具 OneHeap</a></li></ul></li><li><p>在线工具</p><ul><li><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">google在线工具</a></li><li><a href="http://www.alibench.com/" target="_blank" rel="noopener">阿里测</a></li><li><a href="http://itest.aliyun.com/" target="_blank" rel="noopener">阿里-免费测试服务</a></li><li><a href="https://github.com/alibaba/f2etest" target="_blank" rel="noopener">阿里-F2etest多浏览器兼容性测试解决方案</a></li><li><a href="http://jsperf.com/" target="_blank" rel="noopener">js性能测试</a></li><li><a href></a></li></ul></li></ol><h3 id="十一-前端架构"><a href="#十一-前端架构" class="headerlink" title="十一. 前端架构"></a>十一. 前端架构</h3><ul><li><a href="http://www.zhihu.com/topic/19612641" target="_blank" rel="noopener">技术架构</a></li><li><a href="http://saito.im/note/The-Architecture-of-F2E/" target="_blank" rel="noopener">前端架构</a></li><li><a href="http://www.zhihu.com/question/24092572" target="_blank" rel="noopener">如何成为前端架构师</a></li><li><a href="http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html" target="_blank" rel="noopener">关于前端架构-张克军</a></li><li><a href="http://www.zhihu.com/question/25583350" target="_blank" rel="noopener">百度腾讯offer比较（腾讯游戏VS百度基础架构）</a></li><li><a href></a></li></ul><h3 id="十二-个人作品"><a href="#十二-个人作品" class="headerlink" title="十二. 个人作品"></a>十二. 个人作品</h3><h4 id="1-推荐作品"><a href="#1-推荐作品" class="headerlink" title="1. 推荐作品"></a>1. 推荐作品</h4><ul><li><a href="https://gist.github.com/wintercn" target="_blank" rel="noopener">winter代码片段需要翻墙</a></li><li><a href="http://www.fgm.cc/learn/" target="_blank" rel="noopener">fgm</a></li><li><a href="https://github.com/hongru/hongru.github.com" target="_blank" rel="noopener">岑安作品集</a></li><li><a href="http://kmdjs.github.io/" target="_blank" rel="noopener">当耐特demo集合</a></li><li><a href="http://www.laoshu133.com/Lab/" target="_blank" rel="noopener">米空格 js作品</a></li><li><a href="http://koen301.github.io/" target="_blank" rel="noopener">myFocus</a></li><li><a href="http://panxuepeng.github.io/seajslib/" target="_blank" rel="noopener">SeaJS组件库</a></li><li><a href="http://yanhaijing.com/myProject/" target="_blank" rel="noopener">颜海镜作品</a></li><li><a href="http://jo2.org/category/myworks/" target="_blank" rel="noopener">脚儿网作品</a></li><li><a href="http://www.cnitblog.com/yemoo/category/3107.html" target="_blank" rel="noopener">javascript个人作品</a></li><li><a href="http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790" target="_blank" rel="noopener">妙味的雷东升游戏作品</a></li><li><a href="http://bbs.csdn.net/topics/380227212" target="_blank" rel="noopener">javascript作品集</a></li><li><a href="https://github.com/TooBug/works" target="_blank" rel="noopener">云五笔，灰度产生生成工具</a></li><li><a href="http://koen301.github.io/" target="_blank" rel="noopener">项目主页</a></li><li><a href="http://zaole.net/" target="_blank" rel="noopener">个性的作品主页</a></li><li><a href="http://static.tingall.com/v2/player/" target="_blank" rel="noopener">播放器</a></li><li><a href="http://ucren.com/blog/demos" target="_blank" rel="noopener">ucren js demos 集</a></li><li><a href="http://www.zhinengshe.com/works_list.html" target="_blank" rel="noopener">智能社</a></li><li><a href="http://demos.shizuwu.cn/" target="_blank" rel="noopener">实例陈列架</a></li><li><a href="http://zoye.sinaapp.com/demo" target="_blank" rel="noopener">zoye demo</a></li><li><a href="http://lab.yuanwai.wang/" target="_blank" rel="noopener">王员外</a></li><li><a href="http://pingfan1990.sinaapp.com" target="_blank" rel="noopener">平凡</a></li><li><a href="http://www.lovewebgames.com/" target="_blank" rel="noopener">jyg 游戏案例</a></li><li><a href="http://www.helloweba.com/list.html" target="_blank" rel="noopener">很多jquery插件</a></li><li><a href="http://www.bujichong.com/sojs/api/index.html" target="_blank" rel="noopener">不羁虫 - soJs 作品系列</a></li><li><a href="http://frozenui.github.io/case.html" target="_blank" rel="noopener">frozenui</a></li><li><a href="http://js-game.github.io/othello/" target="_blank" rel="noopener">黑白棋</a></li><li><a href="http://yansm.github.io/fromone/index.html" target="_blank" rel="noopener">fromone</a></li></ul><h4 id="2-群员作品"><a href="#2-群员作品" class="headerlink" title="2. 群员作品"></a>2. 群员作品</h4><ul><li><a href="http://demo.webjyh.com/" target="_blank" rel="noopener">MDialog - [合肥-M.J]</a></li><li><a href="http://sandbox.runjs.cn/show/do6zlrrk" target="_blank" rel="noopener">轮播图 - [上海－冷静]</a></li><li><a href="http://www.replace5.com/" target="_blank" rel="noopener">[广州—坚壳]</a></li><li><a href="http://www.seejs.com/demos/" target="_blank" rel="noopener">[成都 - 无痕]　感恩节专题</a></li><li><a href="http://hacke2.github.io/works" target="_blank" rel="noopener">[球霸天]</a></li><li><a href="http://www.cnblogs.com/mcat/" target="_blank" rel="noopener">[北京-小数]</a></li><li><a href="http://thx.github.io/magix/" target="_blank" rel="noopener">[ptf] Magix 工具</a></li><li><a href="http://thx.github.io/magix/" target="_blank" rel="noopener">[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用</a></li><li><a href="http://bh-lay.com/labs/" target="_blank" rel="noopener">[上海-剧中人]-实验室</a></li><li><a href="http://jikeytang.github.io" target="_blank" rel="noopener">[上海-豪情 ] 作品集合</a></li><li><a href="http://guoshan.sinaapp.com/" target="_blank" rel="noopener">[成都-feeling]</a></li><li><a href="http://www.cnblogs.com/liyunhua/" target="_blank" rel="noopener">[上海-angela]</a></li><li><a href="http://hcjp.github.io/work/demo/" target="_blank" rel="noopener">[海南-hank]作品</a></li><li><a href="https://github.com/yibuyisheng/blogs/issues" target="_blank" rel="noopener">[上海-张力]博客</a></li><li><a href="http://zkske121.github.io/" target="_blank" rel="noopener">[上海-zenki]作品</a></li><li><a href="http://01google.sinaapp.com/locker.html" target="_blank" rel="noopener">移动端图案解锁</a></li><li><a href="https://github.com/webjyh/MPreview.mobile" target="_blank" rel="noopener">[合肥-M.J] - MPreview 移动端图片预览组</a></li><li><a href="https://github.com/webjyh/Mexam" target="_blank" rel="noopener">[合肥-M.J] - Mexam 移动端在线做题组</a></li><li><a href="http://letyougo.github.io/dancer/" target="_blank" rel="noopener">[北京-苏瑞] - dancer小人</a></li><li><a href="http://k.swao.cn/js/" target="_blank" rel="noopener">[上海-玄沐]- 个人网站</a></li><li><a href="http://www.meckodo.com/" target="_blank" rel="noopener">[厦门-二哲]- 个人博客</a></li></ul><h4 id="3-国外大牛精品"><a href="#3-国外大牛精品" class="headerlink" title="3. 国外大牛精品"></a>3. 国外大牛精品</h4><ul><li><a href="http://pazguille.me/" target="_blank" rel="noopener">pazguille</a></li></ul><h3 id="十三-简历模板"><a href="#十三-简历模板" class="headerlink" title="十三. 简历模板"></a>十三. 简历模板</h3><ul><li><a href="http://learnshare.github.io/about/index.html" target="_blank" rel="noopener">不错的个人简历</a></li><li><a href="http://hcy2367.github.io/resume/" target="_blank" rel="noopener">简历</a></li><li><a href="http://ncuey.sinaapp.com/CrispElite/" target="_blank" rel="noopener">张伦</a></li><li><a href="https://github.com/hacke2/ResumeSample" target="_blank" rel="noopener">简历</a></li><li><a href="http://blog.dandyweng.com/2013/07/how-my-website-was-created/" target="_blank" rel="noopener">翁天信</a></li><li><a href="http://www.webhek.com/misc/interactive-resume/" target="_blank" rel="noopener">动画方式的简历</a></li><li><a href="http://www.linqing07.com/resume.html" target="_blank" rel="noopener">组件丰富简历</a></li><li><a href="http://www.mojianli.com/resume/view" target="_blank" rel="noopener">简历池</a></li><li><a href="http://www.haorooms.com/about" target="_blank" rel="noopener">haorooms博客</a></li><li><a href="http://cv.youngdze.com/" target="_blank" rel="noopener">Justin Young</a></li><li><a href></a></li></ul><h3 id="十四-面试题"><a href="#十四-面试题" class="headerlink" title="十四. 面试题"></a>十四. 面试题</h3><ul><li><a href="http://www.nowcoder.com/discuss/3196" target="_blank" rel="noopener">那几个月在找工作（百度，网易游戏）</a></li><li><a href="http://www.html-js.com/article/1743" target="_blank" rel="noopener">2014最新面试题</a></li><li><a href="http://www.w3cfuns.com/thread-5598563-2-1.html" target="_blank" rel="noopener">阿里前端面试题</a></li><li><a href="http://www.cnblogs.com/imwtr/p/4685546.html" target="_blank" rel="noopener">2016校招内推 – 阿里巴巴前端 – 三面面试经历 </a></li><li><a href="http://www.w3cfuns.com/article-5599657-1-1.html" target="_blank" rel="noopener">腾讯面试题</a></li><li><a href="http://www.cnblogs.com/lvdabao/p/3660707.html" target="_blank" rel="noopener">年后跳槽那点事：乐视+金山+360面试之行</a></li><li><a href="http://fatesinger.com/2722.html" target="_blank" rel="noopener">阿里前端面试题上线</a></li><li><a href="http://www.cnblogs.com/52cik/p/js-question-lg.html" target="_blank" rel="noopener">拉勾网js面试题</a></li><li><a href="http://www.cnblogs.com/allenxing/p/3724382.html" target="_blank" rel="noopener">前端面试</a></li><li><a href="http://mianshiti.diandian.com/" target="_blank" rel="noopener">Web开发笔试面试题 大全</a></li><li><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="noopener">前端开发面试题</a></li><li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions" target="_blank" rel="noopener">2014最新前端面试题</a></li><li><a href="https://github.com/fex-team/interview-questions" target="_blank" rel="noopener">百度面试</a></li><li><a href="http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177" target="_blank" rel="noopener">面试题</a></li><li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese" target="_blank" rel="noopener">前端工作面试问题</a></li><li><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="noopener">前端开发面试题</a></li><li><a href="http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">5个经典的前端面试问题</a></li><li><a href="http://segmentfault.com/a/1190000002562454" target="_blank" rel="noopener">最全前端面试问题及答案总结 </a></li><li><a href="http://www.html-js.com/article/Large-search-front-team-column%202961" target="_blank" rel="noopener">如何面试一名前端开发工程师？</a></li><li><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="noopener">史上最全 前端开发面试问题及答案整理</a></li><li><a href="http://www.cnblogs.com/xiaoruo/p/4665163.html" target="_blank" rel="noopener">前端实习生面试总结 </a></li><li><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="noopener">史上最全 前端开发面试问题及答案整理</a></li><li><a href="http://blog.jobbole.com/78738/" target="_blank" rel="noopener">BAT及各大互联网公司2014前端笔试面试题：JavaScript篇</a></li><li><a href="https://github.com/paddingme/Front-end-Web-Development-Interview-Question" target="_blank" rel="noopener">前端开发面试题大收集</a></li><li><a href="https://github.com/qiu-deqing/FE-interview" target="_blank" rel="noopener">收集的前端面试题和答案</a></li><li><a href="http://www.zhihu.com/question/19568008" target="_blank" rel="noopener">如何面试前端工程师</a></li><li><a href="https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md" target="_blank" rel="noopener">前端开发面试题</a></li><li><a href="http://www.nowcoder.com/discuss?type=2" target="_blank" rel="noopener">牛客网-笔试面经</a></li></ul><h3 id="十五-iconfont"><a href="#十五-iconfont" class="headerlink" title="十五. iconfont"></a>十五. iconfont</h3><ul><li><a href="http://www.zhihu.com/question/21253343" target="_blank" rel="noopener">中文字体</a></li><li><a href="http://iconfont.cn" target="_blank" rel="noopener">淘宝字库</a></li><li><a href="http://mux.alimama.com/fonts" target="_blank" rel="noopener">字体</a></li><li><a href="http://iconfont.cn/help/platform.html" target="_blank" rel="noopener">制作教程</a></li><li><a href="http://www.zhangxinxu.com/wordpress/?s=icomoon" target="_blank" rel="noopener">zhangxinxu-icommon</a></li><li><a href="https://icomoon.io/app/" target="_blank" rel="noopener">icommon</a></li><li><a href="http://imooc.com/learn/243" target="_blank" rel="noopener">用字体在网页中画ICON图标(推荐教程)</a></li><li><a href="http://font-spider.org/" target="_blank" rel="noopener">字体压缩工具</a> 感谢初级群　[深圳-小鱼] 的推荐</li></ul><h3 id="十六-开发工具类"><a href="#十六-开发工具类" class="headerlink" title="十六. 开发工具类"></a>十六. 开发工具类</h3><ol><li><p>前端开发工具</p><ul><li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="noopener">IntelliJ IDEA 简体中文专题教程</a></li><li><a href="http://t.cn/8kZZ1Uy" target="_blank" rel="noopener">Webstorm,InterllIdea,Phpstorm</a></li><li><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="noopener">SublimeText</a></li><li><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a></li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">visual studio code</a></li></ul></li><li><p>Chrome, Firebug, Filddle 调试</p><ol><li><p>Fiddler</p><ul><li><a href="http://www.cnblogs.com/tugenhua0707/p/4623317.html" target="_blank" rel="noopener">Fiddler调式使用知多少(一)深入研究</a></li><li><a href="http://www.cnblogs.com/strick/p/4570006.html" target="_blank" rel="noopener">微信fiddle</a></li><li><a href="http://gaoboy.com/article/26.html" target="_blank" rel="noopener">微信fiddle</a></li><li><a href></a></li></ul></li><li><p>Chrome</p><ul><li><a href="https://developer.chrome.com/devtools" target="_blank" rel="noopener">Google Chrome 官方</a></li><li><a href="http://www.cnblogs.com/constantince/p/4565261.html" target="_blank" rel="noopener">Chrome - 基础</a></li><li><a href="http://www.cnblogs.com/constantince/p/4579121.html" target="_blank" rel="noopener">Chrome - 进阶</a></li><li><a href="http://www.cnblogs.com/constantince/p/4585983.html" target="_blank" rel="noopener">Chrome - 性能</a></li><li><a href="http://www.cnblogs.com/constantince/p/4607497.html" target="_blank" rel="noopener">Chrome - 性能进阶</a></li><li><a href="http://www.cnblogs.com/constantince/p/4624241.html" target="_blank" rel="noopener">Chrome - 移动</a></li><li><a href="http://www.cnblogs.com/liyunhua/p/4544738.html" target="_blank" rel="noopener">Chrome - 使用技巧</a></li><li><a href="http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html" target="_blank" rel="noopener">Chrome - Console控制台不完全指南</a></li><li><a href="http://c7sky.com/chrome-devtools-workspace.html" target="_blank" rel="noopener">Chrome - Workspace使浏览器变成IDE</a></li><li><a href="http://www.html-js.com/article/Nothing-blind%202975" target="_blank" rel="noopener">network面板</a></li><li><a href="http://anti-code.com/devtools-cheatsheet/" target="_blank" rel="noopener">chrome开发工具快捷键</a></li><li><a href="http://www.html-js.com/article/2327" target="_blank" rel="noopener">chrome调试工具常用功能整理</a></li><li><a href="http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace/" target="_blank" rel="noopener">Chrome 开发工具 Workspace 使用</a></li><li><a href="http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html" target="_blank" rel="noopener">Chrome神器Vimium快捷键学习记录 </a></li><li><a href="http://www.w3cplus.com/sassguide/debug.html" target="_blank" rel="noopener">sass调试-w3cplus</a></li><li><a href="http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html" target="_blank" rel="noopener">如何更专业的使用Chrome开发者工具-w3cplus</a></li><li><a href="http://sentsin.com/web/253.html" target="_blank" rel="noopener">chrome调试canvas</a></li><li><a href="https://developer.chrome.com/devtools/index" target="_blank" rel="noopener">chrome profiles1</a></li><li><a href="http://h5dev.uc.cn/article-25-1.html" target="_blank" rel="noopener">chrome profiles2</a></li><li><a href="http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles" target="_blank" rel="noopener">chrome profiles3</a></li><li><a href="https://developer.chrome.com/devtools/docs/mobile-emulation" target="_blank" rel="noopener">chrome移动版调试</a></li><li><a href="http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool/" target="_blank" rel="noopener">chrome调试</a></li><li><a href="http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html" target="_blank" rel="noopener">chrome的调试</a></li><li><a href="https://developer.chrome.com/devtools/docs/commandline-api" target="_blank" rel="noopener">chrome console 命令详解</a></li><li><a href="http://www.cnblogs.com/leonkao/p/3809655.html" target="_blank" rel="noopener">查看事件绑定1</a></li><li><a href="http://www.cnblogs.com/xiaoyao2011/p/3447421.html" target="_blank" rel="noopener">查看事件绑定2</a></li><li><a href="http://segmentfault.com/a/1190000000683599" target="_blank" rel="noopener">神器——Chrome开发者工具(一)</a></li><li><a href="https://xinranliu.me/2015-05-22-qiqu-performance/" target="_blank" rel="noopener">奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍)</a></li><li><a href="http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html" target="_blank" rel="noopener">chrome 开发者工具的 15 个小技巧</a></li><li><a href="http://1ke.co/course/361" target="_blank" rel="noopener">Chrome开发者工具不完全指南</a></li><li><a href="http://segmentfault.com/a/1190000003882567" target="_blank" rel="noopener">Chrome 开发者工具使用技巧</a></li></ul></li><li><p>Firebug</p><ul><li><a href="http://www.imooc.com/learn/137" target="_blank" rel="noopener">firebug视频教程</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE" target="_blank" rel="noopener">firefox 模拟器</a></li><li><a href="http://www.cnblogs.com/ctriphire/p/4116207.html" target="_blank" rel="noopener">console.log 命令详解</a></li><li><a href="http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html" target="_blank" rel="noopener">Firebug入门指南</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html" target="_blank" rel="noopener">Firebug控制台详解</a></li><li><a href></a></li></ul></li><li><p>移动,微信调试</p><ul><li><a href="https://openstf.github.io/" target="_blank" rel="noopener">浏览器端调试安卓</a></li><li><a href="http://yujiangshui.com/multidevice-frontend-debug/" target="_blank" rel="noopener">移动端前端开发调试</a></li><li><a href="https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md" target="_blank" rel="noopener">使用 Chrome 远程调试 Android 设备</a></li><li><a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="noopener">mac移动端调试</a></li><li><a href="http://www.mihtool.com/" target="_blank" rel="noopener">mac移动端调试</a></li><li><a href="http://thx.github.io/mobile/debugging-in-mobile/" target="_blank" rel="noopener">无线调试攻略</a></li><li><a href="http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile/" target="_blank" rel="noopener">无线调试攻略</a></li><li><a href="http://www.jianshu.com/p/ccf124f1f74b" target="_blank" rel="noopener">屌爆了,完美调试 微信webview(x5)</a></li><li><a href="http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/" target="_blank" rel="noopener">微信调试的那些事</a></li><li><a href="http://jsconsole.com/" target="_blank" rel="noopener">远程console</a></li><li><a href="http://blog.qqbrowser.cc/" target="_blank" rel="noopener">微信调试工具</a></li><li><a href="https://github.com/jieyou/remote_inspect_web_on_real_device" target="_blank" rel="noopener">各种真机远程调试方法汇总</a></li></ul></li><li><p>iOS Simulator</p><ul><li><a href="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html" target="_blank" rel="noopener">Simulator</a></li><li><a href="http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary/" target="_blank" rel="noopener">Xcode中的iOS模拟器(iOS Simulator)的介绍和使用心得</a></li></ul></li></ol></li><li><p>img</p><ul><li><a href="http://preloaders.net/en/circular" target="_blank" rel="noopener">loading img</a></li><li><a href="http://zhitu.isux.us/" target="_blank" rel="noopener">智图-图片优化平台</a></li><li><a href="https://tinypng.com/" target="_blank" rel="noopener">在线png优化</a></li></ul></li><li><p>生成二维码</p><ul><li><a href="http://cli.im/" target="_blank" rel="noopener">生成二维码</a></li></ul></li><li><p>浏览器同步</p><ul><li><a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">puer</a></li><li><a href="http://livereload.com/" target="_blank" rel="noopener">liveReload</a></li><li><a href="http://getf5.com/" target="_blank" rel="noopener">f5</a></li><li><a href="http://geek100.com/2608/" target="_blank" rel="noopener">File Watchers</a></li></ul></li><li><p>在线PPT制作</p><ul><li><a href="http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt/" target="_blank" rel="noopener">nodePPT</a></li><li><a href="https://github.com/ksky521/nodePPT" target="_blank" rel="noopener">PPT</a></li><li><a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="noopener">reveal</a></li><li><a href="https://github.com/Seldaek/slippy" target="_blank" rel="noopener">slippy</a></li></ul></li></ol><h3 id="十七-前端导航网站"><a href="#十七-前端导航网站" class="headerlink" title="十七. 前端导航网站"></a>十七. 前端导航网站</h3><ul><li><a href="http://uxbees.com/index.html" target="_blank" rel="noopener">界面清爽的前端导航</a></li><li><a href="http://whycss.com/" target="_blank" rel="noopener">前端导航</a></li><li><a href="http://www.daqianduan.com/nav" target="_blank" rel="noopener">前端网址导航</a></li><li><a href="http://sentsin.com/daohang/" target="_blank" rel="noopener">前端名录</a></li><li><a href="http://123.jser.us/" target="_blank" rel="noopener">前端导航</a></li><li><a href="http://www.css88.com/nav/" target="_blank" rel="noopener">前端开发资源</a></li><li><a href="http://www.haourl.cn/" target="_blank" rel="noopener">网址导航</a></li><li><a href="http://code.ciaoca.com/" target="_blank" rel="noopener">前端开发仓库 - 众多效果的收集地</a> </li><li><a href="https://github.com/jnoodle/f2e-collect" target="_blank" rel="noopener">前端资源导航</a></li><li><a href="http://f2e.im/static/pages/nav/index.html" target="_blank" rel="noopener">F2E 前端导航</a></li></ul><h3 id="十八-常用CDN"><a href="#十八-常用CDN" class="headerlink" title="十八. 常用CDN"></a>十八. 常用CDN</h3><ul><li><a href="http://lib.sinaapp.com/" target="_blank" rel="noopener">新浪CDN</a></li><li><a href="http://cdn.code.baidu.com/" target="_blank" rel="noopener">百度静态资源公共库</a></li><li><a href="http://libs.useso.com/" target="_blank" rel="noopener">360网站卫士常用前端公共库CDN服务</a></li><li><a href="http://www.bootcdn.cn/" target="_blank" rel="noopener">Bootstrap中文网开源项目免费 CDN 服务</a></li><li><a href="http://staticfile.org/" target="_blank" rel="noopener">开放静态文件 CDN - 七牛</a></li><li><a href="http://www.jq22.com/cdn/" target="_blank" rel="noopener">CDN加速 - jq22</a></li><li><a href="http://code.jquery.com/" target="_blank" rel="noopener">jQuery CDN</a></li><li><a href="http://www.google-jquery-cdn.com/" target="_blank" rel="noopener">Google jQuery CDN</a></li><li><a href="http://www.asp.net/ajax/cdn" target="_blank" rel="noopener">微软CDN</a></li></ul><h3 id="十九-Git-SVN-Github"><a href="#十九-Git-SVN-Github" class="headerlink" title="十九. Git,SVN,Github"></a>十九. Git,SVN,Github</h3><ol><li><p>Git</p><ul><li><a href="http://git-scm.com/" target="_blank" rel="noopener">git-scm</a></li><li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰-Git教程</a></li><li><a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">git-for-windows</a></li><li><a href="http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github/" target="_blank" rel="noopener">GitHub 添加 SSH keys</a></li><li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">gogithub</a></li><li><a href="http://pcottle.github.io/learnGitBranching/" target="_blank" rel="noopener">git常规命令练习</a></li><li><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">git的资料整理</a></li><li><a href="http://www.cnblogs.com/fanfan259/p/4810517.html" target="_blank" rel="noopener">我所记录的git命令（非常实用）</a></li><li><a href="https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md" target="_blank" rel="noopener">企业开发git工作流模式探索部分休整</a></li><li><a href="https://github.com/phodal/github-roam" target="_blank" rel="noopener">GitHub 漫游指南</a></li><li><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md" target="_blank" rel="noopener">GitHub秘籍</a></li><li><a href="http://livoras.com/post/28" target="_blank" rel="noopener">使用git和github进行协同开发流程</a></li><li><a href="http://onlywei.github.io/explain-git-with-d3/" target="_blank" rel="noopener">动画方式练习git</a></li></ul></li></ol><p>新增：<a href="https://github.com/AutumnsWind/Front-end-tutorial/blob/master/project.md" target="_blank" rel="noopener">https://github.com/AutumnsWind/Front-end-tutorial/blob/master/project.md</a></p><p>内容是出自：<br><a href="https://github.com/jsfront/src/blob/master/qq.md" target="_blank" rel="noopener">https://github.com/jsfront/src/blob/master/qq.md</a></p><p><a href="https://github.com/jsfront/src/blob/master/qq.md" target="_blank" rel="noopener">https://github.com/jsfront/src/blob/master/qq.md</a></p><p><a href="https://github.com/jsfront/src/blob/master/qq.md" target="_blank" rel="noopener">https://github.com/jsfront/src/blob/master/qq.md</a></p><table><thead><tr><th>综合类</th><th>地址</th></tr></thead><tbody><tr><td>前端知识体系</td><td><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="noopener">http://www.cnblogs.com/sb19871023/p/3894452.html</a></td></tr><tr><td>前端知识结构</td><td><a href="https://github.com/JacksonTian/fks" target="_blank" rel="noopener">https://github.com/JacksonTian/fks</a></td></tr><tr><td>Web前端开发大系概览</td><td><a href="https://github.com/unruledboy/WebFrontEndStack" target="_blank" rel="noopener">https://github.com/unruledboy/WebFrontEndStack</a></td></tr><tr><td>Web前端开发大系概览-中文版</td><td><a href="http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html" target="_blank" rel="noopener">http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html</a></td></tr><tr><td>Web Front-end Stack v2.2</td><td><a href="https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png" target="_blank" rel="noopener">https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png</a></td></tr><tr><td>免费的编程中文书籍索引</td><td><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noopener">https://github.com/justjavac/free-programming-books-zh_CN</a></td></tr><tr><td>前端书籍</td><td><a href="https://github.com/dypsilon/frontend-dev-bookmarks" target="_blank" rel="noopener">https://github.com/dypsilon/frontend-dev-bookmarks</a></td></tr><tr><td>前端免费书籍大全</td><td><a href="https://github.com/vhf/free-programming-books" target="_blank" rel="noopener">https://github.com/vhf/free-programming-books</a></td></tr><tr><td>前端知识体系</td><td><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="noopener">http://www.cnblogs.com/sb19871023/p/3894452.html</a></td></tr><tr><td>免费的编程中文书籍索引</td><td><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noopener">https://github.com/justjavac/free-programming-books-zh_CN</a></td></tr><tr><td>智能社 - 精通JavaScript开发</td><td><a href="http://study.163.com/course/introduction/224014.htm" target="_blank" rel="noopener">http://study.163.com/course/introduction/224014.htm</a></td></tr><tr><td>重新介绍 JavaScript（JS 教程）</td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript</a></td></tr><tr><td>麻省理工学院公开课：计算机科学及编程导论</td><td><a href="http://v.163.com/special/opencourse/bianchengdaolun.html" target="_blank" rel="noopener">http://v.163.com/special/opencourse/bianchengdaolun.html</a></td></tr><tr><td>JavaScript中的this陷阱的最全收集–没有之一</td><td><a href="http://segmentfault.com/a/1190000002640298" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002640298</a></td></tr><tr><td>JS函数式编程指南</td><td><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html" target="_blank" rel="noopener">https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html</a></td></tr><tr><td>JavaScript Promise迷你书（中文版）</td><td><a href="http://liubin.github.io/promises-book" target="_blank" rel="noopener">http://liubin.github.io/promises-book</a></td></tr><tr><td>腾讯移动Web前端知识库</td><td><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">https://github.com/AlloyTeam/Mars</a></td></tr><tr><td>Front-End-Develop-Guide 前端开发指南</td><td><a href="https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide" target="_blank" rel="noopener">https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide</a></td></tr><tr><td>前端开发笔记本</td><td><a href="https://li-xinyang.gitbooks.io/frontend-notebook/content" target="_blank" rel="noopener">https://li-xinyang.gitbooks.io/frontend-notebook/content</a></td></tr><tr><td>大前端工具集 - 聂微东</td><td><a href="https://github.com/nieweidong/fetool" target="_blank" rel="noopener">https://github.com/nieweidong/fetool</a></td></tr><tr><td>前端开发者手册</td><td><a href="https://dwqs.gitbooks.io/frontenddevhandbook/content" target="_blank" rel="noopener">https://dwqs.gitbooks.io/frontenddevhandbook/content</a></td></tr></tbody></table><table><thead><tr><th>入门类</th><th>地址</th></tr></thead><tbody><tr><td>前端入门教程</td><td><a href="http://www.cnblogs.com/jikey/p/3613082.html" target="_blank" rel="noopener">http://www.cnblogs.com/jikey/p/3613082.html</a></td></tr><tr><td>瘳雪峰的Javascript教程</td><td><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a></td></tr><tr><td>jQuery基础教程</td><td><a href="http://www.imooc.com/view/11" target="_blank" rel="noopener">http://www.imooc.com/view/11</a></td></tr><tr><td>前端工程师必备的PS技能——切图篇</td><td><a href="http://www.imooc.com/view/506" target="_blank" rel="noopener">http://www.imooc.com/view/506</a></td></tr><tr><td>结合个人经历总结的前端入门方法</td><td><a href="https://github.com/qiu-deqing/FE-learning" target="_blank" rel="noopener">https://github.com/qiu-deqing/FE-learning</a></td></tr></tbody></table><table><thead><tr><th>效果类</th><th>地址</th></tr></thead><tbody><tr><td>弹出层</td><td><a href="http://www.imooc.com/learn/58" target="_blank" rel="noopener">http://www.imooc.com/learn/58</a></td></tr><tr><td>焦点图轮播特效</td><td><a href="http://www.imooc.com/learn/18" target="_blank" rel="noopener">http://www.imooc.com/learn/18</a></td></tr></tbody></table><table><thead><tr><th>工具类</th><th>地址</th></tr></thead><tbody><tr><td>css sprite 雪碧图制作</td><td><a href="http://www.imooc.com/learn/93" target="_blank" rel="noopener">http://www.imooc.com/learn/93</a></td></tr><tr><td>版本控制入门 – 搬进 Github</td><td><a href="http://www.imooc.com/learn/390" target="_blank" rel="noopener">http://www.imooc.com/learn/390</a></td></tr><tr><td>Grunt-beginner前端自动化工具</td><td><a href="http://www.imooc.com/learn/30" target="_blank" rel="noopener">http://www.imooc.com/learn/30</a></td></tr></tbody></table><table><thead><tr><th>慕课专题</th><th>地址</th></tr></thead><tbody><tr><td>张鑫旭 - 慕课系列</td><td><a href="http://www.imooc.com/space/teacher/id/197450" target="_blank" rel="noopener">http://www.imooc.com/space/teacher/id/197450</a></td></tr><tr><td>lyn - 慕课系列</td><td><a href="http://www.imooc.com/space/teacher/id/104593" target="_blank" rel="noopener">http://www.imooc.com/space/teacher/id/104593</a></td></tr><tr><td>艾伦 - 慕课系列</td><td><a href="http://www.imooc.com/space/teacher/id/290139" target="_blank" rel="noopener">http://www.imooc.com/space/teacher/id/290139</a></td></tr><tr><td>碧仔 - Hello，移动WEB</td><td><a href="http://www.imooc.com/view/494" target="_blank" rel="noopener">http://www.imooc.com/view/494</a></td></tr></tbody></table><table><thead><tr><th>周报类</th><th>地址</th></tr></thead><tbody><tr><td>平安科技移动开发二队技术周报</td><td><a href="https://github.com/PaicHyperionDev/MobileDevWeekly" target="_blank" rel="noopener">https://github.com/PaicHyperionDev/MobileDevWeekly</a></td></tr></tbody></table><h3 id="API"><a href="#API" class="headerlink" title="API:"></a>API:</h3><table><thead><tr><th>开发中心</th><th>地址</th></tr></thead><tbody><tr><td>mozilla js参考</td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript</a></td></tr><tr><td>chrome开发中心（chrome的内核已转向blink）</td><td><a href="https://developer.chrome.com/extensions/api_index.html" target="_blank" rel="noopener">https://developer.chrome.com/extensions/api_index.html</a></td></tr><tr><td>safari开发中心</td><td><a href="https://developer.apple.com/library/safari/navigation" target="_blank" rel="noopener">https://developer.apple.com/library/safari/navigation</a></td></tr><tr><td>microsoft js参考</td><td><a href="https://msdn.microsoft.com/zh-cn/library/d1et7k7c" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/d1et7k7c</a>(v=vs.94.aspx</td></tr><tr><td>js秘密花园</td><td><a href="http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html" target="_blank" rel="noopener">http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html</a></td></tr><tr><td>js秘密花园</td><td><a href="http://bonsaiden.github.io/JavaScript-Garden/zh" target="_blank" rel="noopener">http://bonsaiden.github.io/JavaScript-Garden/zh</a></td></tr><tr><td>w3help</td><td><a href="http://www.w3help.org" target="_blank" rel="noopener">http://www.w3help.org</a> 综合Bug集合网站</td></tr></tbody></table><table><thead><tr><th>综合搜索</th><th>地址</th></tr></thead><tbody><tr><td>javascripting</td><td><a href="http://www.javascripting.com" target="_blank" rel="noopener">http://www.javascripting.com</a></td></tr><tr><td>各种流行库搜索</td><td><a href="http://microjs.com" target="_blank" rel="noopener">http://microjs.com</a></td></tr></tbody></table><table><thead><tr><th>综合API</th><th>地址</th></tr></thead><tbody><tr><td>runoob.com-包含各种API集合</td><td><a href="http://www.runoob.com" target="_blank" rel="noopener">http://www.runoob.com</a></td></tr><tr><td>开源中国在线API文档合集</td><td><a href="http://tool.oschina.net/apidocs" target="_blank" rel="noopener">http://tool.oschina.net/apidocs</a></td></tr><tr><td>devdocs</td><td><a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a> 英文综合API网站</td></tr></tbody></table><table><thead><tr><th>jQuery</th><th>地址</th></tr></thead><tbody><tr><td>jQuery API 中文文档</td><td><a href="http://www.jquery123.com" target="_blank" rel="noopener">http://www.jquery123.com</a></td></tr><tr><td>hemin 在线版</td><td><a href="http://hemin.cn/jq" target="_blank" rel="noopener">http://hemin.cn/jq</a></td></tr><tr><td>css88 jq api</td><td><a href="http://www.css88.com/jqapi-1.9/on" target="_blank" rel="noopener">http://www.css88.com/jqapi-1.9/on</a></td></tr><tr><td>css88 jqui api</td><td><a href="http://www.css88.com/jquery-ui-api" target="_blank" rel="noopener">http://www.css88.com/jquery-ui-api</a></td></tr><tr><td>学习jquery</td><td><a href="http://learn.jquery.com" target="_blank" rel="noopener">http://learn.jquery.com</a></td></tr><tr><td>jquery 源码查找</td><td><a href="http://james.padolsey.com/jquery" target="_blank" rel="noopener">http://james.padolsey.com/jquery</a></td></tr></tbody></table><table><thead><tr><th>Ecmascript</th><th>地址</th></tr></thead><tbody><tr><td>Understanding ECMAScript 6 - Nicholas C. Zakas</td><td><a href="https://leanpub.com/understandinges6/read" target="_blank" rel="noopener">https://leanpub.com/understandinges6/read</a></td></tr><tr><td>exploring-es6</td><td><a href="https://leanpub.com/exploring-es6/read" target="_blank" rel="noopener">https://leanpub.com/exploring-es6/read</a></td></tr><tr><td>exploring-es6翻译</td><td><a href="https://github.com/es6-org/exploring-es6" target="_blank" rel="noopener">https://github.com/es6-org/exploring-es6</a></td></tr><tr><td>exploring-es6翻译后预览</td><td><a href="http://es6-org.github.io/exploring-es6" target="_blank" rel="noopener">http://es6-org.github.io/exploring-es6</a></td></tr><tr><td>阮一峰 es6</td><td><a href="http://es6.ruanyifeng.com" target="_blank" rel="noopener">http://es6.ruanyifeng.com</a></td></tr><tr><td>阮一峰 Javascript</td><td><a href="http://javascript.ruanyifeng.com" target="_blank" rel="noopener">http://javascript.ruanyifeng.com</a></td></tr><tr><td>ECMA-262，第 5 版</td><td><a href="http://yanhaijing.com/es5" target="_blank" rel="noopener">http://yanhaijing.com/es5</a></td></tr><tr><td>es5</td><td><a href="http://es5.github.io" target="_blank" rel="noopener">http://es5.github.io</a></td></tr></tbody></table><table><thead><tr><th>Js template</th><th>地址</th></tr></thead><tbody><tr><td>template-chooser</td><td><a href="http://garann.github.io/template-chooser" target="_blank" rel="noopener">http://garann.github.io/template-chooser</a></td></tr><tr><td>artTemplate</td><td><a href="https://github.com/aui/artTemplate" target="_blank" rel="noopener">https://github.com/aui/artTemplate</a></td></tr><tr><td>tomdjs</td><td><a href="https://github.com/aui/tmodjs/blob/master/README.md" target="_blank" rel="noopener">https://github.com/aui/tmodjs/blob/master/README.md</a></td></tr><tr><td>淘宝模板juicer模板</td><td><a href="http://juicer.name/docs/docs_zh_cn.html" target="_blank" rel="noopener">http://juicer.name/docs/docs_zh_cn.html</a></td></tr><tr><td>Fxtpl v1.0 繁星前端模板引擎</td><td><a href="http://koen301.github.io/fxtpl" target="_blank" rel="noopener">http://koen301.github.io/fxtpl</a></td></tr><tr><td>laytpl</td><td><a href="http://laytpl.layui.com" target="_blank" rel="noopener">http://laytpl.layui.com</a></td></tr><tr><td>mozilla - nunjucks</td><td><a href="https://github.com/mozilla/nunjucks" target="_blank" rel="noopener">https://github.com/mozilla/nunjucks</a></td></tr><tr><td>Juicer</td><td><a href="https://github.com/PaulGuo/Juicer" target="_blank" rel="noopener">https://github.com/PaulGuo/Juicer</a></td></tr><tr><td>dustjs</td><td><a href="http://akdubya.github.io/dustjs" target="_blank" rel="noopener">http://akdubya.github.io/dustjs</a></td></tr><tr><td>etpl</td><td><a href="http://ecomfe.github.io/etpl" target="_blank" rel="noopener">http://ecomfe.github.io/etpl</a></td></tr></tbody></table><table><thead><tr><th>弹出层</th><th>地址</th></tr></thead><tbody><tr><td>artDialog 最新版</td><td><a href="https://github.com/aui/artDialog" target="_blank" rel="noopener">https://github.com/aui/artDialog</a></td></tr><tr><td>artDialog 文档</td><td><a href="http://aui.github.io/artDialog/doc/index.html" target="_blank" rel="noopener">http://aui.github.io/artDialog/doc/index.html</a></td></tr><tr><td>google code 下载地址</td><td><a href="https://code.google.com/p/artdialog/downloads/list" target="_blank" rel="noopener">https://code.google.com/p/artdialog/downloads/list</a></td></tr><tr><td>贤心弹出层</td><td><a href="http://layer.layui.com" target="_blank" rel="noopener">http://layer.layui.com</a></td></tr><tr><td>响应式用户交互组件库</td><td><a href="https://github.com/bh-lay/UI" target="_blank" rel="noopener">https://github.com/bh-lay/UI</a></td></tr><tr><td>sweetalert-有css3动画弹出层</td><td><a href="http://t4t5.github.io/sweetalert" target="_blank" rel="noopener">http://t4t5.github.io/sweetalert</a></td></tr></tbody></table><table><thead><tr><th>CSS</th><th>地址</th></tr></thead><tbody><tr><td>CSS 语法参考</td><td><a href="http://tympanus.net/codrops/css_reference" target="_blank" rel="noopener">http://tympanus.net/codrops/css_reference</a></td></tr><tr><td>CSS3动画手册</td><td><a href="http://isux.tencent.com/css3/index.html" target="_blank" rel="noopener">http://isux.tencent.com/css3/index.html</a></td></tr><tr><td>腾讯css3动画制作工具</td><td><a href="http://isux.tencent.com/css3/tools.html" target="_blank" rel="noopener">http://isux.tencent.com/css3/tools.html</a></td></tr><tr><td>志爷css小工具集合</td><td><a href="http://linxz.github.io/tianyizone" target="_blank" rel="noopener">http://linxz.github.io/tianyizone</a></td></tr><tr><td>css3 js 移动大杂烩</td><td><a href="http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb" target="_blank" rel="noopener">http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb</a></td></tr><tr><td>bouncejs 触摸库</td><td><a href="http://bouncejs.com" target="_blank" rel="noopener">http://bouncejs.com</a></td></tr><tr><td>css3 按钮动画</td><td><a href="http://fian.my.id/Waves" target="_blank" rel="noopener">http://fian.my.id/Waves</a></td></tr><tr><td>animate.css</td><td><a href="http://daneden.github.io/animate.css" target="_blank" rel="noopener">http://daneden.github.io/animate.css</a></td></tr><tr><td>全局CSS的终结(狗带 [译]</td><td><a href="http://www.alloyteam.com/2015/10/8536" target="_blank" rel="noopener">http://www.alloyteam.com/2015/10/8536</a></td></tr></tbody></table><table><thead><tr><th>Angularjs</th><th>地址</th></tr></thead><tbody><tr><td>Angular.js 的一些学习资源</td><td><a href="https://github.com/dolymood/AngularLearning" target="_blank" rel="noopener">https://github.com/dolymood/AngularLearning</a></td></tr><tr><td>angularjs中文社区</td><td><a href="http://angularjs.cn" target="_blank" rel="noopener">http://angularjs.cn</a></td></tr><tr><td>Angularjs源码学习</td><td><a href="http://www.cnblogs.com/xuwenmin888/p/3739096.html" target="_blank" rel="noopener">http://www.cnblogs.com/xuwenmin888/p/3739096.html</a></td></tr><tr><td>Angularjs源码学习</td><td><a href="http://www.ifeenan.com/?c=AngularJS" target="_blank" rel="noopener">http://www.ifeenan.com/?c=AngularJS</a></td></tr><tr><td>angular对bootstrap的封装</td><td><a href="http://angular-ui.github.io/bootstrap" target="_blank" rel="noopener">http://angular-ui.github.io/bootstrap</a></td></tr><tr><td>angularjs + nodejs</td><td><a href="https://cnodejs.org/topic/51404e0f069911196d2e3923" target="_blank" rel="noopener">https://cnodejs.org/topic/51404e0f069911196d2e3923</a></td></tr><tr><td>吕大豹 Angularjs</td><td><a href="http://www.cnblogs.com/lvdabao/tag/AngularJs" target="_blank" rel="noopener">http://www.cnblogs.com/lvdabao/tag/AngularJs</a></td></tr><tr><td>AngularJS 最佳实践</td><td><a href="http://www.infoq.com/cn/news/2013/02/angular-web-app" target="_blank" rel="noopener">http://www.infoq.com/cn/news/2013/02/angular-web-app</a></td></tr><tr><td>Angular的一些扩展指令</td><td><a href="http://www.lovelucy.info/angularjs-best-practices.html" target="_blank" rel="noopener">http://www.lovelucy.info/angularjs-best-practices.html</a></td></tr><tr><td>Angular数据绑定原理</td><td><a href="https://github.com/Pasvaz/bindonce" target="_blank" rel="noopener">https://github.com/Pasvaz/bindonce</a></td></tr><tr><td>一些扩展Angular UI组件</td><td><a href="https://github.com/angular-ui" target="_blank" rel="noopener">https://github.com/angular-ui</a></td></tr><tr><td>Ember和AngularJS的性能测试</td><td><a href="http://voidcanvas.com/emberjs-vs-angularjs-performance-testing" target="_blank" rel="noopener">http://voidcanvas.com/emberjs-vs-angularjs-performance-testing</a></td></tr><tr><td>带你走近AngularJS - 基本功能介绍</td><td><a href="http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html" target="_blank" rel="noopener">http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html</a></td></tr><tr><td>Angularjs开发指南</td><td><a href="http://angular.duapp.com/docs/guide" target="_blank" rel="noopener">http://angular.duapp.com/docs/guide</a></td></tr><tr><td>Angularjs学习</td><td><a href="http://www.cnblogs.com/amosli/p/3710648.html" target="_blank" rel="noopener">http://www.cnblogs.com/amosli/p/3710648.html</a></td></tr><tr><td>不要带着jQuery的思维去学习AngularJS</td><td><a href="http://www.rainweb.cn/article/angularjs-jquery.html" target="_blank" rel="noopener">http://www.rainweb.cn/article/angularjs-jquery.html</a></td></tr><tr><td>angularjs 学习笔记</td><td><a href="http://wangjiatao.diandian.com/?tag=angularjs" target="_blank" rel="noopener">http://wangjiatao.diandian.com/?tag=angularjs</a></td></tr><tr><td>angularjs 开发指南</td><td><a href="http://www.angularjs.cn/T008" target="_blank" rel="noopener">http://www.angularjs.cn/T008</a></td></tr><tr><td>angularjs 英文资料</td><td><a href="https://github.com/jmcunningham/AngularJS-Learning" target="_blank" rel="noopener">https://github.com/jmcunningham/AngularJS-Learning</a></td></tr><tr><td>angular bootstrap</td><td><a href="http://angular-ui.github.io/bootstrap" target="_blank" rel="noopener">http://angular-ui.github.io/bootstrap</a></td></tr><tr><td>angular jq mobile</td><td><a href="https://github.com/opitzconsulting/jquery-mobile-angular-adapter" target="_blank" rel="noopener">https://github.com/opitzconsulting/jquery-mobile-angular-adapter</a></td></tr><tr><td>angular ui</td><td><a href="http://mgcrea.github.io/angular-strap" target="_blank" rel="noopener">http://mgcrea.github.io/angular-strap</a></td></tr><tr><td>整合jQuery Mobile+AngularJS经验谈</td><td><a href="http://www.tuicool.com/articles/7ZZVr2" target="_blank" rel="noopener">http://www.tuicool.com/articles/7ZZVr2</a></td></tr><tr><td>有jQuery背景，该如何用AngularJS编程思想</td><td><a href="http://blog.jobbole.com/46589/" target="_blank" rel="noopener">http://blog.jobbole.com/46589/</a> </td></tr><tr><td>AngularJS在线教程</td><td><a href="http://each.sinaapp.com/angular" target="_blank" rel="noopener">http://each.sinaapp.com/angular</a></td></tr><tr><td>angular学习笔记</td><td><a href="http://www.zouyesheng.com/angular.html" target="_blank" rel="noopener">http://www.zouyesheng.com/angular.html</a></td></tr></tbody></table><table><thead><tr><th>React</th><th>地址</th></tr></thead><tbody><tr><td>react.js 中文论坛</td><td><a href="http://www.react-china.org" target="_blank" rel="noopener">http://www.react-china.org</a></td></tr><tr><td>react.js 官方网址</td><td><a href="https://facebook.github.io/react/index.html" target="_blank" rel="noopener">https://facebook.github.io/react/index.html</a></td></tr><tr><td>react.js 官方文档</td><td><a href="https://facebook.github.io/react/docs/getting-started.html" target="_blank" rel="noopener">https://facebook.github.io/react/docs/getting-started.html</a></td></tr><tr><td>react.js material UI</td><td><a href="http://material-ui.com/#" target="_blank" rel="noopener">http://material-ui.com/#</a></td></tr><tr><td>react.js TouchstoneJS UI</td><td><a href="http://touchstonejs.io" target="_blank" rel="noopener">http://touchstonejs.io</a></td></tr><tr><td>react.js amazeui UI</td><td><a href="http://amazeui.org/react" target="_blank" rel="noopener">http://amazeui.org/react</a></td></tr><tr><td>React 入门实例教程 - 阮一峰</td><td><a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/03/react.html</a></td></tr><tr><td>React Native 中文版</td><td><a href="http://wiki.jikexueyuan.com/project/react-native" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/react-native</a></td></tr><tr><td>Webpack 和 React 小书 - 前端乱炖</td><td><a href="http://www.html-js.com/article/Fakefish%203053" target="_blank" rel="noopener">http://www.html-js.com/article/Fakefish%203053</a></td></tr><tr><td>Webpack 和 React 小书 - gitbook</td><td><a href="https://fakefish.github.io/react-webpack-cookbook" target="_blank" rel="noopener">https://fakefish.github.io/react-webpack-cookbook</a></td></tr><tr><td>webpack</td><td><a href="https://github.com/webpack/webpack" target="_blank" rel="noopener">https://github.com/webpack/webpack</a></td></tr><tr><td>Webpack，101入门体验</td><td><a href="http://html-js.com/article/3009" target="_blank" rel="noopener">http://html-js.com/article/3009</a></td></tr><tr><td>webpack入门教程</td><td><a href="http://html-js.com/article/3113" target="_blank" rel="noopener">http://html-js.com/article/3113</a></td></tr><tr><td>基于webpack搭建前端工程解决方案探索</td><td><a href="http://segmentfault.com/a/1190000003499526" target="_blank" rel="noopener">http://segmentfault.com/a/1190000003499526</a></td></tr><tr><td>React原创实战视频教程</td><td><a href="http://www.piliyu.com" target="_blank" rel="noopener">http://www.piliyu.com</a></td></tr></tbody></table><h4 id="移动端API"><a href="#移动端API" class="headerlink" title="移动端API"></a>移动端API</h4><table><thead><tr><th>API</th><th>地址</th></tr></thead><tbody><tr><td>99移动端知识集合</td><td><a href="https://github.com/jtyjty99999/mobileTech" target="_blank" rel="noopener">https://github.com/jtyjty99999/mobileTech</a></td></tr><tr><td>移动端前端开发知识库</td><td><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">https://github.com/AlloyTeam/Mars</a></td></tr><tr><td>移动前端的一些坑和解决方法（外观表现）</td><td><a href="http://caibaojian.com/mobile-web-bug.html" target="_blank" rel="noopener">http://caibaojian.com/mobile-web-bug.html</a></td></tr><tr><td>【原】移动web资源整理</td><td><a href="http://www.cnblogs.com/PeunZhang/p/3407453.html" target="_blank" rel="noopener">http://www.cnblogs.com/PeunZhang/p/3407453.html</a></td></tr><tr><td>zepto 1.0 中文手册</td><td><a href="http://mweb.baidu.com/zeptoapi" target="_blank" rel="noopener">http://mweb.baidu.com/zeptoapi</a></td></tr><tr><td>zepto 1.0 中文手册</td><td><a href="http://www.html-5.cn/Manual/Zepto" target="_blank" rel="noopener">http://www.html-5.cn/Manual/Zepto</a></td></tr><tr><td>zepto 1.1.2</td><td><a href="http://www.css88.com/doc/zeptojs_api" target="_blank" rel="noopener">http://www.css88.com/doc/zeptojs_api</a></td></tr><tr><td>zepto 中文注释</td><td><a href="http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html" target="_blank" rel="noopener">http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html</a></td></tr><tr><td>jqmobile 手册</td><td><a href="http://app-framework-software.intel.com/api.php" target="_blank" rel="noopener">http://app-framework-software.intel.com/api.php</a></td></tr><tr><td>移动浏览器开发集合</td><td><a href="https://github.com/maxzhang/maxzhang.github.com/issues" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues</a></td></tr><tr><td>移动开发大杂烩</td><td><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="noopener">https://github.com/hoosin/mobile-web-favorites</a></td></tr><tr><td>微信webview中的一些问题</td><td><a href="http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98</a></td></tr></tbody></table><ol start="2"><li>框架<br>框架| 地址<br>— | —<br>特色的HTML框架可以创建精美的iOS应用|<a href="http://framework7.taobao.org" target="_blank" rel="noopener">http://framework7.taobao.org</a><br>淘宝SUI|<a href="http://m.sui.taobao.org" target="_blank" rel="noopener">http://m.sui.taobao.org</a></li></ol><h4 id="10-avalon-1"><a href="#10-avalon-1" class="headerlink" title="10. avalon"></a>10. avalon</h4><table><thead><tr><th>avalon</th><th>地址</th></tr></thead><tbody><tr><td>avalonjs</td><td><a href="http://avalonjs.github.io" target="_blank" rel="noopener">http://avalonjs.github.io</a></td></tr><tr><td>Avalon新一代UI库： OniUI</td><td><a href="http://ued.qunar.com/oniui/index.html" target="_blank" rel="noopener">http://ued.qunar.com/oniui/index.html</a></td></tr><tr><td>avalon.oniui-基于avalon的组件库</td><td><a href="https://github.com/RubyLouvre/avalon.oniui" target="_blank" rel="noopener">https://github.com/RubyLouvre/avalon.oniui</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="11-Requriejs-1"><a href="#11-Requriejs-1" class="headerlink" title="11. Requriejs"></a>11. Requriejs</h4><table><thead><tr><th>Requriejs</th><th>地址</th></tr></thead><tbody><tr><td>Javascript模块化编程（一）：模块的写法</td><td><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/10/javascript_module.html</a></td></tr><tr><td>Javascript模块化编程（二）：AMD规范</td><td><a href="http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html</a></td></tr><tr><td>Javascript模块化编程（三）：require.js的用法</td><td><a href="http://www.ruanyifeng.com/blog/2012/11/require_js.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/11/require_js.html</a></td></tr><tr><td>RequireJS入门（一）</td><td><a href="http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html" target="_blank" rel="noopener">http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html</a></td></tr><tr><td>RequireJS入门（二）</td><td><a href="http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html" target="_blank" rel="noopener">http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html</a></td></tr><tr><td>RequireJS进阶（三）</td><td><a href="http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html" target="_blank" rel="noopener">http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html</a></td></tr><tr><td>requrie源码学习</td><td><a href="http://www.cnblogs.com/yexiaochai/p/3632580.html" target="_blank" rel="noopener">http://www.cnblogs.com/yexiaochai/p/3632580.html</a> </td></tr><tr><td>requrie 入门指南</td><td><a href="http://www.oschina.net/translate/getting-started-with-the-requirejs-library" target="_blank" rel="noopener">http://www.oschina.net/translate/getting-started-with-the-requirejs-library</a> </td></tr><tr><td>requrieJS 学习笔记</td><td><a href="http://www.cnblogs.com/yexiaochai/p/3214926.html" target="_blank" rel="noopener">http://www.cnblogs.com/yexiaochai/p/3214926.html</a> </td></tr><tr><td>requriejs 其一</td><td><a href="http://cyj.me/why-seajs/requirejs/" target="_blank" rel="noopener">http://cyj.me/why-seajs/requirejs/</a> </td></tr><tr><td>require backbone结合</td><td><a href="http://www.cnblogs.com/yexiaochai/p/3221081.html" target="_blank" rel="noopener">http://www.cnblogs.com/yexiaochai/p/3221081.html</a> </td></tr></tbody></table><h4 id="12-Seajs-1"><a href="#12-Seajs-1" class="headerlink" title="12. Seajs"></a>12. Seajs</h4><table><thead><tr><th>Seajs</th><th>地址</th></tr></thead><tbody><tr><td>seajs</td><td><a href="http://seajs.org" target="_blank" rel="noopener">http://seajs.org</a></td></tr><tr><td>seajs 中文手册</td><td><a href="http://cyj.me/why-seajs/zh" target="_blank" rel="noopener">http://cyj.me/why-seajs/zh</a></td></tr></tbody></table><h4 id="13-Less-sass-1"><a href="#13-Less-sass-1" class="headerlink" title="13. Less,sass"></a>13. Less,sass</h4><table><thead><tr><th>Less,sass</th><th>地址</th></tr></thead><tbody><tr><td>sass</td><td><a href="http://www.w3cplus.com/sassguide" target="_blank" rel="noopener">http://www.w3cplus.com/sassguide</a></td></tr><tr><td>sass教程-sass中国</td><td><a href="http://www.sass.hk" target="_blank" rel="noopener">http://www.sass.hk</a></td></tr><tr><td>Sass 中文文档</td><td><a href="http://sass.bootcss.com" target="_blank" rel="noopener">http://sass.bootcss.com</a></td></tr><tr><td>less</td><td><a href="http://less.bootcss.com" target="_blank" rel="noopener">http://less.bootcss.com</a></td></tr></tbody></table><h4 id="14-Markdown-1"><a href="#14-Markdown-1" class="headerlink" title="14. Markdown"></a>14. Markdown</h4><table><thead><tr><th>Markdown</th><th>地址</th></tr></thead><tbody><tr><td>Markdown 语法说明 (简体中文版</td><td><a href="http://wowubuntu.com/markdown" target="_blank" rel="noopener">http://wowubuntu.com/markdown</a></td></tr><tr><td>markdown入门参考</td><td><a href="https://github.com/LearnShare/Learning-Markdown/blob/master/README.md" target="_blank" rel="noopener">https://github.com/LearnShare/Learning-Markdown/blob/master/README.md</a></td></tr><tr><td>gitbook</td><td><a href="https://www.gitbook.com" target="_blank" rel="noopener">https://www.gitbook.com</a> 国外的在线markdown可编辑成书</td></tr><tr><td>mdeditor</td><td><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">https://www.zybuluo.com/mdeditor</a>  一款国内的在线markdown编辑器</td></tr><tr><td>stackedit</td><td><a href="https://stackedit.io" target="_blank" rel="noopener">https://stackedit.io</a> 国外的在线markdown编辑器，功能强大，同步云盘</td></tr><tr><td>mditor</td><td><a href="http://bh-lay.github.io/mditor" target="_blank" rel="noopener">http://bh-lay.github.io/mditor</a> 一款轻量级的markdown编辑器</td></tr><tr><td>lepture-editor</td><td><a href="https://github.com/lepture/editor" target="_blank" rel="noopener">https://github.com/lepture/editor</a></td></tr><tr><td>markdown-editor</td><td><a href="https://github.com/jbt/markdown-editor" target="_blank" rel="noopener">https://github.com/jbt/markdown-editor</a></td></tr></tbody></table><h4 id="15-D3-1"><a href="#15-D3-1" class="headerlink" title="15. D3"></a>15. D3</h4><table><thead><tr><th>D3</th><th>地址</th></tr></thead><tbody><tr><td>d3 Tutorials</td><td><a href="https://github.com/mbostock/d3/wiki/Tutorials" target="_blank" rel="noopener">https://github.com/mbostock/d3/wiki/Tutorials</a></td></tr><tr><td>Gallery</td><td><a href="https://github.com/mbostock/d3/wiki/Gallery" target="_blank" rel="noopener">https://github.com/mbostock/d3/wiki/Gallery</a></td></tr><tr><td>lofter</td><td><a href="http://datavisual.lofter.com/post/40cf3a_188e535" target="_blank" rel="noopener">http://datavisual.lofter.com/post/40cf3a_188e535</a></td></tr><tr><td>iteye</td><td><a href="http://alanland.iteye.com/blog/1878595" target="_blank" rel="noopener">http://alanland.iteye.com/blog/1878595</a></td></tr><tr><td>ruanyifeng</td><td><a href="http://javascript.ruanyifeng.com/library/d3.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/library/d3.html</a></td></tr></tbody></table><h4 id="16-兼容性-1"><a href="#16-兼容性-1" class="headerlink" title="16. 兼容性"></a>16. 兼容性</h4><table><thead><tr><th>兼容性</th><th>地址</th></tr></thead><tbody><tr><td>esma 兼容列表</td><td><a href="http://kangax.github.io/compat-table/es6" target="_blank" rel="noopener">http://kangax.github.io/compat-table/es6</a></td></tr><tr><td>W3C CSS验证服务</td><td><a href="http://jigsaw.w3.org/css-validator/validator.html.zh-cn" target="_blank" rel="noopener">http://jigsaw.w3.org/css-validator/validator.html.zh-cn</a></td></tr><tr><td>caniuse</td><td><a href="http://caniuse.com/#index" target="_blank" rel="noopener">http://caniuse.com/#index</a> </td></tr><tr><td>csscreator</td><td><a href="http://csscreator.com/properties" target="_blank" rel="noopener">http://csscreator.com/properties</a></td></tr><tr><td>microsoft</td><td><a href="https://msdn.microsoft.com/zh-cn/library/cc351024" target="_blank" rel="noopener">https://msdn.microsoft.com/zh-cn/library/cc351024</a>(v=vs.85.aspx</td></tr><tr><td>在线测兼容-移动端</td><td><a href="http://www.responsinator.com" target="_blank" rel="noopener">http://www.responsinator.com</a></td></tr><tr><td>emulators</td><td><a href="https://www.manymo.com/emulators" target="_blank" rel="noopener">https://www.manymo.com/emulators</a></td></tr></tbody></table><h4 id="17-UI相关-1"><a href="#17-UI相关-1" class="headerlink" title="17. UI相关"></a>17. UI相关</h4><table><thead><tr><th>UI相关</th><th>地址</th></tr></thead><tbody><tr><td>bootcss</td><td><a href="http://v3.bootcss.com" target="_blank" rel="noopener">http://v3.bootcss.com</a></td></tr><tr><td>MetroUICSS</td><td><a href="http://www.w3cplus.com/MetroUICSS" target="_blank" rel="noopener">http://www.w3cplus.com/MetroUICSS</a></td></tr><tr><td>semantic</td><td><a href="http://semantic-ui.com" target="_blank" rel="noopener">http://semantic-ui.com</a></td></tr><tr><td>Buttons</td><td><a href="http://alexwolfe.github.io/Buttons" target="_blank" rel="noopener">http://alexwolfe.github.io/Buttons</a></td></tr><tr><td>kitecss</td><td><a href="http://hiloki.github.io/kitecss" target="_blank" rel="noopener">http://hiloki.github.io/kitecss</a></td></tr><tr><td>pintuer</td><td><a href="http://www.pintuer.com" target="_blank" rel="noopener">http://www.pintuer.com</a></td></tr><tr><td>amazeui</td><td><a href="http://amazeui.org" target="_blank" rel="noopener">http://amazeui.org</a></td></tr><tr><td>worldhello</td><td><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">http://www.worldhello.net/gotgithub/index.html</a></td></tr><tr><td>linuxtoy</td><td><a href="http://igit.linuxtoy.org/contents.html" target="_blank" rel="noopener">http://igit.linuxtoy.org/contents.html</a></td></tr><tr><td>gitmagic</td><td><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn" target="_blank" rel="noopener">http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn</a></td></tr><tr><td>rogerdudler</td><td><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">http://rogerdudler.github.io/git-guide/index.zh.html</a></td></tr><tr><td>gitref</td><td><a href="http://gitref.justjavac.com" target="_blank" rel="noopener">http://gitref.justjavac.com</a></td></tr><tr><td>book</td><td><a href="http://git-scm.com/book/zh" target="_blank" rel="noopener">http://git-scm.com/book/zh</a></td></tr><tr><td>gogojimmy</td><td><a href="http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic" target="_blank" rel="noopener">http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic</a></td></tr></tbody></table><h4 id="18-HTTP-1"><a href="#18-HTTP-1" class="headerlink" title="18. HTTP"></a>18. HTTP</h4><table><thead><tr><th>HTTP</th><th>地址</th></tr></thead><tbody><tr><td>HTTP API 设计指南</td><td><a href="http://segmentfault.com/bookmark/1230000002521721" target="_blank" rel="noopener">http://segmentfault.com/bookmark/1230000002521721</a></td></tr></tbody></table><h4 id="19-其它API-1"><a href="#19-其它API-1" class="headerlink" title="19. 其它API"></a>19. 其它API</h4><table><thead><tr><th>其它API</th><th>地址</th></tr></thead><tbody><tr><td>javascript流行库汇总</td><td>javascriptoo</td></tr><tr><td>验证api</td><td><a href="http://niceue.com/validator/demo/index.php" target="_blank" rel="noopener">http://niceue.com/validator/demo/index.php</a></td></tr><tr><td>underscore 中文手册</td><td><a href="http://www.css88.com/doc/underscore" target="_blank" rel="noopener">http://www.css88.com/doc/underscore</a></td></tr><tr><td>underscore源码分析</td><td><a href="http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031" target="_blank" rel="noopener">http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031</a></td></tr><tr><td>underscore源码分析-亚里士朱德的博客</td><td><a href="http://yalishizhude.github.io/tags/underscore" target="_blank" rel="noopener">http://yalishizhude.github.io/tags/underscore</a></td></tr><tr><td>underscrejs en api</td><td><a href="http://underscorejs.org" target="_blank" rel="noopener">http://underscorejs.org</a></td></tr><tr><td>lodash - underscore的代替品</td><td><a href="https://lodash.com" target="_blank" rel="noopener">https://lodash.com</a></td></tr><tr><td>ext4api</td><td><a href="http://extjs-doc-cn.github.io/ext4api" target="_blank" rel="noopener">http://extjs-doc-cn.github.io/ext4api</a></td></tr><tr><td>backbone 中文手册</td><td><a href="http://www.csser.com/tools/backbone/backbone.js.html" target="_blank" rel="noopener">http://www.csser.com/tools/backbone/backbone.js.html</a></td></tr><tr><td>qwrap手册</td><td><a href="http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm" target="_blank" rel="noopener">http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm</a></td></tr><tr><td>缓动函数</td><td><a href="http://easings.net/zh-cn" target="_blank" rel="noopener">http://easings.net/zh-cn</a></td></tr><tr><td>svg 中文参考</td><td><a href="http://www.w3school.com.cn/svg/svg_reference.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/svg/svg_reference.asp</a></td></tr><tr><td>svg mdn参考</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/SVG" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/SVG</a></td></tr><tr><td>svg 导出 canvas</td><td><a href="https://github.com/gabelerner/canvg" target="_blank" rel="noopener">https://github.com/gabelerner/canvg</a></td></tr><tr><td>svg 导出 png</td><td><a href="https://github.com/exupero/saveSvgAsPng" target="_blank" rel="noopener">https://github.com/exupero/saveSvgAsPng</a></td></tr><tr><td>ai-to-svg</td><td><a href="http://www.zamzar.com/convert/ai-to-svg" target="_blank" rel="noopener">http://www.zamzar.com/convert/ai-to-svg</a></td></tr><tr><td>localStorage 库</td><td><a href="https://github.com/machao/localStorage" target="_blank" rel="noopener">https://github.com/machao/localStorage</a></td></tr></tbody></table><h4 id="20-图表类-1"><a href="#20-图表类-1" class="headerlink" title="20. 图表类"></a>20. 图表类</h4><table><thead><tr><th>图表类</th><th>地址</th></tr></thead><tbody><tr><td>Highcharts 中文API</td><td><a href="http://www.hcharts.cn/api/index.php" target="_blank" rel="noopener">http://www.hcharts.cn/api/index.php</a></td></tr><tr><td>Highcharts 英文API</td><td><a href="http://api.highcharts.com/highcharts" target="_blank" rel="noopener">http://api.highcharts.com/highcharts</a></td></tr><tr><td>ECharts 百度的图表软件</td><td><a href="http://echarts.baidu.com/" target="_blank" rel="noopener">http://echarts.baidu.com/</a> </td></tr><tr><td>高德地图</td><td><a href="http://lbs.amap.com/api" target="_blank" rel="noopener">http://lbs.amap.com/api</a></td></tr><tr><td>开源的矢量图脚本框架</td><td><a href="http://paperjs.org" target="_blank" rel="noopener">http://paperjs.org</a></td></tr><tr><td>svg 地图</td><td><a href="http://jvectormap.com" target="_blank" rel="noopener">http://jvectormap.com</a></td></tr></tbody></table><h4 id="21-vue-1"><a href="#21-vue-1" class="headerlink" title="21. vue"></a>21. vue</h4><table><thead><tr><th>vue</th><th>地址</th></tr></thead><tbody><tr><td>Vue</td><td><a href="http://cn.vuejs.org" target="_blank" rel="noopener">http://cn.vuejs.org</a></td></tr><tr><td>Vue 论坛</td><td><a href="http://forum.vuejs.org" target="_blank" rel="noopener">http://forum.vuejs.org</a></td></tr><tr><td>Vue 入门指南</td><td><a href="http://www.cnblogs.com/aaronjs/p/3660102.html" target="_blank" rel="noopener">http://www.cnblogs.com/aaronjs/p/3660102.html</a></td></tr><tr><td>Vue 的一些资源索引</td><td><a href="http://segmentfault.com/a/1190000000411057" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000411057</a></td></tr><tr><td>awesome-vue</td><td><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">https://github.com/vuejs/awesome-vue</a></td></tr></tbody></table><h4 id="21-正则-1"><a href="#21-正则-1" class="headerlink" title="21. 正则"></a>21. 正则</h4><table><thead><tr><th>正则</th><th>地址</th></tr></thead><tbody><tr><td>JS正则表达式元字符</td><td><a href="http://segmentfault.com/a/1190000002471140" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002471140</a></td></tr><tr><td>正则表达式30分钟入门教程</td><td><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">http://deerchao.net/tutorials/regex/regex.htm</a></td></tr><tr><td>MDN-正则表达式</td><td><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></td></tr><tr><td>ruanyifeng - RegExp对象</td><td><a href="http://javascript.ruanyifeng.com/stdlib/regexp.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/stdlib/regexp.html</a></td></tr><tr><td>小胡子哥 - 进阶正则表达式</td><td><a href="http://div.io/topic/764?page=1" target="_blank" rel="noopener">http://div.io/topic/764?page=1</a></td></tr><tr><td>is.js</td><td><a href="https://github.com/Cedriking/is.js/blob/master/is.js" target="_blank" rel="noopener">https://github.com/Cedriking/is.js/blob/master/is.js</a></td></tr><tr><td>正则在线测试</td><td><a href="http://regexper.com" target="_blank" rel="noopener">http://regexper.com</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="22-ionic-1"><a href="#22-ionic-1" class="headerlink" title="22. ionic"></a>22. ionic</h4><table><thead><tr><th>ionic</th><th>地址</th></tr></thead><tbody><tr><td>ionic</td><td><a href="https://github.com/ychow/ionic-guide" target="_blank" rel="noopener">https://github.com/ychow/ionic-guide</a></td></tr></tbody></table><h4 id="23-其它-1"><a href="#23-其它-1" class="headerlink" title="23. 其它"></a>23. 其它</h4><table><thead><tr><th>其它</th><th>地址</th></tr></thead><tbody><tr><td>Mock.js 是一款模拟数据生成器</td><td><a href="http://mockjs.com" target="_blank" rel="noopener">http://mockjs.com</a></td></tr></tbody></table><h3 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h3><ol><li>前端</li></ol><table><thead><tr><th>前端</th><th>地址</th></tr></thead><tbody><tr><td>通过分析github代码库总结出来的工程师代码书写习惯</td><td><a href="http://alloyteam.github.io/CodeGuide" target="_blank" rel="noopener">http://alloyteam.github.io/CodeGuide</a></td></tr><tr><td>HTML&amp;CSS编码规范 by @mdo</td><td><a href="http://codeguide.bootcss.com" target="_blank" rel="noopener">http://codeguide.bootcss.com</a></td></tr><tr><td>团队合作的css命名规范-腾讯AlloyTeam前端团队</td><td><a href="http://www.alloyteam.com/2011/10/107" target="_blank" rel="noopener">http://www.alloyteam.com/2011/10/107</a></td></tr><tr><td>前端编码规范之js - by yuwenhui</td><td><a href="http://yuwenhui.github.io" target="_blank" rel="noopener">http://yuwenhui.github.io</a></td></tr><tr><td>前端编码规范之js - by 李靖</td><td><a href="http://www.cnblogs.com/hustskyking/p/javascript-spec.html" target="_blank" rel="noopener">http://www.cnblogs.com/hustskyking/p/javascript-spec.html</a></td></tr><tr><td>前端开发规范手册</td><td><a href="http://zhibimo.com/read/Ashu/front-end-style-guide" target="_blank" rel="noopener">http://zhibimo.com/read/Ashu/front-end-style-guide</a></td></tr><tr><td>Airbnb JavaScript 编码规范（简体中文版）</td><td><a href="https://github.com/yuche/javascript#table-of-contents" target="_blank" rel="noopener">https://github.com/yuche/javascript#table-of-contents</a></td></tr><tr><td>AMD与CMD规范的区别</td><td><a href="http://www.zhihu.com/question/20351507" target="_blank" rel="noopener">http://www.zhihu.com/question/20351507</a></td></tr><tr><td>AMD与CMD规范的区别</td><td><a href="http://www.cnblogs.com/tugenhua0707/p/3507957.html" target="_blank" rel="noopener">http://www.cnblogs.com/tugenhua0707/p/3507957.html</a></td></tr><tr><td>KISSY 源码规范</td><td><a href="http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html" target="_blank" rel="noopener">http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html</a></td></tr><tr><td>bt编码规范</td><td><a href="http://codeguide.bootcss.com" target="_blank" rel="noopener">http://codeguide.bootcss.com</a></td></tr><tr><td>规范加强版</td><td><a href="https://github.com/Suxiaogang/Code_Guide" target="_blank" rel="noopener">https://github.com/Suxiaogang/Code_Guide</a></td></tr><tr><td>前端代码规范 及 最佳实践</td><td><a href="http://blog.jobbole.com/79075" target="_blank" rel="noopener">http://blog.jobbole.com/79075</a></td></tr><tr><td>百度前端规范</td><td><a href="http://coderlmn.github.io/code-standards" target="_blank" rel="noopener">http://coderlmn.github.io/code-standards</a></td></tr><tr><td>百度前端规范</td><td><a href="http://isobar-idev.github.io/code-standards" target="_blank" rel="noopener">http://isobar-idev.github.io/code-standards</a></td></tr><tr><td>百度前端规范</td><td><a href="http://zhuanlan.zhihu.com/fuyun/19884834" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/fuyun/19884834</a></td></tr><tr><td>ECMAScript6 编码规范–广发证券前端团队</td><td><a href="https://github.com/gf-rd/es6-coding-style" target="_blank" rel="noopener">https://github.com/gf-rd/es6-coding-style</a></td></tr><tr><td>JavaScript 风格指南/编码规范（Airbnb公司版）</td><td><a href="http://blog.jobbole.com/79484" target="_blank" rel="noopener">http://blog.jobbole.com/79484</a></td></tr><tr><td>网易前端开发规范</td><td><a href="http://nec.netease.com/standard" target="_blank" rel="noopener">http://nec.netease.com/standard</a></td></tr><tr><td>css模块</td><td><a href="http://www.75team.com/archives/1049" target="_blank" rel="noopener">http://www.75team.com/archives/1049</a></td></tr><tr><td>前端规范资源列表</td><td><a href="https://github.com/ecomfe/spec" target="_blank" rel="noopener">https://github.com/ecomfe/spec</a></td></tr></tbody></table><ol start="2"><li>PHP</li></ol><table><thead><tr><th>PHP</th><th>地址</th></tr></thead><tbody><tr><td>最流行的PHP 代码规范</td><td><a href="http://segmentfault.com/a/1190000000443795" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000443795</a></td></tr><tr><td>最流行的PHP 代码规范</td><td><a href="https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md" target="_blank" rel="noopener">https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md</a></td></tr></tbody></table><ol start="3"><li>Android</li></ol><table><thead><tr><th>Android</th><th>地址</th></tr></thead><tbody><tr><td>【敏捷开发】Android团队开发规范</td><td><a href="http://www.cnblogs.com/lcw/p/3619181.html" target="_blank" rel="noopener">http://www.cnblogs.com/lcw/p/3619181.html</a></td></tr><tr><td>Android 开发规范与应用</td><td><a href="http://www.jianshu.com/p/4390f4fe19b3" target="_blank" rel="noopener">http://www.jianshu.com/p/4390f4fe19b3</a></td></tr></tbody></table><h3 id="其它收集"><a href="#其它收集" class="headerlink" title="其它收集"></a>其它收集</h3><h4 id="1-各大公司开源项目-1"><a href="#1-各大公司开源项目-1" class="headerlink" title="1. 各大公司开源项目"></a>1. 各大公司开源项目</h4><table><thead><tr><th>各大公司开源项目</th><th>地址</th></tr></thead><tbody><tr><td>Facebook Projects</td><td><a href="https://code.facebook.com/projects/web" target="_blank" rel="noopener">https://code.facebook.com/projects/web</a></td></tr><tr><td>百度web前端研发部</td><td><a href="http://fex.baidu.com" target="_blank" rel="noopener">http://fex.baidu.com</a></td></tr><tr><td>百度EFE</td><td><a href="http://efe.baidu.com" target="_blank" rel="noopener">http://efe.baidu.com</a></td></tr><tr><td>百度github</td><td><a href="https://github.com/fex-team" target="_blank" rel="noopener">https://github.com/fex-team</a></td></tr><tr><td>alloyteam</td><td><a href="http://www.alloyteam.com" target="_blank" rel="noopener">http://www.alloyteam.com</a></td></tr><tr><td>alloyteam-github</td><td><a href="http://alloyteam.github.io" target="_blank" rel="noopener">http://alloyteam.github.io</a></td></tr><tr><td>alloyteam-AlloyGameEngine</td><td><a href="https://github.com/AlloyTeam/AlloyGameEngine" target="_blank" rel="noopener">https://github.com/AlloyTeam/AlloyGameEngine</a></td></tr><tr><td>AlloyDesigner</td><td><a href="http://alloyteam.github.io/AlloyDesigner" target="_blank" rel="noopener">http://alloyteam.github.io/AlloyDesigner</a> 即时修改，即时保存，设计稿较正，其它开发辅助工具</td></tr><tr><td>H5交互页编辑器AEditor介绍</td><td><a href="http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao" target="_blank" rel="noopener">http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao</a> H5动画交互页开发的工具介绍</td></tr><tr><td>AEditor</td><td><a href="http://aeditor.alloyteam.com" target="_blank" rel="noopener">http://aeditor.alloyteam.com</a> H5动画交互页开发的工具</td></tr><tr><td>maka</td><td><a href="http://forum.maka.im/wordpress" target="_blank" rel="noopener">http://forum.maka.im/wordpress</a></td></tr><tr><td>值得订阅的weekly</td><td><a href="https://github.com/fenbility/weekly-feed" target="_blank" rel="noopener">https://github.com/fenbility/weekly-feed</a></td></tr><tr><td>腾讯html5</td><td><a href="http://cube.qq.com" target="_blank" rel="noopener">http://cube.qq.com</a></td></tr><tr><td>奇舞团开源项目</td><td><a href="http://75team.github.io" target="_blank" rel="noopener">http://75team.github.io</a></td></tr><tr><td>Qunar UED</td><td><a href="http://ued.qunar.com" target="_blank" rel="noopener">http://ued.qunar.com</a></td></tr><tr><td>Scrat</td><td><a href="http://scrat.io" target="_blank" rel="noopener">http://scrat.io</a></td></tr></tbody></table><h4 id="2-Javascript-1"><a href="#2-Javascript-1" class="headerlink" title="2. Javascript"></a>2. Javascript</h4><ol><li>常用</li></ol><table><thead><tr><th>常用</th><th>地址</th></tr></thead><tbody><tr><td>ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性</td><td><a href="http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome</a></td></tr><tr><td>模拟键盘</td><td><a href="http://mottie.github.io/Keyboard" target="_blank" rel="noopener">http://mottie.github.io/Keyboard</a></td></tr><tr><td>拼音</td><td><a href="https://github.com/hotoo/pinyin" target="_blank" rel="noopener">https://github.com/hotoo/pinyin</a></td></tr><tr><td>中国个人身份证号验证</td><td><a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="noopener">https://github.com/mc-zone/IDValidator</a></td></tr></tbody></table><ol start="2"><li>算法</li></ol><table><thead><tr><th>算法</th><th>地址</th></tr></thead><tbody><tr><td>数据结构与算法 JavaScript 描述. 章节练习</td><td><a href="https://github.com/Ralph-Wang/algorithm.in.js" target="_blank" rel="noopener">https://github.com/Ralph-Wang/algorithm.in.js</a></td></tr><tr><td>常见排序算法（JS版）</td><td><a href="https://github.com/twobin/twobinSort" target="_blank" rel="noopener">https://github.com/twobin/twobinSort</a></td></tr><tr><td>经典排序</td><td><a href="https://github.com/luofei2011/jsAgm/blob/master/js/sort.js" target="_blank" rel="noopener">https://github.com/luofei2011/jsAgm/blob/master/js/sort.js</a></td></tr><tr><td>常见排序算法-js版本</td><td><a href="https://github.com/hechangmin/jssort" target="_blank" rel="noopener">https://github.com/hechangmin/jssort</a></td></tr><tr><td>JavaScript 算法与数据结构 精华集</td><td><a href="https://github.com/lightningtgc/JavaScript-Algorithms" target="_blank" rel="noopener">https://github.com/lightningtgc/JavaScript-Algorithms</a></td></tr><tr><td>面试常考算法题精讲</td><td><a href="http://www.nowcoder.com/live/courses" target="_blank" rel="noopener">http://www.nowcoder.com/live/courses</a></td></tr></tbody></table><ol start="3"><li>移动端</li></ol><table><thead><tr><th>移动端</th><th>地址</th></tr></thead><tbody><tr><td>fastclick</td><td><a href="https://github.com/ftlabs/fastclick" target="_blank" rel="noopener">https://github.com/ftlabs/fastclick</a></td></tr><tr><td>no-click-delay</td><td><a href="https://github.com/mmastrac/jquery-noclickdelay" target="_blank" rel="noopener">https://github.com/mmastrac/jquery-noclickdelay</a></td></tr></tbody></table><ol start="4"><li>JSON</li></ol><table><thead><tr><th>JSON</th><th>地址</th></tr></thead><tbody><tr><td>模拟生成JSON数据</td><td><a href="http://beta.json-generator.com" target="_blank" rel="noopener">http://beta.json-generator.com</a></td></tr><tr><td>返回跨域JSONAPI</td><td><a href="http://jsonp.afeld.me" target="_blank" rel="noopener">http://jsonp.afeld.me</a></td></tr></tbody></table><h4 id="3-Html5-1"><a href="#3-Html5-1" class="headerlink" title="3. Html5"></a>3. Html5</h4><table><thead><tr><th>Html5</th><th>地址</th></tr></thead><tbody><tr><td>HTML5 有哪些让你惊艳的 demo？</td><td><a href="http://www.zhihu.com/question/24398907" target="_blank" rel="noopener">http://www.zhihu.com/question/24398907</a></td></tr></tbody></table><h4 id="4-CSS-1"><a href="#4-CSS-1" class="headerlink" title="4. CSS"></a>4. CSS</h4><table><thead><tr><th>CSS</th><th>地址</th></tr></thead><tbody><tr><td>browserhacks</td><td><a href="http://browserhacks.com" target="_blank" rel="noopener">http://browserhacks.com</a></td></tr></tbody></table><h4 id="5-jQuery-1"><a href="#5-jQuery-1" class="headerlink" title="5. jQuery"></a>5. jQuery</h4><ol><li>焦点图</li></ol><table><thead><tr><th>焦点图</th><th>地址</th></tr></thead><tbody><tr><td>myfocus</td><td><a href="https://github.com/koen301/myfocus" target="_blank" rel="noopener">https://github.com/koen301/myfocus</a></td></tr><tr><td>myfocus-官方演示站</td><td><a href="http://www.chhua.com/myfocus" target="_blank" rel="noopener">http://www.chhua.com/myfocus</a></td></tr><tr><td>SuperSlidev2.1 – 大话主席</td><td><a href="http://www.superslide2.com" target="_blank" rel="noopener">http://www.superslide2.com</a></td></tr><tr><td>soChange</td><td><a href="http://www.bujichong.com/sojs/soChange/index.html" target="_blank" rel="noopener">http://www.bujichong.com/sojs/soChange/index.html</a></td></tr></tbody></table><h4 id="6-Ext-EasyUI-J-UI-及其它各种UI方案-1"><a href="#6-Ext-EasyUI-J-UI-及其它各种UI方案-1" class="headerlink" title="6. Ext, EasyUI, J-UI 及其它各种UI方案"></a>6. Ext, EasyUI, J-UI 及其它各种UI方案</h4><ol><li>Ext</li></ol><table><thead><tr><th>Ext, EasyUI, J-UI 及其它各种UI方案</th><th>地址</th></tr></thead><tbody><tr><td>extjs</td><td><a href="https://www.sencha.com/products/extjs" target="_blank" rel="noopener">https://www.sencha.com/products/extjs</a></td></tr><tr><td>ext4英文api</td><td><a href="http://docs.sencha.com/extjs/4.0.7" target="_blank" rel="noopener">http://docs.sencha.com/extjs/4.0.7</a></td></tr><tr><td>ext4中文api</td><td><a href="http://extjs-doc-cn.github.io/ext4api" target="_blank" rel="noopener">http://extjs-doc-cn.github.io/ext4api</a></td></tr></tbody></table><ol start="2"><li>EasyUI</li></ol><table><thead><tr><th>EasyUI</th><th>地址</th></tr></thead><tbody><tr><td>jquery easyui 未压缩源代码</td><td><a href="http://jquery-easyui.googlecode.com/svn/trunk/src" target="_blank" rel="noopener">http://jquery-easyui.googlecode.com/svn/trunk/src</a></td></tr></tbody></table><ol start="3"><li>J-UI</li></ol><table><thead><tr><th>J-UI</th><th>地址</th></tr></thead><tbody><tr><td>J-UI</td><td><a href="http://jui.org" target="_blank" rel="noopener">http://jui.org</a></td></tr></tbody></table><ol start="4"><li>Other</li></ol><table><thead><tr><th>Other</th><th>地址</th></tr></thead><tbody><tr><td>MUI-最接近原生APP体验的高性能前端框架</td><td><a href="http://dcloudio.github.io/mui" target="_blank" rel="noopener">http://dcloudio.github.io/mui</a></td></tr><tr><td>Amaze UI</td><td>中国首个开源 HTML5 跨屏前端框架</td><td><a href="http://amazeui.org" target="_blank" rel="noopener">http://amazeui.org</a></td></tr><tr><td>淘宝 HTML5 前端框架</td><td><a href="http://m.sui.taobao.org" target="_blank" rel="noopener">http://m.sui.taobao.org</a></td></tr><tr><td>KISSY - 阿里前端JavaScript库</td><td><a href="http://docs.kissyui.com" target="_blank" rel="noopener">http://docs.kissyui.com</a></td></tr><tr><td>网易Nej - Nice Easy Javascript</td><td><a href="http://nej.netease.com" target="_blank" rel="noopener">http://nej.netease.com</a></td></tr><tr><td>Kendo UI MVVM Demo</td><td><a href="http://demos.telerik.com/kendo-ui/mvvm/index" target="_blank" rel="noopener">http://demos.telerik.com/kendo-ui/mvvm/index</a></td></tr><tr><td>Bootstrap</td><td><a href="http://www.bootcss.com" target="_blank" rel="noopener">http://www.bootcss.com</a></td></tr><tr><td>Smart UI</td><td><a href="http://smartui.chinamzz.com" target="_blank" rel="noopener">http://smartui.chinamzz.com</a></td></tr><tr><td>雅虎UI - CSS UI</td><td><a href="http://developer.yahoo.com/yui/grids" target="_blank" rel="noopener">http://developer.yahoo.com/yui/grids</a></td></tr></tbody></table><h4 id="7-页面-社会化-分享功能-1"><a href="#7-页面-社会化-分享功能-1" class="headerlink" title="7. 页面 社会化 分享功能"></a>7. 页面 社会化 分享功能</h4><table><thead><tr><th>页面 社会化 分享功能</th><th>地址</th></tr></thead><tbody><tr><td>百度分享</td><td><a href="http://share.baidu.com" target="_blank" rel="noopener">http://share.baidu.com</a> pc端</td></tr><tr><td>JiaThis</td><td><a href="http://jiathis.com" target="_blank" rel="noopener">http://jiathis.com</a> pc端</td></tr><tr><td>社会化分享组件</td><td><a href="http://developer.baidu.com/soc/share" target="_blank" rel="noopener">http://developer.baidu.com/soc/share</a> 移动端</td></tr><tr><td>ShareSDK 轻松实现社会化功能</td><td><a href="http://www.mob.com/#/index" target="_blank" rel="noopener">http://www.mob.com/#/index</a> 移动端</td></tr><tr><td>友盟分享</td><td><a href="http://dev.umeng.com/social/android/quick-integration" target="_blank" rel="noopener">http://dev.umeng.com/social/android/quick-integration</a> 移动端</td></tr></tbody></table><h4 id="8-富文本编辑器-1"><a href="#8-富文本编辑器-1" class="headerlink" title="8. 富文本编辑器"></a>8. 富文本编辑器</h4><table><thead><tr><th>富文本编辑器</th><th>地址</th></tr></thead><tbody><tr><td>功能齐全 tinymce</td><td><a href="https://www.tinymce.com" target="_blank" rel="noopener">https://www.tinymce.com</a></td></tr><tr><td>百度 ueditor</td><td><a href="http://ueditor.baidu.com/website" target="_blank" rel="noopener">http://ueditor.baidu.com/website</a></td></tr><tr><td>经典的ckeditor</td><td><a href="http://ckeditor.com" target="_blank" rel="noopener">http://ckeditor.com</a></td></tr><tr><td>经典的kindeditor</td><td><a href="http://kindeditor.net" target="_blank" rel="noopener">http://kindeditor.net</a></td></tr><tr><td>wysiwyg</td><td><a href="http://www.bootcss.com/p/bootstrap-wysiwyg" target="_blank" rel="noopener">http://www.bootcss.com/p/bootstrap-wysiwyg</a></td></tr><tr><td>一个有情怀的编辑器。Bach’s Editor</td><td><a href="http://integ.github.io/BachEditor" target="_blank" rel="noopener">http://integ.github.io/BachEditor</a></td></tr><tr><td>tower用的编辑器</td><td><a href="https://github.com/mycolorway/simditor" target="_blank" rel="noopener">https://github.com/mycolorway/simditor</a></td></tr><tr><td>summernote 编辑器</td><td><a href="https://github.com/summernote/summernote" target="_blank" rel="noopener">https://github.com/summernote/summernote</a></td></tr><tr><td>html5编辑器</td><td><a href="http://neilj.github.io/Squire" target="_blank" rel="noopener">http://neilj.github.io/Squire</a></td></tr><tr><td>XEditor</td><td><a href="http://lab.hustlzp.com/XEditor" target="_blank" rel="noopener">http://lab.hustlzp.com/XEditor</a></td></tr><tr><td>wangEditor</td><td><a href="https://github.com/wangfupeng1988/wangEditor" target="_blank" rel="noopener">https://github.com/wangfupeng1988/wangEditor</a> </td></tr></tbody></table><h4 id="9-日历-1"><a href="#9-日历-1" class="headerlink" title="9. 日历"></a>9. 日历</h4><ol><li>PC</li></ol><table><thead><tr><th>PC</th><th>地址</th></tr></thead><tbody><tr><td>经典my97</td><td><a href="http://www.my97.net/dp/demo/index.htm" target="_blank" rel="noopener">http://www.my97.net/dp/demo/index.htm</a></td></tr><tr><td>强大的独立日期选择器</td><td><a href="http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html" target="_blank" rel="noopener">http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html</a></td></tr><tr><td>fullcalendar</td><td><a href="http://fullcalendar.io" target="_blank" rel="noopener">http://fullcalendar.io</a></td></tr><tr><td>fullcalendar日历控件知识点集合</td><td><a href="http://blog.csdn.net/francislaw/article/details/7740630" target="_blank" rel="noopener">http://blog.csdn.net/francislaw/article/details/7740630</a></td></tr><tr><td>中文api</td><td><a href="http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html</a></td></tr><tr><td>农历日历</td><td><a href="https://github.com/zzyss86/LunarCalendar" target="_blank" rel="noopener">https://github.com/zzyss86/LunarCalendar</a></td></tr><tr><td>超酷的仿百度带节日日历老黄历控件</td><td><a href="http://www.sucaisj.com/jiaoben/date/201509/16856.html" target="_blank" rel="noopener">http://www.sucaisj.com/jiaoben/date/201509/16856.html</a></td></tr><tr><td>日期格式化</td><td><a href="http://momentjs.com" target="_blank" rel="noopener">http://momentjs.com</a></td></tr><tr><td>大牛日历控件</td><td><a href="https://github.com/Johnqing/QPAYCalendar" target="_blank" rel="noopener">https://github.com/Johnqing/QPAYCalendar</a></td></tr><tr><td>我群某管理作品</td><td><a href="https://github.com/Iamlars/dateMarker" target="_blank" rel="noopener">https://github.com/Iamlars/dateMarker</a></td></tr><tr><td>input按位替换-官网</td><td><a href="http://digitalbush.com/projects/masked-input-plugin" target="_blank" rel="noopener">http://digitalbush.com/projects/masked-input-plugin</a></td></tr><tr><td>input按位替换-github</td><td><a href="https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2" target="_blank" rel="noopener">https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2</a></td></tr><tr><td>bootstrap-daterangepicker</td><td><a href="https://github.com/dangrossman/bootstrap-daterangepicker" target="_blank" rel="noopener">https://github.com/dangrossman/bootstrap-daterangepicker</a></td></tr><tr><td>国外30个插件集合</td><td><a href="http://www.vandelaydesign.com/30-best-free-jquery-plugins" target="_blank" rel="noopener">http://www.vandelaydesign.com/30-best-free-jquery-plugins</a></td></tr><tr><td>JavaScript datepicker</td><td><a href="http://dbushell.com/2012/10/09/pikaday-javascript-datepicker" target="_blank" rel="noopener">http://dbushell.com/2012/10/09/pikaday-javascript-datepicker</a></td></tr><tr><td>Datepair.js</td><td><a href="http://jonthornton.github.io/Datepair.js" target="_blank" rel="noopener">http://jonthornton.github.io/Datepair.js</a></td></tr><tr><td>一个风格多样的日历</td><td><a href="https://github.com/glad/glDatePicker" target="_blank" rel="noopener">https://github.com/glad/glDatePicker</a></td></tr><tr><td>弹出层式的全日历</td><td><a href="http://amsul.ca/pickadate.js/date" target="_blank" rel="noopener">http://amsul.ca/pickadate.js/date</a></td></tr><tr><td>jquery双日历</td><td><a href="http://www.daterangepicker.com" target="_blank" rel="noopener">http://www.daterangepicker.com</a></td></tr></tbody></table><ol start="2"><li>移动</li></ol><table><thead><tr><th>移动</th><th>地址</th></tr></thead><tbody><tr><td>大气实用jQuery手机移动端日历日期选择插件</td><td><a href="http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115" target="_blank" rel="noopener">http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115</a></td></tr><tr><td>jQuery Mobile 移动开发中的日期插件Mobiscroll</td><td><a href="https://mobiscroll.com" target="_blank" rel="noopener">https://mobiscroll.com</a></td></tr></tbody></table><ol start="3"><li>Date library</li></ol><table><thead><tr><th>Date library</th><th>地址</th></tr></thead><tbody><tr><td>Datejs</td><td><a href="https://github.com/datejs/Datejs" target="_blank" rel="noopener">https://github.com/datejs/Datejs</a></td></tr><tr><td>sugarjs</td><td><a href="http://sugarjs.com/api/Date" target="_blank" rel="noopener">http://sugarjs.com/api/Date</a></td></tr></tbody></table><h4 id="10-综合效果搜索平台-1"><a href="#10-综合效果搜索平台-1" class="headerlink" title="10. 综合效果搜索平台"></a>10. 综合效果搜索平台</h4><table><thead><tr><th>综合效果搜索平台</th><th>地址</th></tr></thead><tbody><tr><td>效果网</td><td><a href="http://www.jq22.com" target="_blank" rel="noopener">http://www.jq22.com</a></td></tr><tr><td>17素材</td><td><a href="http://www.17sucai.com" target="_blank" rel="noopener">http://www.17sucai.com</a></td></tr><tr><td>常用的JavaScript代码片段</td><td><a href="http://microjs.com" target="_blank" rel="noopener">http://microjs.com</a></td></tr></tbody></table><h4 id="11-前端工程化-1"><a href="#11-前端工程化-1" class="headerlink" title="11. 前端工程化"></a>11. 前端工程化</h4><ol><li>概述</li></ol><table><thead><tr><th>概述</th><th>地址</th></tr></thead><tbody><tr><td>前端工具大全</td><td><a href="http://www.awesomes.cn" target="_blank" rel="noopener">http://www.awesomes.cn</a></td></tr><tr><td>什么是前端工程化</td><td><a href="https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#" target="_blank" rel="noopener">https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#</a></td></tr></tbody></table><ol start="2"><li>Gulp </li></ol><table><thead><tr><th>Gulp</th><th>地址</th></tr></thead><tbody><tr><td>Gulp官网</td><td><a href="http://gulpjs.com" target="_blank" rel="noopener">http://gulpjs.com</a></td></tr><tr><td>Gulp中文网</td><td><a href="http://www.gulpjs.com.cn" target="_blank" rel="noopener">http://www.gulpjs.com.cn</a></td></tr><tr><td>gulp资料收集</td><td><a href="https://github.com/Platform-CUF/use-gulp" target="_blank" rel="noopener">https://github.com/Platform-CUF/use-gulp</a></td></tr><tr><td>Gulp：任务自动管理工具 - ruanyifeng</td><td><a href="http://javascript.ruanyifeng.com/tool/gulp.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/tool/gulp.html</a></td></tr><tr><td>Gulp插件</td><td><a href="http://gulpjs.com/plugins" target="_blank" rel="noopener">http://gulpjs.com/plugins</a></td></tr><tr><td>Gulp不完全入门教程</td><td><a href="http://www.ido321.com/1622.html" target="_blank" rel="noopener">http://www.ido321.com/1622.html</a></td></tr><tr><td>为什么使用gulp?</td><td><a href="https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33" target="_blank" rel="noopener">https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33</a></td></tr><tr><td>Gulp安装及配合组件构建前端开发一体化</td><td><a href="http://www.dbpoo.com/getting-started-with-gulp" target="_blank" rel="noopener">http://www.dbpoo.com/getting-started-with-gulp</a></td></tr><tr><td>Gulp 入门指南</td><td><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="noopener">https://github.com/nimojs/gulp-book</a></td></tr><tr><td>Gulp 入门指南 - nimojs</td><td><a href="https://github.com/nimojs/blog/issues/19" target="_blank" rel="noopener">https://github.com/nimojs/blog/issues/19</a></td></tr><tr><td>Gulp入门教程</td><td><a href="http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B" target="_blank" rel="noopener">http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B</a></td></tr><tr><td>Gulp in Action</td><td><a href="http://www.imooc.com/video/5692" target="_blank" rel="noopener">http://www.imooc.com/video/5692</a></td></tr><tr><td>Gulp开发教程（翻译）</td><td><a href="http://www.w3ctech.com/topic/134" target="_blank" rel="noopener">http://www.w3ctech.com/topic/134</a></td></tr><tr><td>前端构建工具gulpjs的使用介绍及技巧</td><td><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="noopener">http://www.cnblogs.com/2050/p/4198792.html</a></td></tr></tbody></table><ol start="3"><li>Grunt</li></ol><table><thead><tr><th>Grunt</th><th>地址</th></tr></thead><tbody><tr><td>gruntjs</td><td><a href="http://gruntjs.com" target="_blank" rel="noopener">http://gruntjs.com</a></td></tr><tr><td>Grunt中文网</td><td><a href="http://www.gruntjs.net" target="_blank" rel="noopener">http://www.gruntjs.net</a></td></tr></tbody></table><ol start="4"><li>Fis</li></ol><table><thead><tr><th>Fis</th><th>地址</th></tr></thead><tbody><tr><td>fis 官网</td><td><a href="http://fex-team.github.io/fis-site/index.html" target="_blank" rel="noopener">http://fex-team.github.io/fis-site/index.html</a></td></tr><tr><td>fis</td><td><a href="http://fis.baidu.com" target="_blank" rel="noopener">http://fis.baidu.com</a></td></tr></tbody></table><h4 id="12-轮播图-1"><a href="#12-轮播图-1" class="headerlink" title="12. 轮播图"></a>12. 轮播图</h4><ol><li>pc图轮</li></ol><table><thead><tr><th>pc图轮</th><th>地址</th></tr></thead><tbody><tr><td>单屏轮播sochange</td><td><a href="http://www.jsfoot.com/jquery/demo/2011-09-20/192.html" target="_blank" rel="noopener">http://www.jsfoot.com/jquery/demo/2011-09-20/192.html</a></td></tr><tr><td>左右按钮多图切换</td><td><a href="http://bxslider.com/examples/carousel-demystified" target="_blank" rel="noopener">http://bxslider.com/examples/carousel-demystified</a></td></tr><tr><td>fullpage全屏轮播</td><td><a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="noopener">https://github.com/alvarotrigo/fullPage.js</a></td></tr></tbody></table><ol start="2"><li>移动端</li></ol><table><thead><tr><th>移动端</th><th>地址</th></tr></thead><tbody><tr><td>无缝切换</td><td><a href="http://www.swipejs.com" target="_blank" rel="noopener">http://www.swipejs.com</a></td></tr><tr><td>滑屏效果</td><td><a href="http://www.idangero.us/swiper" target="_blank" rel="noopener">http://www.idangero.us/swiper</a></td></tr><tr><td>全屏fullpage</td><td><a href="https://github.com/peunzhang/fullpage" target="_blank" rel="noopener">https://github.com/peunzhang/fullpage</a></td></tr><tr><td>单个图片切换</td><td><a href="https://github.com/qiqiboy/touchslider" target="_blank" rel="noopener">https://github.com/qiqiboy/touchslider</a></td></tr><tr><td>单个全屏切换</td><td><a href="https://github.com/peunzhang/slip.js" target="_blank" rel="noopener">https://github.com/peunzhang/slip.js</a></td></tr><tr><td>百度的切换库</td><td><a href="http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group" target="_blank" rel="noopener">http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group</a></td></tr><tr><td>单个全屏切换</td><td><a href="https://github.com/peunzhang/iSlider" target="_blank" rel="noopener">https://github.com/peunzhang/iSlider</a></td></tr><tr><td>滑屏效果</td><td><a href="https://github.com/saw/touch-interfaces" target="_blank" rel="noopener">https://github.com/saw/touch-interfaces</a></td></tr><tr><td>旋转拖动设置</td><td><a href="http://baijs.com/tinycircleslider" target="_blank" rel="noopener">http://baijs.com/tinycircleslider</a></td></tr><tr><td>类似于swipe切换</td><td><a href="http://touchslider.com" target="_blank" rel="noopener">http://touchslider.com</a></td></tr><tr><td>支持多种形式的触摸滑动</td><td><a href="http://www.swiper.com.cn/demo/index.html" target="_blank" rel="noopener">http://www.swiper.com.cn/demo/index.html</a></td></tr><tr><td>滑屏效果</td><td><a href="https://github.com/joker-ye/main/blob/master/wap/index.html" target="_blank" rel="noopener">https://github.com/joker-ye/main/blob/master/wap/index.html</a></td></tr><tr><td>大话主席pc移动图片轮换</td><td><a href="http://www.superslide2.com" target="_blank" rel="noopener">http://www.superslide2.com</a></td></tr><tr><td>滑屏效果</td><td><a href="https://github.com/hahnzhu/parallax.js" target="_blank" rel="noopener">https://github.com/hahnzhu/parallax.js</a></td></tr><tr><td>基于zepto的fullpage</td><td><a href="https://github.com/yanhaijing/zepto.fullpage" target="_blank" rel="noopener">https://github.com/yanhaijing/zepto.fullpage</a></td></tr><tr><td>[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应</td><td><a href="http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html" target="_blank" rel="noopener">http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html</a></td></tr><tr><td>判断微信客户端的那些坑</td><td><a href="http://loo2k.com/blog/detecting-wechat-client" target="_blank" rel="noopener">http://loo2k.com/blog/detecting-wechat-client</a></td></tr><tr><td>可以通过javascript直接调用原生分享的工具</td><td><a href="https://github.com/JefferyWang/nativeShare.js" target="_blank" rel="noopener">https://github.com/JefferyWang/nativeShare.js</a></td></tr><tr><td>JiaThis 分享到微信代码</td><td><a href="http://www.jiathis.com/help/html/weixin-share-code" target="_blank" rel="noopener">http://www.jiathis.com/help/html/weixin-share-code</a></td></tr><tr><td>聊聊移动端跨平台开发的各种技术</td><td><a href="http://fex.baidu.com/blog/2015/05/cross-mobile" target="_blank" rel="noopener">http://fex.baidu.com/blog/2015/05/cross-mobile</a></td></tr><tr><td>前端自动化测试</td><td><a href="http://www.zhihu.com/question/29922082" target="_blank" rel="noopener">http://www.zhihu.com/question/29922082</a></td></tr><tr><td>多种轮换图片</td><td><a href="http://ajccom.github.io/niceslider" target="_blank" rel="noopener">http://ajccom.github.io/niceslider</a></td></tr><tr><td>滑动侧边栏</td><td><a href="https://mango.github.io/slideout" target="_blank" rel="noopener">https://mango.github.io/slideout</a></td></tr></tbody></table><h4 id="13-文件上传-1"><a href="#13-文件上传-1" class="headerlink" title="13. 文件上传"></a>13. 文件上传</h4><table><thead><tr><th>文件上传</th><th>地址</th></tr></thead><tbody><tr><td>百度上传组件</td><td><a href="http://fex.baidu.com/webuploader" target="_blank" rel="noopener">http://fex.baidu.com/webuploader</a></td></tr><tr><td>上传</td><td><a href="https://blueimp.github.io/jQuery-File-Upload" target="_blank" rel="noopener">https://blueimp.github.io/jQuery-File-Upload</a></td></tr><tr><td>flash 头像上传</td><td><a href="http://www.hdfu.net" target="_blank" rel="noopener">http://www.hdfu.net</a></td></tr><tr><td>图片上传预览</td><td><a href="http://www.dropzonejs.com" target="_blank" rel="noopener">http://www.dropzonejs.com</a></td></tr><tr><td>图片裁剪</td><td><a href="http://elemefe.github.io/image-cropper" target="_blank" rel="noopener">http://elemefe.github.io/image-cropper</a></td></tr><tr><td>图片裁剪-shearphoto</td><td><a href="http://www.shearphoto.com" target="_blank" rel="noopener">http://www.shearphoto.com</a></td></tr><tr><td>jQuery图片处理</td><td><a href="http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2" target="_blank" rel="noopener">http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="14-模拟select-1"><a href="#14-模拟select-1" class="headerlink" title="14. 模拟select"></a>14. 模拟select</h4><table><thead><tr><th>模拟select</th><th>地址</th></tr></thead><tbody><tr><td>糖饼 select</td><td><a href="http://aui.github.io/popupjs/doc/selectbox.html" target="_blank" rel="noopener">http://aui.github.io/popupjs/doc/selectbox.html</a></td></tr><tr><td>flexselect</td><td><a href="https://github.com/rmm5t/jquery-flexselect" target="_blank" rel="noopener">https://github.com/rmm5t/jquery-flexselect</a></td></tr><tr><td>双select</td><td><a href="http://loudev.com" target="_blank" rel="noopener">http://loudev.com</a></td></tr><tr><td>select2</td><td><a href="http://select2.github.io" target="_blank" rel="noopener">http://select2.github.io</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="15-取色插件-1"><a href="#15-取色插件-1" class="headerlink" title="15. 取色插件"></a>15. 取色插件</h4><table><thead><tr><th>取色插件</th><th>地址</th></tr></thead><tbody><tr><td>类似 Photoshop 的界面取色插件</td><td><a href="http://www.jq22.com/plugin/367" target="_blank" rel="noopener">http://www.jq22.com/plugin/367</a></td></tr><tr><td>jquery color</td><td><a href="https://github.com/jquery/jquery-color" target="_blank" rel="noopener">https://github.com/jquery/jquery-color</a></td></tr><tr><td>取色插件集合</td><td><a href="http://www.oschina.net/project/tag/287/color-picker" target="_blank" rel="noopener">http://www.oschina.net/project/tag/287/color-picker</a></td></tr><tr><td>farbtastic 圆环＋正方形</td><td><a href="https://github.com/mattfarina/farbtastic" target="_blank" rel="noopener">https://github.com/mattfarina/farbtastic</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="16-城市联动-1"><a href="#16-城市联动-1" class="headerlink" title="16. 城市联动"></a>16. 城市联动</h4><table><thead><tr><th>城市联动</th><th>地址</th></tr></thead><tbody><tr><td>jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果</td><td><a href="http://www.ijquery.cn/?p=360" target="_blank" rel="noopener">http://www.ijquery.cn/?p=360</a></td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="17-剪贴板-1"><a href="#17-剪贴板-1" class="headerlink" title="17. 剪贴板"></a>17. 剪贴板</h4><table><thead><tr><th>剪贴板</th><th>地址</th></tr></thead><tbody><tr><td>剪贴板</td><td><a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="noopener">https://github.com/zeroclipboard/zeroclipboard</a></td></tr><tr><td>clipboard 最新的剪切方案</td><td><a href="http://zenorocha.github.io/clipboard.js" target="_blank" rel="noopener">http://zenorocha.github.io/clipboard.js</a></td></tr><tr><td>不是Flash的剪贴板</td><td><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">https://github.com/zenorocha/clipboard.js</a></td></tr></tbody></table><h4 id="18-简繁转换-1"><a href="#18-简繁转换-1" class="headerlink" title="18. 简繁转换"></a>18. 简繁转换</h4><table><thead><tr><th>简繁转换</th><th>地址</th></tr></thead><tbody><tr><td>简繁转换</td><td><a href="https://github.com/BYVoid/OpenCC" target="_blank" rel="noopener">https://github.com/BYVoid/OpenCC</a></td></tr></tbody></table><h4 id="19-表格-Grid-1"><a href="#19-表格-Grid-1" class="headerlink" title="19. 表格 Grid"></a>19. 表格 Grid</h4><table><thead><tr><th>表格 Grid</th><th>地址</th></tr></thead><tbody><tr><td>facebook表格</td><td><a href="http://facebook.github.io/fixed-data-table" target="_blank" rel="noopener">http://facebook.github.io/fixed-data-table</a></td></tr><tr><td>类似于Excel编辑表格-handsontable</td><td><a href="http://handsontable.com" target="_blank" rel="noopener">http://handsontable.com</a></td></tr><tr><td>bootstrap-table插件</td><td><a href="http://bootstrap-table.wenzhixin.net.cn" target="_blank" rel="noopener">http://bootstrap-table.wenzhixin.net.cn</a></td></tr><tr><td>datatables</td><td><a href="https://www.datatables.net" target="_blank" rel="noopener">https://www.datatables.net</a></td></tr></tbody></table><h4 id="20-在线演示-1"><a href="#20-在线演示-1" class="headerlink" title="20. 在线演示"></a>20. 在线演示</h4><table><thead><tr><th>在线演示</th><th>地址</th></tr></thead><tbody><tr><td>js 在线编辑 - runjs</td><td><a href="http://runjs.cn" target="_blank" rel="noopener">http://runjs.cn</a></td></tr><tr><td>js 在线编辑 - jsbin</td><td><a href="http://jsbin.com" target="_blank" rel="noopener">http://jsbin.com</a></td></tr><tr><td>js 在线编辑 - codepen</td><td><a href="http://codepen.io" target="_blank" rel="noopener">http://codepen.io</a></td></tr><tr><td>js 在线编辑 - jsfiddle</td><td><a href="http://jsfiddle.net" target="_blank" rel="noopener">http://jsfiddle.net</a></td></tr><tr><td>java 在线编辑 - runjs</td><td><a href="http://ideone.com" target="_blank" rel="noopener">http://ideone.com</a></td></tr><tr><td>js 在线编辑 - hcharts</td><td><a href="http://code.hcharts.cn" target="_blank" rel="noopener">http://code.hcharts.cn</a></td></tr><tr><td>js 在线编辑 - jsdm</td><td><a href="http://jsdm.com" target="_blank" rel="noopener">http://jsdm.com</a></td></tr><tr><td>sql 在线编辑 - sqlfiddle</td><td><a href="http://sqlfiddle.com" target="_blank" rel="noopener">http://sqlfiddle.com</a></td></tr><tr><td>mozilla 在线编辑器</td><td><a href="https://thimble.mozilla.org" target="_blank" rel="noopener">https://thimble.mozilla.org</a></td></tr></tbody></table><h4 id="21-播放器-1"><a href="#21-播放器-1" class="headerlink" title="21. 播放器"></a>21. 播放器</h4><table><thead><tr><th>播放器</th><th>地址</th></tr></thead><tbody><tr><td>Html5 VideoPlayer</td><td><a href="https://github.com/zmmbreeze/DeadSimpleVideoPlayer" target="_blank" rel="noopener">https://github.com/zmmbreeze/DeadSimpleVideoPlayer</a></td></tr></tbody></table><h4 id="22-粒子动画-1"><a href="#22-粒子动画-1" class="headerlink" title="22. 粒子动画"></a>22. 粒子动画</h4><table><thead><tr><th>粒子动画</th><th>地址</th></tr></thead><tbody><tr><td>Proton 烟花</td><td><a href="http://a-jie.github.io/Proton/#example" target="_blank" rel="noopener">http://a-jie.github.io/Proton/#example</a></td></tr></tbody></table><h3 id="九-Nodejs-1"><a href="#九-Nodejs-1" class="headerlink" title="九. Nodejs"></a>九. Nodejs</h3><table><thead><tr><th>Nodejs</th><th>地址</th></tr></thead><tbody><tr><td>nodejs 篇幅比较巨大</td><td><a href="http://liuqing.pw" target="_blank" rel="noopener">http://liuqing.pw</a></td></tr><tr><td>Node.js 包教不包会</td><td><a href="https://github.com/alsotang/node-lessons" target="_blank" rel="noopener">https://github.com/alsotang/node-lessons</a></td></tr><tr><td>篇幅比较少</td><td><a href="http://www.rainweb.cn/article/category/Nodejs" target="_blank" rel="noopener">http://www.rainweb.cn/article/category/Nodejs</a></td></tr><tr><td>node express 入门教程</td><td><a href="http://www.w3cfuns.com/article-5598538-1-1.html" target="_blank" rel="noopener">http://www.w3cfuns.com/article-5598538-1-1.html</a></td></tr><tr><td>nodejs定时任务</td><td><a href="http://my.oschina.net/u/568264/blog/193773" target="_blank" rel="noopener">http://my.oschina.net/u/568264/blog/193773</a></td></tr><tr><td>一个nodejs博客</td><td><a href="http://60sky.com" target="_blank" rel="noopener">http://60sky.com</a></td></tr><tr><td>【NodeJS 学习笔记04】新闻发布系统</td><td><a href="http://www.cnblogs.com/yexiaochai/p/3536547.html" target="_blank" rel="noopener">http://www.cnblogs.com/yexiaochai/p/3536547.html</a></td></tr><tr><td>过年7天乐，学nodejs 也快乐</td><td><a href="http://www.cnblogs.com/qqloving/p/3541099.html" target="_blank" rel="noopener">http://www.cnblogs.com/qqloving/p/3541099.html</a></td></tr><tr><td>七天学会NodeJS</td><td><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank" rel="noopener">https://github.com/nqdeng/7-days-nodejs</a></td></tr><tr><td>Nodejs学习笔记（二）— 事件模块</td><td><a href="http://www.cnblogs.com/zhongweiv/p/nodejs_events.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhongweiv/p/nodejs_events.html</a></td></tr><tr><td>nodejs入门</td><td><a href="http://www.cnblogs.com/liusuqi/p/3735491.html" target="_blank" rel="noopener">http://www.cnblogs.com/liusuqi/p/3735491.html</a></td></tr><tr><td>angularjs nodejs</td><td><a href="https://github.com/zensh/jsgen" target="_blank" rel="noopener">https://github.com/zensh/jsgen</a></td></tr><tr><td>从零开始nodejs系列文章</td><td><a href="http://blog.fens.me/series-nodejs" target="_blank" rel="noopener">http://blog.fens.me/series-nodejs</a></td></tr><tr><td>理解nodejs</td><td><a href="http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb" target="_blank" rel="noopener">http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb</a></td></tr><tr><td>nodejs事件轮询</td><td><a href="http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop" target="_blank" rel="noopener">http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop</a></td></tr><tr><td>node入门</td><td><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="noopener">http://www.nodebeginner.org/index-zh-cn.html</a></td></tr><tr><td>nodejs cms</td><td><a href="http://ourjs.com/detail/53e1f281c5910a9806000001" target="_blank" rel="noopener">http://ourjs.com/detail/53e1f281c5910a9806000001</a></td></tr><tr><td>Node初学者入门，一本全面的NodeJS教程</td><td><a href="http://ourjs.com/detail/529ca5950cb6498814000005" target="_blank" rel="noopener">http://ourjs.com/detail/529ca5950cb6498814000005</a></td></tr><tr><td>NodeJS的代码调试和性能调优</td><td><a href="http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line" target="_blank" rel="noopener">http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line</a></td></tr></tbody></table><h3 id="十-性能优化-1"><a href="#十-性能优化-1" class="headerlink" title="十. 性能优化"></a>十. 性能优化</h3><ol><li>常规优化</li></ol><table><thead><tr><th>常规优化</th><th>地址</th></tr></thead><tbody><tr><td>Javascript高性能动画与页面渲染</td><td><a href="http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering</a></td></tr><tr><td>移动H5前端性能优化指南</td><td><a href="http://isux.tencent.com/h5-performance.html" target="_blank" rel="noopener">http://isux.tencent.com/h5-performance.html</a></td></tr><tr><td>5173首页前端性能优化实践</td><td><a href="http://ued.5173.com/?p=1731" target="_blank" rel="noopener">http://ued.5173.com/?p=1731</a></td></tr><tr><td>给网页设计师和前端开发者看的前端性能优化</td><td><a href="http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers" target="_blank" rel="noopener">http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers</a></td></tr><tr><td>复杂应用的 CSS 性能分析和优化建议</td><td><a href="http://www.orzpoint.com/profiling-css-and-optimization-notes" target="_blank" rel="noopener">http://www.orzpoint.com/profiling-css-and-optimization-notes</a></td></tr><tr><td>张鑫旭——前端性能</td><td><a href="http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD</a></td></tr><tr><td>前端性能监控总结</td><td><a href="http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html" target="_blank" rel="noopener">http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html</a></td></tr><tr><td>网站性能优化之CSS无图片技术</td><td><a href="http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF" target="_blank" rel="noopener">http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF</a></td></tr><tr><td>web前端性能优化进阶路</td><td><a href="http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html" target="_blank" rel="noopener">http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html</a></td></tr><tr><td>前端技术：网站性能优化之CSS无图片技术</td><td><a href="http://my.eoe.cn/tuwandou/archive/4544.html" target="_blank" rel="noopener">http://my.eoe.cn/tuwandou/archive/4544.html</a></td></tr><tr><td>浏览器的加载与页面性能优化</td><td><a href="http://www.baiduux.com/blog/2011/02/15/browser-loading" target="_blank" rel="noopener">http://www.baiduux.com/blog/2011/02/15/browser-loading</a></td></tr><tr><td>页面加载中的图片性能优化</td><td><a href="http://www.w3ctech.com/p/1503" target="_blank" rel="noopener">http://www.w3ctech.com/p/1503</a></td></tr><tr><td>Hey——前端性能</td><td><a href="http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD" target="_blank" rel="noopener">http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD</a></td></tr><tr><td>html优化</td><td><a href="http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2" target="_blank" rel="noopener">http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2</a></td></tr><tr><td>99css——性能</td><td><a href="http://www.99css.com/tag/%e6%80%a7%e8%83%bd" target="_blank" rel="noopener">http://www.99css.com/tag/%e6%80%a7%e8%83%bd</a></td></tr><tr><td>Yslow——性能优化</td><td><a href="http://www.yslow.net/category.php?cid=20" target="_blank" rel="noopener">http://www.yslow.net/category.php?cid=20</a></td></tr><tr><td>YSLOW中文介绍</td><td><a href="http://www.cnblogs.com/yslow" target="_blank" rel="noopener">http://www.cnblogs.com/yslow</a></td></tr><tr><td>转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化</td><td><a href="http://www.360ito.com/article/40.html" target="_blank" rel="noopener">http://www.360ito.com/article/40.html</a></td></tr><tr><td>Yahoo!团队实践分享：网站性能</td><td><a href="http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml</a></td></tr><tr><td>网站性能优化指南：什么使我们的网站变慢？</td><td><a href="http://blog.jiasule.com/i/153" target="_blank" rel="noopener">http://blog.jiasule.com/i/153</a></td></tr><tr><td>网站性能优化实践，减少加载时间，提高用户体验</td><td><a href="http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html" target="_blank" rel="noopener">http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html</a></td></tr><tr><td>浅谈网站性能优化 前端篇</td><td><a href="http://www.umtry.com/archives/747.html" target="_blank" rel="noopener">http://www.umtry.com/archives/747.html</a></td></tr><tr><td>前端重构实践之如何对网站性能优化？</td><td><a href="http://www.adinnet.cn/blog/designview/2012-7-12/678.html" target="_blank" rel="noopener">http://www.adinnet.cn/blog/designview/2012-7-12/678.html</a></td></tr><tr><td>前端性能优化：使用媒体查询加载指定大小的背景图片</td><td><a href="http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9" target="_blank" rel="noopener">http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9</a></td></tr><tr><td>网站性能系列博文</td><td><a href="http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html" target="_blank" rel="noopener">http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html</a></td></tr><tr><td>加载，不只是少一点点</td><td><a href="http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml" target="_blank" rel="noopener">http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml</a></td></tr><tr><td>前端性能的测试与优化</td><td><a href="http://mzhou.me/article/95310" target="_blank" rel="noopener">http://mzhou.me/article/95310</a></td></tr><tr><td>分享网页加载速度优化的一些技巧？</td><td><a href="http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading" target="_blank" rel="noopener">http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading</a></td></tr><tr><td>页面加载中的图片性能优化</td><td><a href="http://www.f2es.com/images-bytes-opt" target="_blank" rel="noopener">http://www.f2es.com/images-bytes-opt</a></td></tr><tr><td>web前端优化(基于Yslow</td><td><a href="http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html" target="_blank" rel="noopener">http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html</a></td></tr><tr><td>网站性能优化工具大全</td><td><a href="https://www.qianduan.net/website-performance-optimization-tool.html" target="_blank" rel="noopener">https://www.qianduan.net/website-performance-optimization-tool.html</a></td></tr><tr><td>【高性能前端1】高性能HTML</td><td><a href="http://www.alloyteam.com/2012/10/high-performance-html" target="_blank" rel="noopener">http://www.alloyteam.com/2012/10/high-performance-html</a></td></tr><tr><td>【高性能前端2】高性能CSS</td><td><a href="http://www.alloyteam.com/2012/10/high-performance-css" target="_blank" rel="noopener">http://www.alloyteam.com/2012/10/high-performance-css</a></td></tr><tr><td>由12306谈谈网站前端性能和后端性能优化</td><td><a href="http://coolshell.cn/articles/6470.html" target="_blank" rel="noopener">http://coolshell.cn/articles/6470.html</a></td></tr><tr><td>AlloyTeam——前端优化</td><td><a href="http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96" target="_blank" rel="noopener">http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96</a></td></tr><tr><td>毫秒必争，前端网页性能最佳实践</td><td><a href="http://www.cnblogs.com/developersupport/p/3248695.html" target="_blank" rel="noopener">http://www.cnblogs.com/developersupport/p/3248695.html</a></td></tr><tr><td>网站性能工具Yslow的使用方法</td><td><a href="http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html</a></td></tr><tr><td>前端工程与性能优化（上）：静态资源版本更新与缓存</td><td><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1</a></td></tr><tr><td>前端工程与性能优化（下）：静态资源管理与模板框架</td><td><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2" target="_blank" rel="noopener">http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2</a></td></tr><tr><td>HTTPS连接的前几毫秒发生了什么</td><td><a href="http://blog.jobbole.com/48369" target="_blank" rel="noopener">http://blog.jobbole.com/48369</a></td></tr><tr><td>Yslow</td><td><a href="http://uicss.cn/yslow/#more-12319" target="_blank" rel="noopener">http://uicss.cn/yslow/#more-12319</a></td></tr><tr><td>Essential Web Performance Metrics — A Primer, Part 1</td><td><a href="http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1" target="_blank" rel="noopener">http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1</a></td></tr><tr><td>Essential Web Performance Metrics — Part 2</td><td><a href="http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2" target="_blank" rel="noopener">http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2</a></td></tr><tr><td>YUISlide,针对移动设备的动画性能优化</td><td><a href="http://jayli.github.io/blog/data/2011/12/23/yuislide.html" target="_blank" rel="noopener">http://jayli.github.io/blog/data/2011/12/23/yuislide.html</a></td></tr><tr><td>Improving Site Performance</td><td><a href="http://joelglovier.com/improving-site-performance" target="_blank" rel="noopener">http://joelglovier.com/improving-site-performance</a></td></tr><tr><td>让网站提速的最佳前端实践</td><td><a href="http://segmentfault.com/a/1190000000367899" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000367899</a></td></tr><tr><td>Why Website Speed is Important</td><td><a href="http://sixrevisions.com/web-development/why-website-speed-is-important" target="_blank" rel="noopener">http://sixrevisions.com/web-development/why-website-speed-is-important</a></td></tr><tr><td>Need for Speed – How to Improve your Website Performance</td><td><a href="https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance" target="_blank" rel="noopener">https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance</a></td></tr><tr><td>阿里无线前端性能优化指南 (Pt.1 加载期优化</td><td><a href="https://github.com/amfe/article/issues/1" target="_blank" rel="noopener">https://github.com/amfe/article/issues/1</a></td></tr><tr><td></td><td></td></tr></tbody></table><ol start="2"><li>优化工具</li></ol><table><thead><tr><th>优化工具</th><th>地址</th></tr></thead><tbody><tr><td>JavaScript 性能分析新工具 OneProfile</td><td><a href="http://www.html-js.com/article/3083" target="_blank" rel="noopener">http://www.html-js.com/article/3083</a></td></tr><tr><td>JavaScript 堆内存分析新工具 OneHeap</td><td><a href="http://www.html-js.com/article/3091" target="_blank" rel="noopener">http://www.html-js.com/article/3091</a></td></tr></tbody></table><ol start="3"><li>在线工具</li></ol><table><thead><tr><th>在线工具</th><th>地址</th></tr></thead><tbody><tr><td>google在线工具</td><td><a href="https://developers.google.com/speed/pagespeed/insights" target="_blank" rel="noopener">https://developers.google.com/speed/pagespeed/insights</a></td></tr><tr><td>阿里测</td><td><a href="http://www.alibench.com" target="_blank" rel="noopener">http://www.alibench.com</a></td></tr><tr><td>阿里-免费测试服务</td><td><a href="http://itest.aliyun.com" target="_blank" rel="noopener">http://itest.aliyun.com</a></td></tr><tr><td>阿里-F2etest多浏览器兼容性测试解决方案</td><td><a href="https://github.com/alibaba/f2etest" target="_blank" rel="noopener">https://github.com/alibaba/f2etest</a></td></tr><tr><td>js性能测试</td><td><a href="http://jsperf.com" target="_blank" rel="noopener">http://jsperf.com</a></td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="十一-前端架构-1"><a href="#十一-前端架构-1" class="headerlink" title="十一. 前端架构"></a>十一. 前端架构</h3><table><thead><tr><th>前端架构</th><th>地址</th></tr></thead><tbody><tr><td>技术架构</td><td><a href="http://www.zhihu.com/topic/19612641" target="_blank" rel="noopener">http://www.zhihu.com/topic/19612641</a></td></tr><tr><td>前端架构</td><td><a href="http://saito.im/note/The-Architecture-of-F2E" target="_blank" rel="noopener">http://saito.im/note/The-Architecture-of-F2E</a></td></tr><tr><td>如何成为前端架构师</td><td><a href="http://www.zhihu.com/question/24092572" target="_blank" rel="noopener">http://www.zhihu.com/question/24092572</a></td></tr><tr><td>关于前端架构-张克军</td><td><a href="http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html" target="_blank" rel="noopener">http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html</a></td></tr><tr><td>百度腾讯offer比较（腾讯游戏VS百度基础架构）</td><td><a href="http://www.zhihu.com/question/25583350" target="_blank" rel="noopener">http://www.zhihu.com/question/25583350</a></td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="十二-个人作品-1"><a href="#十二-个人作品-1" class="headerlink" title="十二. 个人作品"></a>十二. 个人作品</h3><h4 id="1-推荐作品-1"><a href="#1-推荐作品-1" class="headerlink" title="1. 推荐作品"></a>1. 推荐作品</h4><table><thead><tr><th>推荐作品</th><th>地址</th></tr></thead><tbody><tr><td>winter代码片段需要翻墙</td><td><a href="https://gist.github.com/wintercn" target="_blank" rel="noopener">https://gist.github.com/wintercn</a></td></tr><tr><td>fgm</td><td><a href="http://www.fgm.cc/learn" target="_blank" rel="noopener">http://www.fgm.cc/learn</a></td></tr><tr><td>岑安作品集</td><td><a href="https://github.com/hongru/hongru.github.com" target="_blank" rel="noopener">https://github.com/hongru/hongru.github.com</a></td></tr><tr><td>当耐特demo集合</td><td><a href="http://kmdjs.github.io" target="_blank" rel="noopener">http://kmdjs.github.io</a></td></tr><tr><td>米空格 js作品</td><td><a href="http://www.laoshu133.com/Lab" target="_blank" rel="noopener">http://www.laoshu133.com/Lab</a></td></tr><tr><td>myFocus</td><td><a href="http://koen301.github.io" target="_blank" rel="noopener">http://koen301.github.io</a></td></tr><tr><td>SeaJS组件库</td><td><a href="http://panxuepeng.github.io/seajslib" target="_blank" rel="noopener">http://panxuepeng.github.io/seajslib</a></td></tr><tr><td>颜海镜作品</td><td><a href="http://yanhaijing.com/myProject" target="_blank" rel="noopener">http://yanhaijing.com/myProject</a></td></tr><tr><td>脚儿网作品</td><td><a href="http://jo2.org/category/myworks" target="_blank" rel="noopener">http://jo2.org/category/myworks</a></td></tr><tr><td>javascript个人作品</td><td><a href="http://www.cnitblog.com/yemoo/category/3107.html" target="_blank" rel="noopener">http://www.cnitblog.com/yemoo/category/3107.html</a></td></tr><tr><td>妙味的雷东升游戏作品</td><td><a href="http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790" target="_blank" rel="noopener">http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790</a></td></tr><tr><td>javascript作品集</td><td><a href="http://bbs.csdn.net/topics/380227212" target="_blank" rel="noopener">http://bbs.csdn.net/topics/380227212</a></td></tr><tr><td>云五笔，灰度产生生成工具</td><td><a href="https://github.com/TooBug/works" target="_blank" rel="noopener">https://github.com/TooBug/works</a></td></tr><tr><td>项目主页</td><td><a href="http://koen301.github.io" target="_blank" rel="noopener">http://koen301.github.io</a></td></tr><tr><td>个性的作品主页</td><td><a href="http://zaole.net" target="_blank" rel="noopener">http://zaole.net</a></td></tr><tr><td>播放器</td><td><a href="http://static.tingall.com/v2/player" target="_blank" rel="noopener">http://static.tingall.com/v2/player</a></td></tr><tr><td>ucren js demos 集</td><td><a href="http://ucren.com/blog/demos" target="_blank" rel="noopener">http://ucren.com/blog/demos</a></td></tr><tr><td>智能社</td><td><a href="http://www.zhinengshe.com/works_list.html" target="_blank" rel="noopener">http://www.zhinengshe.com/works_list.html</a></td></tr><tr><td>实例陈列架</td><td><a href="http://demos.shizuwu.cn" target="_blank" rel="noopener">http://demos.shizuwu.cn</a></td></tr><tr><td>zoye demo</td><td><a href="http://zoye.sinaapp.com/demo" target="_blank" rel="noopener">http://zoye.sinaapp.com/demo</a></td></tr><tr><td>王员外</td><td><a href="http://lab.yuanwai.wang" target="_blank" rel="noopener">http://lab.yuanwai.wang</a></td></tr><tr><td>平凡</td><td><a href="http://pingfan1990.sinaapp.com" target="_blank" rel="noopener">http://pingfan1990.sinaapp.com</a></td></tr><tr><td>jyg 游戏案例</td><td><a href="http://www.lovewebgames.com" target="_blank" rel="noopener">http://www.lovewebgames.com</a></td></tr><tr><td>很多jquery插件</td><td><a href="http://www.helloweba.com/list.html" target="_blank" rel="noopener">http://www.helloweba.com/list.html</a></td></tr><tr><td>不羁虫 - soJs 作品系列</td><td><a href="http://www.bujichong.com/sojs/api/index.html" target="_blank" rel="noopener">http://www.bujichong.com/sojs/api/index.html</a></td></tr><tr><td>frozenui</td><td><a href="http://frozenui.github.io/case.html" target="_blank" rel="noopener">http://frozenui.github.io/case.html</a></td></tr><tr><td>黑白棋</td><td><a href="http://js-game.github.io/othello" target="_blank" rel="noopener">http://js-game.github.io/othello</a></td></tr><tr><td>fromone</td><td><a href="http://yansm.github.io/fromone/index.html" target="_blank" rel="noopener">http://yansm.github.io/fromone/index.html</a></td></tr></tbody></table><h4 id="2-群员作品-1"><a href="#2-群员作品-1" class="headerlink" title="2. 群员作品"></a>2. 群员作品</h4><table><thead><tr><th>群员作品</th><th>地址</th></tr></thead><tbody><tr><td>MDialog 合肥-M.J]</td><td><a href="http://demo.webjyh.com" target="_blank" rel="noopener">http://demo.webjyh.com</a></td></tr><tr><td>轮播图 上海－冷静]</td><td><a href="http://sandbox.runjs.cn/show/do6zlrrk" target="_blank" rel="noopener">http://sandbox.runjs.cn/show/do6zlrrk</a> </td></tr><tr><td>[广州—坚壳]</td><td><a href="http://www.replace5.com" target="_blank" rel="noopener">http://www.replace5.com</a></td></tr><tr><td>[成都 - 无痕]　感恩节专题</td><td><a href="http://www.seejs.com/demos" target="_blank" rel="noopener">http://www.seejs.com/demos</a></td></tr><tr><td>[球霸天]</td><td><a href="http://hacke2.github.io/works" target="_blank" rel="noopener">http://hacke2.github.io/works</a></td></tr><tr><td>[北京-小数]</td><td><a href="http://www.cnblogs.com/mcat" target="_blank" rel="noopener">http://www.cnblogs.com/mcat</a></td></tr><tr><td>[ptf] Magix 工具</td><td><a href="http://thx.github.io/magix" target="_blank" rel="noopener">http://thx.github.io/magix</a></td></tr><tr><td>[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用</td><td><a href="http://thx.github.io/magix" target="_blank" rel="noopener">http://thx.github.io/magix</a></td></tr><tr><td>[上海-剧中人]-实验室</td><td><a href="http://bh-lay.com/labs" target="_blank" rel="noopener">http://bh-lay.com/labs</a></td></tr><tr><td>[上海-豪情 ] 作品集合</td><td><a href="http://jikeytang.github.io" target="_blank" rel="noopener">http://jikeytang.github.io</a></td></tr><tr><td>[成都-feeling]</td><td><a href="http://guoshan.sinaapp.com" target="_blank" rel="noopener">http://guoshan.sinaapp.com</a></td></tr><tr><td>[上海-angela]</td><td><a href="http://www.cnblogs.com/liyunhua" target="_blank" rel="noopener">http://www.cnblogs.com/liyunhua</a></td></tr><tr><td>[海南-hank]作品</td><td><a href="http://hcjp.github.io/work/demo" target="_blank" rel="noopener">http://hcjp.github.io/work/demo</a></td></tr><tr><td>[上海-张力]博客</td><td><a href="https://github.com/yibuyisheng/blogs/issues" target="_blank" rel="noopener">https://github.com/yibuyisheng/blogs/issues</a></td></tr><tr><td>[上海-zenki]作品</td><td><a href="http://zkske121.github.io" target="_blank" rel="noopener">http://zkske121.github.io</a></td></tr><tr><td>移动端图案解锁</td><td><a href="http://01google.sinaapp.com/locker.html" target="_blank" rel="noopener">http://01google.sinaapp.com/locker.html</a></td></tr><tr><td>[合肥-M.J] - MPreview 移动端图片预览组</td><td><a href="https://github.com/webjyh/MPreview.mobile" target="_blank" rel="noopener">https://github.com/webjyh/MPreview.mobile</a></td></tr><tr><td>[合肥-M.J] - Mexam 移动端在线做题组</td><td><a href="https://github.com/webjyh/Mexam" target="_blank" rel="noopener">https://github.com/webjyh/Mexam</a></td></tr><tr><td>[北京-苏瑞] - dancer小人</td><td><a href="http://letyougo.github.io/dancer" target="_blank" rel="noopener">http://letyougo.github.io/dancer</a></td></tr><tr><td>[上海-玄沐]- 个人网站</td><td><a href="http://k.swao.cn/js" target="_blank" rel="noopener">http://k.swao.cn/js</a></td></tr><tr><td>[厦门-二哲]- 个人博客</td><td><a href="http://www.meckodo.com" target="_blank" rel="noopener">http://www.meckodo.com</a></td></tr></tbody></table><h4 id="3-国外大牛精品-1"><a href="#3-国外大牛精品-1" class="headerlink" title="3. 国外大牛精品"></a>3. 国外大牛精品</h4><table><thead><tr><th>国外大牛精品</th><th>地址</th></tr></thead><tbody><tr><td>pazguille</td><td><a href="http://pazguille.me" target="_blank" rel="noopener">http://pazguille.me</a></td></tr></tbody></table><h3 id="十三-简历模板-1"><a href="#十三-简历模板-1" class="headerlink" title="十三. 简历模板"></a>十三. 简历模板</h3><table><thead><tr><th>简历模板</th><th>地址</th></tr></thead><tbody><tr><td>不错的个人简历</td><td><a href="http://learnshare.github.io/about/index.html" target="_blank" rel="noopener">http://learnshare.github.io/about/index.html</a></td></tr><tr><td>简历</td><td><a href="http://hcy2367.github.io/resume" target="_blank" rel="noopener">http://hcy2367.github.io/resume</a></td></tr><tr><td>张伦</td><td><a href="http://ncuey.sinaapp.com/CrispElite/" target="_blank" rel="noopener">http://ncuey.sinaapp.com/CrispElite/</a> </td></tr><tr><td>简历</td><td><a href="https://github.com/hacke2/ResumeSample" target="_blank" rel="noopener">https://github.com/hacke2/ResumeSample</a></td></tr><tr><td>翁天信</td><td><a href="http://blog.dandyweng.com/2013/07/how-my-website-was-created" target="_blank" rel="noopener">http://blog.dandyweng.com/2013/07/how-my-website-was-created</a></td></tr><tr><td>动画方式的简历</td><td><a href="http://www.webhek.com/misc/interactive-resume" target="_blank" rel="noopener">http://www.webhek.com/misc/interactive-resume</a></td></tr><tr><td>组件丰富简历</td><td><a href="http://www.linqing07.com/resume.html" target="_blank" rel="noopener">http://www.linqing07.com/resume.html</a></td></tr><tr><td>简历池</td><td><a href="http://www.mojianli.com/resume/view" target="_blank" rel="noopener">http://www.mojianli.com/resume/view</a></td></tr><tr><td>haorooms博客</td><td><a href="http://www.haorooms.com/about" target="_blank" rel="noopener">http://www.haorooms.com/about</a></td></tr><tr><td>Justin Young</td><td><a href="http://cv.youngdze.com" target="_blank" rel="noopener">http://cv.youngdze.com</a></td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="十四-面试题-1"><a href="#十四-面试题-1" class="headerlink" title="十四. 面试题"></a>十四. 面试题</h3><table><thead><tr><th>面试题</th><th>地址</th></tr></thead><tbody><tr><td>那几个月在找工作（百度，网易游戏）</td><td><a href="http://www.nowcoder.com/discuss/3196" target="_blank" rel="noopener">http://www.nowcoder.com/discuss/3196</a></td></tr><tr><td>2014最新面试题</td><td><a href="http://www.html-js.com/article/1743" target="_blank" rel="noopener">http://www.html-js.com/article/1743</a></td></tr><tr><td>阿里前端面试题</td><td><a href="http://www.w3cfuns.com/thread-5598563-2-1.html" target="_blank" rel="noopener">http://www.w3cfuns.com/thread-5598563-2-1.html</a></td></tr><tr><td>2016校招内推 – 阿里巴巴前端 – 三面面试经历</td><td><a href="http://www.cnblogs.com/imwtr/p/4685546.html" target="_blank" rel="noopener">http://www.cnblogs.com/imwtr/p/4685546.html</a></td></tr><tr><td>腾讯面试题</td><td><a href="http://www.w3cfuns.com/article-5599657-1-1.html" target="_blank" rel="noopener">http://www.w3cfuns.com/article-5599657-1-1.html</a></td></tr><tr><td>年后跳槽那点事：乐视+金山+360面试之行</td><td><a href="http://www.cnblogs.com/lvdabao/p/3660707.html" target="_blank" rel="noopener">http://www.cnblogs.com/lvdabao/p/3660707.html</a></td></tr><tr><td>阿里前端面试题上线</td><td><a href="http://fatesinger.com/2722.html" target="_blank" rel="noopener">http://fatesinger.com/2722.html</a></td></tr><tr><td>拉勾网js面试题</td><td><a href="http://www.cnblogs.com/52cik/p/js-question-lg.html" target="_blank" rel="noopener">http://www.cnblogs.com/52cik/p/js-question-lg.html</a></td></tr><tr><td>前端面试</td><td><a href="http://www.cnblogs.com/allenxing/p/3724382.html" target="_blank" rel="noopener">http://www.cnblogs.com/allenxing/p/3724382.html</a></td></tr><tr><td>Web开发笔试面试题 大全</td><td><a href="http://mianshiti.diandian.com" target="_blank" rel="noopener">http://mianshiti.diandian.com</a></td></tr><tr><td>前端开发面试题</td><td><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000465431</a></td></tr><tr><td>2014最新前端面试题</td><td><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions" target="_blank" rel="noopener">https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions</a></td></tr><tr><td>百度面试</td><td><a href="https://github.com/fex-team/interview-questions" target="_blank" rel="noopener">https://github.com/fex-team/interview-questions</a></td></tr><tr><td>面试题</td><td><a href="http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177" target="_blank" rel="noopener">http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177</a></td></tr><tr><td>前端工作面试问题</td><td><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese" target="_blank" rel="noopener">https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese</a></td></tr><tr><td>前端开发面试题</td><td><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000465431</a></td></tr><tr><td>5个经典的前端面试问题</td><td><a href="http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98</a></td></tr><tr><td>最全前端面试问题及答案总结</td><td><a href="http://segmentfault.com/a/1190000002562454" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002562454</a></td></tr><tr><td>如何面试一名前端开发工程师？</td><td><a href="http://www.html-js.com/article/Large-search-front-team-column%202961" target="_blank" rel="noopener">http://www.html-js.com/article/Large-search-front-team-column%202961</a></td></tr><tr><td>史上最全 前端开发面试问题及答案整理</td><td><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="noopener">https://github.com/hawx1993/Front-end-Interview-questions</a></td></tr><tr><td>前端实习生面试总结</td><td><a href="http://www.cnblogs.com/xiaoruo/p/4665163.html" target="_blank" rel="noopener">http://www.cnblogs.com/xiaoruo/p/4665163.html</a></td></tr><tr><td>史上最全 前端开发面试问题及答案整理</td><td><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="noopener">https://github.com/hawx1993/Front-end-Interview-questions</a></td></tr><tr><td>BAT及各大互联网公司2014前端笔试面试题：JavaScript篇</td><td><a href="http://blog.jobbole.com/78738" target="_blank" rel="noopener">http://blog.jobbole.com/78738</a></td></tr><tr><td>前端开发面试题大收集</td><td><a href="https://github.com/paddingme/Front-end-Web-Development-Interview-Question" target="_blank" rel="noopener">https://github.com/paddingme/Front-end-Web-Development-Interview-Question</a></td></tr><tr><td>收集的前端面试题和答案</td><td><a href="https://github.com/qiu-deqing/FE-interview" target="_blank" rel="noopener">https://github.com/qiu-deqing/FE-interview</a></td></tr><tr><td>如何面试前端工程师</td><td><a href="http://www.zhihu.com/question/19568008" target="_blank" rel="noopener">http://www.zhihu.com/question/19568008</a></td></tr><tr><td>前端开发面试题</td><td><a href="https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md" target="_blank" rel="noopener">https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md</a></td></tr><tr><td>牛客网-笔试面经</td><td><a href="http://www.nowcoder.com/discuss?type=2" target="_blank" rel="noopener">http://www.nowcoder.com/discuss?type=2</a></td></tr></tbody></table><h3 id="十五-iconfont-1"><a href="#十五-iconfont-1" class="headerlink" title="十五. iconfont"></a>十五. iconfont</h3><table><thead><tr><th>iconfont</th><th>地址</th></tr></thead><tbody><tr><td>中文字体</td><td><a href="http://www.zhihu.com/question/21253343" target="_blank" rel="noopener">http://www.zhihu.com/question/21253343</a></td></tr><tr><td>淘宝字库</td><td><a href="http://iconfont.cn" target="_blank" rel="noopener">http://iconfont.cn</a></td></tr><tr><td>字体</td><td><a href="http://mux.alimama.com/fonts" target="_blank" rel="noopener">http://mux.alimama.com/fonts</a></td></tr><tr><td>制作教程</td><td><a href="http://iconfont.cn/help/platform.html" target="_blank" rel="noopener">http://iconfont.cn/help/platform.html</a></td></tr><tr><td>zhangxinxu-icommon</td><td><a href="http://www.zhangxinxu.com/wordpress/?s=icomoon" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/?s=icomoon</a></td></tr><tr><td>icommon</td><td><a href="https://icomoon.io/app" target="_blank" rel="noopener">https://icomoon.io/app</a></td></tr><tr><td>用字体在网页中画ICON图标(推荐教程</td><td><a href="http://imooc.com/learn/243" target="_blank" rel="noopener">http://imooc.com/learn/243</a></td></tr><tr><td>字体压缩工具</td><td><a href="http://font-spider.org" target="_blank" rel="noopener">http://font-spider.org</a> 感谢初级群　[深圳-小鱼] 的推荐</td></tr></tbody></table><h3 id="十六-开发工具类-1"><a href="#十六-开发工具类-1" class="headerlink" title="十六. 开发工具类"></a>十六. 开发工具类</h3><ol><li>前端开发工具</li></ol><table><thead><tr><th>前端开发工具</th><th>地址</th></tr></thead><tbody><tr><td>IntelliJ IDEA 简体中文专题教程</td><td><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="noopener">https://github.com/judasn/IntelliJ-IDEA-Tutorial</a></td></tr><tr><td>Webstorm,InterllIdea,Phpstorm</td><td><a href="http://t.cn/8kZZ1Uy" target="_blank" rel="noopener">http://t.cn/8kZZ1Uy</a></td></tr><tr><td>SublimeText</td><td><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="noopener">https://github.com/jikeytang/sublime-text</a></td></tr><tr><td>Atom</td><td><a href="https://atom.io" target="_blank" rel="noopener">https://atom.io</a></td></tr><tr><td>visual studio code</td><td><a href="https://code.visualstudio.com" target="_blank" rel="noopener">https://code.visualstudio.com</a></td></tr></tbody></table><ol start="2"><li>Chrome, Firebug, Filddle 调试</li></ol><ol><li>Fiddler</li></ol><table><thead><tr><th>Fiddler</th><th>地址</th></tr></thead><tbody><tr><td>Fiddler调式使用知多少(一深入研究</td><td><a href="http://www.cnblogs.com/tugenhua0707/p/4623317.html" target="_blank" rel="noopener">http://www.cnblogs.com/tugenhua0707/p/4623317.html</a></td></tr><tr><td>微信fiddle</td><td><a href="http://www.cnblogs.com/strick/p/4570006.html" target="_blank" rel="noopener">http://www.cnblogs.com/strick/p/4570006.html</a></td></tr><tr><td>微信fiddle</td><td><a href="http://gaoboy.com/article/26.html" target="_blank" rel="noopener">http://gaoboy.com/article/26.html</a></td></tr></tbody></table><ol start="2"><li>Chrome</li></ol><table><thead><tr><th>Chrome</th><th>地址</th></tr></thead><tbody><tr><td>Google Chrome 官方</td><td><a href="https://developer.chrome.com/devtools" target="_blank" rel="noopener">https://developer.chrome.com/devtools</a></td></tr><tr><td>Chrome - 基础</td><td><a href="http://www.cnblogs.com/constantince/p/4565261.html" target="_blank" rel="noopener">http://www.cnblogs.com/constantince/p/4565261.html</a></td></tr><tr><td>Chrome - 进阶</td><td><a href="http://www.cnblogs.com/constantince/p/4579121.html" target="_blank" rel="noopener">http://www.cnblogs.com/constantince/p/4579121.html</a></td></tr><tr><td>Chrome - 性能</td><td><a href="http://www.cnblogs.com/constantince/p/4585983.html" target="_blank" rel="noopener">http://www.cnblogs.com/constantince/p/4585983.html</a></td></tr><tr><td>Chrome - 性能进阶</td><td><a href="http://www.cnblogs.com/constantince/p/4607497.html" target="_blank" rel="noopener">http://www.cnblogs.com/constantince/p/4607497.html</a></td></tr><tr><td>Chrome - 移动</td><td><a href="http://www.cnblogs.com/constantince/p/4624241.html" target="_blank" rel="noopener">http://www.cnblogs.com/constantince/p/4624241.html</a></td></tr><tr><td>Chrome - 使用技巧</td><td><a href="http://www.cnblogs.com/liyunhua/p/4544738.html" target="_blank" rel="noopener">http://www.cnblogs.com/liyunhua/p/4544738.html</a></td></tr><tr><td>Chrome - Console控制台不完全指南</td><td><a href="http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html" target="_blank" rel="noopener">http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html</a></td></tr><tr><td>Chrome - Workspace使浏览器变成IDE</td><td><a href="http://c7sky.com/chrome-devtools-workspace.html" target="_blank" rel="noopener">http://c7sky.com/chrome-devtools-workspace.html</a></td></tr><tr><td>network面板</td><td><a href="http://www.html-js.com/article/Nothing-blind%202975" target="_blank" rel="noopener">http://www.html-js.com/article/Nothing-blind%202975</a></td></tr><tr><td>chrome开发工具快捷键</td><td><a href="http://anti-code.com/devtools-cheatsheet" target="_blank" rel="noopener">http://anti-code.com/devtools-cheatsheet</a></td></tr><tr><td>chrome调试工具常用功能整理</td><td><a href="http://www.html-js.com/article/2327" target="_blank" rel="noopener">http://www.html-js.com/article/2327</a></td></tr><tr><td>Chrome 开发工具 Workspace 使用</td><td><a href="http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace" target="_blank" rel="noopener">http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace</a></td></tr><tr><td>Chrome神器Vimium快捷键学习记录</td><td><a href="http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html" target="_blank" rel="noopener">http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html</a></td></tr><tr><td>sass调试-w3cplus</td><td><a href="http://www.w3cplus.com/sassguide/debug.html" target="_blank" rel="noopener">http://www.w3cplus.com/sassguide/debug.html</a></td></tr><tr><td>如何更专业的使用Chrome开发者工具-w3cplus</td><td><a href="http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html" target="_blank" rel="noopener">http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html</a></td></tr><tr><td>chrome调试canvas</td><td><a href="http://sentsin.com/web/253.html" target="_blank" rel="noopener">http://sentsin.com/web/253.html</a></td></tr><tr><td>chrome profiles1</td><td><a href="https://developer.chrome.com/devtools/index" target="_blank" rel="noopener">https://developer.chrome.com/devtools/index</a></td></tr><tr><td>chrome profiles2</td><td><a href="http://h5dev.uc.cn/article-25-1.html" target="_blank" rel="noopener">http://h5dev.uc.cn/article-25-1.html</a></td></tr><tr><td>chrome profiles3</td><td><a href="http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles" target="_blank" rel="noopener">http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles</a></td></tr><tr><td>chrome移动版调试</td><td><a href="https://developer.chrome.com/devtools/docs/mobile-emulation" target="_blank" rel="noopener">https://developer.chrome.com/devtools/docs/mobile-emulation</a></td></tr><tr><td>chrome调试</td><td><a href="http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool" target="_blank" rel="noopener">http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool</a></td></tr><tr><td>chrome的调试</td><td><a href="http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html" target="_blank" rel="noopener">http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html</a></td></tr><tr><td>chrome console 命令详解</td><td><a href="https://developer.chrome.com/devtools/docs/commandline-api" target="_blank" rel="noopener">https://developer.chrome.com/devtools/docs/commandline-api</a></td></tr><tr><td>查看事件绑定1</td><td><a href="http://www.cnblogs.com/leonkao/p/3809655.html" target="_blank" rel="noopener">http://www.cnblogs.com/leonkao/p/3809655.html</a></td></tr><tr><td>查看事件绑定2</td><td><a href="http://www.cnblogs.com/xiaoyao2011/p/3447421.html" target="_blank" rel="noopener">http://www.cnblogs.com/xiaoyao2011/p/3447421.html</a></td></tr><tr><td>神器——Chrome开发者工具(一</td><td><a href="http://segmentfault.com/a/1190000000683599" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000683599</a></td></tr><tr><td>奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍</td><td><a href="https://xinranliu.me/2015-05-22-qiqu-performance" target="_blank" rel="noopener">https://xinranliu.me/2015-05-22-qiqu-performance</a></td></tr><tr><td>chrome 开发者工具的 15 个小技巧</td><td><a href="http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html" target="_blank" rel="noopener">http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html</a></td></tr><tr><td>Chrome开发者工具不完全指南</td><td><a href="http://1ke.co/course/361" target="_blank" rel="noopener">http://1ke.co/course/361</a></td></tr><tr><td>Chrome 开发者工具使用技巧</td><td><a href="http://segmentfault.com/a/1190000003882567" target="_blank" rel="noopener">http://segmentfault.com/a/1190000003882567</a></td></tr></tbody></table><ol start="3"><li>Firebug</li></ol><table><thead><tr><th>Firebug</th><th>地址</th></tr></thead><tbody><tr><td>firebug视频教程</td><td><a href="http://www.imooc.com/learn/137" target="_blank" rel="noopener">http://www.imooc.com/learn/137</a></td></tr><tr><td>firefox 模拟器</td><td><a href="https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE</a></td></tr><tr><td>console.log 命令详解</td><td><a href="http://www.cnblogs.com/ctriphire/p/4116207.html" target="_blank" rel="noopener">http://www.cnblogs.com/ctriphire/p/4116207.html</a></td></tr><tr><td>Firebug入门指南</td><td><a href="http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html</a></td></tr><tr><td>Firebug控制台详解</td><td><a href="http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html</a></td></tr></tbody></table><ol start="4"><li>移动,微信调试</li></ol><table><thead><tr><th>移动,微信调试</th><th>地址</th></tr></thead><tbody><tr><td>浏览器端调试安卓</td><td><a href="https://openstf.github.io" target="_blank" rel="noopener">https://openstf.github.io</a></td></tr><tr><td>移动端前端开发调试</td><td><a href="http://yujiangshui.com/multidevice-frontend-debug" target="_blank" rel="noopener">http://yujiangshui.com/multidevice-frontend-debug</a></td></tr><tr><td>使用 Chrome 远程调试 Android 设备</td><td><a href="https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md" target="_blank" rel="noopener">https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md</a></td></tr><tr><td>mac移动端调试</td><td><a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="noopener">http://plus.uc.cn/document/webapp/doc5.html</a></td></tr><tr><td>mac移动端调试</td><td><a href="http://www.mihtool.com" target="_blank" rel="noopener">http://www.mihtool.com</a></td></tr><tr><td>无线调试攻略</td><td><a href="http://thx.github.io/mobile/debugging-in-mobile" target="_blank" rel="noopener">http://thx.github.io/mobile/debugging-in-mobile</a></td></tr><tr><td>无线调试攻略</td><td><a href="http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile" target="_blank" rel="noopener">http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile</a></td></tr><tr><td>屌爆了,完美调试 微信webview(x5</td><td><a href="http://www.jianshu.com/p/ccf124f1f74b" target="_blank" rel="noopener">http://www.jianshu.com/p/ccf124f1f74b</a></td></tr><tr><td>微信调试的那些事</td><td><a href="http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B" target="_blank" rel="noopener">http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B</a></td></tr><tr><td>远程console</td><td><a href="http://jsconsole.com" target="_blank" rel="noopener">http://jsconsole.com</a></td></tr><tr><td>微信调试工具</td><td><a href="http://blog.qqbrowser.cc" target="_blank" rel="noopener">http://blog.qqbrowser.cc</a></td></tr><tr><td>各种真机远程调试方法汇总</td><td><a href="https://github.com/jieyou/remote_inspect_web_on_real_device" target="_blank" rel="noopener">https://github.com/jieyou/remote_inspect_web_on_real_device</a></td></tr></tbody></table><ol start="5"><li>iOS Simulator</li></ol><table><thead><tr><th>iOS Simulator</th><th>地址</th></tr></thead><tbody><tr><td>Simulator</td><td><a href="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html" target="_blank" rel="noopener">https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html</a></td></tr><tr><td>Xcode中的iOS模拟器(iOS Simulator的介绍和使用心得</td><td><a href="http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary" target="_blank" rel="noopener">http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary</a></td></tr></tbody></table><ol start="3"><li>img</li></ol><table><thead><tr><th>img</th><th>地址</th></tr></thead><tbody><tr><td>loading img</td><td><a href="http://preloaders.net/en/circular" target="_blank" rel="noopener">http://preloaders.net/en/circular</a></td></tr><tr><td>智图-图片优化平台</td><td><a href="http://zhitu.isux.us" target="_blank" rel="noopener">http://zhitu.isux.us</a></td></tr><tr><td>在线png优化</td><td><a href="https://tinypng.com" target="_blank" rel="noopener">https://tinypng.com</a></td></tr></tbody></table><ol start="4"><li>生成二维码</li></ol><table><thead><tr><th>生成二维码</th><th>地址</th></tr></thead><tbody><tr><td>生成二维码</td><td><a href="http://cli.im" target="_blank" rel="noopener">http://cli.im</a></td></tr></tbody></table><ol start="5"><li>浏览器同步</li></ol><table><thead><tr><th>浏览器同步</th><th>地址</th></tr></thead><tbody><tr><td>puer</td><td><a href="https://github.com/leeluolee/puer" target="_blank" rel="noopener">https://github.com/leeluolee/puer</a></td></tr><tr><td>liveReload</td><td><a href="http://livereload.com" target="_blank" rel="noopener">http://livereload.com</a></td></tr><tr><td>f5</td><td><a href="http://getf5.com" target="_blank" rel="noopener">http://getf5.com</a></td></tr><tr><td>File Watchers</td><td><a href="http://geek100.com/2608" target="_blank" rel="noopener">http://geek100.com/2608</a></td></tr></tbody></table><ol start="6"><li>在线PPT制作</li></ol><table><thead><tr><th>在线PPT制作</th><th>地址</th></tr></thead><tbody><tr><td>nodePPT</td><td><a href="http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt" target="_blank" rel="noopener">http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt</a></td></tr><tr><td>PPT</td><td><a href="https://github.com/ksky521/nodePPT" target="_blank" rel="noopener">https://github.com/ksky521/nodePPT</a></td></tr><tr><td>reveal</td><td><a href="https://github.com/hakimel/reveal.js" target="_blank" rel="noopener">https://github.com/hakimel/reveal.js</a></td></tr><tr><td>slippy</td><td><a href="https://github.com/Seldaek/slippy" target="_blank" rel="noopener">https://github.com/Seldaek/slippy</a></td></tr></tbody></table><h3 id="十七-前端导航网站-1"><a href="#十七-前端导航网站-1" class="headerlink" title="十七. 前端导航网站"></a>十七. 前端导航网站</h3><table><thead><tr><th>前端导航网站</th><th>地址</th></tr></thead><tbody><tr><td>界面清爽的前端导航</td><td><a href="http://uxbees.com/index.html" target="_blank" rel="noopener">http://uxbees.com/index.html</a></td></tr><tr><td>前端导航</td><td><a href="http://whycss.com" target="_blank" rel="noopener">http://whycss.com</a></td></tr><tr><td>前端网址导航</td><td><a href="http://www.daqianduan.com/nav" target="_blank" rel="noopener">http://www.daqianduan.com/nav</a></td></tr><tr><td>前端名录</td><td><a href="http://sentsin.com/daohang" target="_blank" rel="noopener">http://sentsin.com/daohang</a></td></tr><tr><td>前端导航</td><td><a href="http://123.jser.us" target="_blank" rel="noopener">http://123.jser.us</a></td></tr><tr><td>前端开发资源</td><td><a href="http://www.css88.com/nav" target="_blank" rel="noopener">http://www.css88.com/nav</a></td></tr><tr><td>网址导航</td><td><a href="http://www.haourl.cn" target="_blank" rel="noopener">http://www.haourl.cn</a></td></tr><tr><td>前端开发仓库 - 众多效果的收集地</td><td><a href="http://code.ciaoca.com" target="_blank" rel="noopener">http://code.ciaoca.com</a> </td></tr><tr><td>前端资源导航</td><td><a href="https://github.com/jnoodle/f2e-collect" target="_blank" rel="noopener">https://github.com/jnoodle/f2e-collect</a></td></tr><tr><td>F2E 前端导航</td><td><a href="http://f2e.im/static/pages/nav/index.html" target="_blank" rel="noopener">http://f2e.im/static/pages/nav/index.html</a></td></tr></tbody></table><h3 id="十八-常用CDN-1"><a href="#十八-常用CDN-1" class="headerlink" title="十八. 常用CDN"></a>十八. 常用CDN</h3><table><thead><tr><th>常用CDN</th><th>地址</th></tr></thead><tbody><tr><td>新浪CDN</td><td><a href="http://lib.sinaapp.com" target="_blank" rel="noopener">http://lib.sinaapp.com</a></td></tr><tr><td>百度静态资源公共库</td><td><a href="http://cdn.code.baidu.com" target="_blank" rel="noopener">http://cdn.code.baidu.com</a></td></tr><tr><td>360网站卫士常用前端公共库CDN服务</td><td><a href="http://libs.useso.com" target="_blank" rel="noopener">http://libs.useso.com</a></td></tr><tr><td>Bootstrap中文网开源项目免费 CDN 服务</td><td><a href="http://www.bootcdn.cn" target="_blank" rel="noopener">http://www.bootcdn.cn</a></td></tr><tr><td>开放静态文件 CDN - 七牛</td><td><a href="http://staticfile.org" target="_blank" rel="noopener">http://staticfile.org</a></td></tr><tr><td>CDN加速 - jq22</td><td><a href="http://www.jq22.com/cdn" target="_blank" rel="noopener">http://www.jq22.com/cdn</a></td></tr><tr><td>jQuery CDN</td><td><a href="http://code.jquery.com" target="_blank" rel="noopener">http://code.jquery.com</a></td></tr><tr><td>Google jQuery CDN</td><td><a href="http://www.google-jquery-cdn.com" target="_blank" rel="noopener">http://www.google-jquery-cdn.com</a></td></tr><tr><td>微软CDN</td><td><a href="http://www.asp.net/ajax/cdn" target="_blank" rel="noopener">http://www.asp.net/ajax/cdn</a></td></tr></tbody></table><h3 id="十九-Git-SVN-Github-1"><a href="#十九-Git-SVN-Github-1" class="headerlink" title="十九. Git,SVN,Github"></a>十九. Git,SVN,Github</h3><ol><li>Git</li></ol><table><thead><tr><th>Git</th><th>地址</th></tr></thead><tbody><tr><td>git-scm</td><td><a href="http://git-scm.com" target="_blank" rel="noopener">http://git-scm.com</a></td></tr><tr><td>廖雪峰-Git教程</td><td><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></td></tr><tr><td>git-for-windows</td><td><a href="https://git-for-windows.github.io" target="_blank" rel="noopener">https://git-for-windows.github.io</a></td></tr><tr><td>GitHub 添加 SSH keys</td><td><a href="http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github" target="_blank" rel="noopener">http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github</a></td></tr><tr><td>gogithub</td><td><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">http://www.worldhello.net/gotgithub/index.html</a></td></tr><tr><td>git常规命令练习</td><td><a href="http://pcottle.github.io/learnGitBranching" target="_blank" rel="noopener">http://pcottle.github.io/learnGitBranching</a></td></tr><tr><td>git的资料整理</td><td><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></td></tr><tr><td>我所记录的git命令（非常实用）</td><td><a href="http://www.cnblogs.com/fanfan259/p/4810517.html" target="_blank" rel="noopener">http://www.cnblogs.com/fanfan259/p/4810517.html</a></td></tr><tr><td>企业开发git工作流模式探索部分休整</td><td><a href="https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md" target="_blank" rel="noopener">https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md</a></td></tr><tr><td>GitHub 漫游指南</td><td><a href="https://github.com/phodal/github-roam" target="_blank" rel="noopener">https://github.com/phodal/github-roam</a></td></tr><tr><td>GitHub秘籍</td><td><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md" target="_blank" rel="noopener">https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md</a></td></tr><tr><td>使用git和github进行协同开发流程</td><td><a href="http://livoras.com/post/28" target="_blank" rel="noopener">http://livoras.com/post/28</a></td></tr><tr><td>动画方式练习git</td><td><a href="http://onlywei.github.io/explain-git-with-d3" target="_blank" rel="noopener">http://onlywei.github.io/explain-git-with-d3</a></td></tr></tbody></table><p>via <a href="https://github.com/MoonYaph/Front--end--tutorial" target="_blank" rel="noopener">Front–end–tutorial</a></p>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript中的枚举 [译]</title>
      <link href="/Enums-in-javascript-%E8%AF%91/"/>
      <url>/Enums-in-javascript-%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<p><strong> <em>Javascript中的枚举</em> ，</strong>你想这样定义枚举：<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var SizeEnum = &#123;</span><br><span class="line">  SMALL: 1,</span><br><span class="line">  MEDIUM: 2,</span><br><span class="line">  LARGE: 3,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后这样用它：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var mySize = SizeEnum.SMALL;</span><br></pre></td></tr></table></figure></p><p>如果你想把枚举对应的值加上属性，你可以给它们加一个额外的对象：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var SizeEnum = &#123;</span><br><span class="line">  SMALL: 1,</span><br><span class="line">  MEDIUM: 2,</span><br><span class="line">  LARGE: 3,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    1: &#123;name: &quot;small&quot;, value: 1, code: &quot;S&quot;&#125;,</span><br><span class="line">    2: &#123;name: &quot;medium&quot;, value: 2, code: &quot;M&quot;&#125;,</span><br><span class="line">    3: &#123;name: &quot;large&quot;, value: 3, code: &quot;L&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后像这样用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mySize = SizeEnum.MEDIUM;</span><br><span class="line">var myCode = SizeEnum.properties[mySize].code; // myCode == &quot;M&quot;</span><br></pre></td></tr></table></figure></p><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>上面描述的是对JavaScript枚举思考很长时间得出的结果。它尝试最好的结合以原语为枚举值（序列化）和以对象作为值（允许值对应属性），进一步阅读了解我是怎么实现这一方法。</p><h4 id="重新理解枚举"><a href="#重新理解枚举" class="headerlink" title="重新理解枚举"></a>重新理解枚举</h4><p>我最近偶然发现自己在StackOverflow已经回答了几年的问题，读过一些评论之后思考了一下觉得这是一个很值得话题。</p><p><em>那么评论中都是那些问题呢？</em></p><p><strong>在JavaScript中写枚举最好的方法是？</strong><br>首先，在回答问题之前，先了解一下什么是枚举？在JavaScript中写意着什么。让我们先看一下枚举的定义：<br><strong>枚举是什么?</strong></p><blockquote><p>在数学和计算机科学理论中，一个集的枚举是列出某些有穷序列集的所有成员的程序，或者是一种特定类型对象的计数。这两种类型经常（但不总是）重叠。枚举是一个被命名的整型常数的集合<br><em>–维基百科: 枚举</em></p></blockquote><p>一个很好的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum WeekDay = &#123;MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY&#125;;</span><br></pre></td></tr></table></figure></p><p>总结：枚举是一组预定义的常量中的一个制约变量。在上面的例子中WeekDay是一个枚举值，MONDAY、TUESDAY等是集合中的常量，也可称为枚举成员，如果我们声明一个变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WeekDay payDay;</span><br></pre></td></tr></table></figure></p><p>我们可以把它分配给MONDAY，TUESDAY等任何一个常量，直到包括SUNDAY，但不是其他的什么，像12、<code>labour day</code>。<br>…这给我们带来一个问题。<br><strong>它不能在JavaScript中实现</strong><br>javascript是弱类型语言，这意味着不需要事先声明一个特定类型的变量。在Java（强类型）中你可能这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int i; // declares a variable named i which may hold integer values.</span><br></pre></td></tr></table></figure></p><p>如果之后你要给它分配一个字符串，你需要这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i = &quot;Hello World&quot;;</span><br></pre></td></tr></table></figure></p><p>但是编译器会返回错误，中断生成文件<br>不像Javascript中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var i;</span><br><span class="line">i = 10;</span><br><span class="line">i = &quot;Hello World&quot;;</span><br><span class="line">i = 3.1415;</span><br><span class="line">i = true;</span><br><span class="line">i = [&apos;my&apos;, &apos;array&apos;];</span><br><span class="line">i = &#123;look: &apos;at&apos;, my: &apos;object&apos;&#125;;</span><br></pre></td></tr></table></figure></p><p>正如你所看到，我们声明了一个变量（通过关键字var）,但它在运行时类型是不受限制的。我们可以给他分配任何值。维基百科的措辞有点尴尬，但是你读到这行</p><blockquote><p>A variable that has been declared as having an enumerated type can be assigned any of the enumerators as a value.</p></blockquote><p>它表明，任何的枚举数都可被分配，但是什么都没有，所以它限制了可以分配给变量的值。在JavaScript中我们只是不能这样做，因此我们不能写真正的枚举，我们可以模仿C语言中提供的一些方便的方法，但要记住，我们只模仿它提供的语法糖。</p><p><strong>在javascript中写枚举</strong><br>我是从强类型的java中转过来的，但也很长时间没有写枚举了，因此Java的编程给我带来一些不同的解决方法来模仿写出枚举。</p><p><em>常数，常常是i、c、w。命名约定</em><br>只列出你使用类顶部的常数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public static final int DAYS_MONDAY = 0;</span><br><span class="line">public static final int DAYS_TUESDAY = 1;</span><br><span class="line">// ..</span><br><span class="line">public static final int DAYS_SUNDAY = 6;</span><br></pre></td></tr></table></figure></p><p><em>简单常量类</em><br>像上面简单的例子，把常量放到专用的类中用于复用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class DaysEnum &#123;</span><br><span class="line">  public static final int MONDAY = 0;</span><br><span class="line">  public static final int TUESDAY = 1;</span><br><span class="line">  // ..</span><br><span class="line">  public static final int SUNDAY = 6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>常数实例类</em></p><p>Java的枚举促使了js枚举的仿制，它使用一个专用的私有构造函数类（除了类本身没有被实例化）和使用实例本身作为枚举值：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class DaysEnum &#123;</span><br><span class="line">  private DaysEnum() &#123;&#125;</span><br><span class="line">  public static final DaysEnum MONDAY = new DaysEnum();</span><br><span class="line">  public static final DaysEnum TUESDAY = new DaysEnum();</span><br><span class="line">  // ..</span><br><span class="line">  public static final DaysEnum SUNDAY = new DaysEnum();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>另外，使用枚举实例的枚举数是一种优雅的方式，这使得这样模拟枚举类型的安全，与其他两个变量比，枚举的变量将是整数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int payDay = DAYS_FRIDAY; // variation 1</span><br><span class="line">int payDay = DaysEnum.FRIDAY; // variation 2</span><br></pre></td></tr></table></figure></p><p>它仍然有可能指定一个完全错误的值，如128这样的枚举。相比之下，第三的变异实际上限制可以被分配到枚举列出枚举成员的值：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DaysEnum payDay = DaysEnum.FRIDAY; // ok</span><br><span class="line">DaysEnum payDay = 128; // compiler error</span><br></pre></td></tr></table></figure></p><p>作为新增加的亮点，第三枚举模式允许我们添加额外的字段，例如把一天加上名字，甚至方法（isWeekendDay()为例）的枚举。因此，从Java中了解的这些模式，我在StackOverflow上建议JavaScript使用第三枚举的方法来写。<br>目前仍是在StackOverFlow上得到的星最多的，因此我要解释一下为什么，然后告诉你我个人认为在JavaScript中获得最大的收益就是要尽可能的少写枚举。</p><p><strong><em>那么替代这种方法的又是什么呢？ 这样的方法又有什么错误呢？</em></strong></p><p>第三枚举在JavaScript中是这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var DaysEnum = &#123;</span><br><span class="line">  MONDAY: &#123;&#125;, // optionally you can give the object properties and methods</span><br><span class="line">  TUESDAY: &#123;&#125;,</span><br><span class="line">  // ..</span><br><span class="line">  SUNDAY: &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>但是，我现在不再推荐这种风格，不要再使用它了。<br><strong><em>为什么不呢?</em></strong><br>因为在评论中有人指出关于线程的问题，当数据序列化的时候这将出现一些问题，为了理解为什么这样，让我们来看一看当我们把DaysEnum中的一个枚举值作为一个对象的字段会发生什么：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var myObject = &#123;</span><br><span class="line">  payDay: DaysEnum.MONDAY</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var yesterday = DaysEnum.THURSDAY, </span><br><span class="line">    today = DaysEnum.MONDAY;</span><br><span class="line">if (yesterday == myObject.payDay)</span><br><span class="line">  alert(&quot;Yesterday was pay day... but not today...&quot;);</span><br><span class="line">else if (today == myObject.payDay)</span><br><span class="line">  alert(&quot;Today is pay day! Yippie!!!&quot;);</span><br><span class="line">else</span><br><span class="line">  alert(&quot;Neither yesterday nor today are pay days... I&apos;m broke!&quot;);</span><br></pre></td></tr></table></figure></p><p>到目前为止很好，它会alert出我们预期的”Today is pay day! Yippie!!!”(今天是周一)，但是我们将<code>myObject</code>序列化转成JSON,再将它反序列化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var serialized = JSON.stringify(myObject);</span><br><span class="line">  alert(&quot;serialized myObject: &quot; + serialized);</span><br><span class="line">var deserializedObject = JSON.parse(serialized);</span><br><span class="line">if (yesterday == deserializedObject.payDay)</span><br><span class="line">  alert(&quot;Yesterday was pay day... but not today...&quot;);</span><br><span class="line">else if (today == deserializedObject.payDay)</span><br><span class="line">  alert(&quot;Today is pay day! Yippie!!!&quot;);</span><br><span class="line">else</span><br><span class="line">  alert(&quot;Neither yesterday nor today are pay days... I&apos;m broke!&quot;);</span><br></pre></td></tr></table></figure></p><p>这个结果是”Neither yesterday nor today are pay days… I’m broke!”原因是依靠反序列化<code>JSON.parse</code>创建一个新的对象作为payDay的值，这个新对象不同于<code>DaysEnum.FRIDAY</code>因此在比较之后会错误。</p><p>我认为这样解决问题不是一个很好的方法，能系列化和反序列化枚举是很重要的，而不能忽视的。这就是为什么我建议不要使用这种模式，相反的是用第二枚举解决问题就不会出现这样的问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var DaysEnum = &#123;</span><br><span class="line">  MONDAY: &quot;monday&quot;,</span><br><span class="line">  TUESDAY: &quot;tuesday&quot;,</span><br><span class="line">  // ..</span><br><span class="line">  SUNDAY: &quot;sunday&quot;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>（或者你可以用数字代替字符串的值，都可以达到同样的效果），让我们检查一下这个做系列化的安全性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var myObject = &#123;</span><br><span class="line">  payDay: DaysEnum.FRIDAY</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var serialized = JSON.stringify(myObject);</span><br><span class="line">  alert(&quot;serialized myObject: &quot; + serialized);</span><br><span class="line">var deserializedObject = JSON.parse(serialized);</span><br><span class="line">if (yesterday == deserializedObject.payDay)</span><br><span class="line">  alert(&quot;Yesterday was pay day... but not today...&quot;);</span><br><span class="line">else if (today == deserializedObject.payDay)</span><br><span class="line">  alert(&quot;Today is pay day! Yippie!!!&quot;);</span><br><span class="line">else</span><br><span class="line">  alert(&quot;Neither yesterday not today are pay days... I&apos;m broke!&quot;);</span><br></pre></td></tr></table></figure></p><p>正如预期的那样，结果是”Today is pay day! Yippie!!!”。但是我绝得给枚举的添加字段和方法真的很棒，我们可以这样做：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var SizeEnum = &#123;</span><br><span class="line">  SMALL: &#123;name: &quot;small&quot;, value: 1, code: &quot;S&quot;&#125;,</span><br><span class="line">  MEDIUM: &#123;name: &quot;medium&quot;, value: 2, code: &quot;M&quot;&#125;,</span><br><span class="line">  LARGE: &#123;name: &quot;large&quot;, value: 3, code: &quot;L&quot;&#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>但是可以说这不需要序列化和反序列化，我们只需要给额外的对象增加一个属性W:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var SizeEnum = &#123;</span><br><span class="line">  SMALL: 1,</span><br><span class="line">  MEDIUM: 2,</span><br><span class="line">  LARGE: 3,</span><br><span class="line">  properties: &#123;</span><br><span class="line">    1: &#123;name: &quot;small&quot;, value: 1, code: &quot;S&quot;&#125;,</span><br><span class="line">    2: &#123;name: &quot;medium&quot;, value: 2, code: &quot;M&quot;&#125;,</span><br><span class="line">    3: &#123;name: &quot;large&quot;, value: 3, code: &quot;L&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>这样我们能够取到枚举数的属性值，像这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mySize = SizeEnum.MEDIUM;</span><br><span class="line">var myCode = SizeEnum.properties[mySize].code; // myCode == &quot;M&quot;</span><br></pre></td></tr></table></figure></p><p>……不可否认优雅的方式。我想说的是，对于一个枚举值的序列化/反序列化的能力远比在实例上属性更重要。</p><p><strong><em>Object.freeze</em></strong><br>在类型安全的语言中，枚举的这些类型都是不变的，值得集合不改变也不做自身的常量值，在JavaScript中，任何时候我们都可以覆盖赋值所有的常数，或添加新的属性，如果你想避免这种情况，可以看一下<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze" target="_blank" rel="noopener">Objcet.freeze</a></p><p>Object.freeze() 方法可以冻结一个对象。冻结对象是指那些不能添加新的属性，不能修改已有属性的值，不能删除已有属性，以及不能修改已有属性的可枚举性、可配置性、可写性的对象。也就是说，这个对象永远是不可变的。该方法返回被冻结的对象。</p><p>听起来还真是一个很需要的方法，是吗~？</p><p>因为不是所有的浏览器都支持，你应该在使用前测试是否可用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if (Object.freeze)</span><br><span class="line">  Object.freeze(DaysEnum);</span><br></pre></td></tr></table></figure></p><p>好了，就到这~JavaScript中的枚举，写代码去！</p><p>第一次翻译外文，水平有限，如有误，请批正。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>undefined和null的区别</title>
      <link href="/undefined%E5%92%8Cnull%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/undefined%E5%92%8Cnull%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>js中的<code>undefined</code>和<code>null</code>是何等的相似，几乎是一样的，所以要说一下细微的区别，先动手操作一下，在浏览器Console中执行：<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undefined == null //返回值 true</span><br></pre></td></tr></table></figure></p><p>这说明一定情况下undefined和null可以转化成false。执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Number(undefined)  //返回值 NAN</span><br><span class="line"></span><br><span class="line">Number(null)  //返回值 0</span><br></pre></td></tr></table></figure></p><p>这也是说明undefined和null的区别所在。执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">typeof(undefined) //返回值 &quot;undefined&quot;</span><br><span class="line"></span><br><span class="line">typeof(null)  //返回值 &quot;object&quot;</span><br></pre></td></tr></table></figure></p><p>但是以上的区别在实际使用中又不是很明显。<br><strong>undefined</strong>表示”缺少值”，表示此处应该有一个值，但是还没有定义，这种情况下使用<code>undefined</code>，常用方法：</p><blockquote><ol><li>变量被声明了，但没有赋值时，就等于undefined</li><li>调用函数时，应该提供的参数没有提供，该参数等于undefined</li><li>对象没有赋值的属性，该属性的值为undefined</li><li>函数没有返回值，默认返回的是undefined</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var a;</span><br><span class="line">a // undefined</span><br><span class="line"></span><br><span class="line">function test(b)&#123;</span><br><span class="line">console.log(b)</span><br><span class="line">&#125;</span><br><span class="line">test(); //undefined</span><br><span class="line"></span><br><span class="line">var newObj = new Object();</span><br><span class="line">newObj.hello;</span><br><span class="line">// undefined</span><br><span class="line"></span><br><span class="line">var c = test();</span><br><span class="line">c //undefined</span><br></pre></td></tr></table></figure><p><strong>null</strong>表示”没有对象”，表示此处不应该有值，这种情况下使用<code>null</code>，常用方法：</p><blockquote><ol><li>作为函数的参数，表示该函数的参数不是对象</li><li>作为对象原型链的终点</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object.getPrototypeOf(Object.prototype)</span><br><span class="line">// null</span><br></pre></td></tr></table></figure><p>就酱~</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog无图片时添加随机thumbnail</title>
      <link href="/Blog%E6%97%A0%E5%9B%BE%E7%89%87%E6%97%B6%E6%B7%BB%E5%8A%A0%E9%9A%8F%E6%9C%BAthumbnail/"/>
      <url>/Blog%E6%97%A0%E5%9B%BE%E7%89%87%E6%97%B6%E6%B7%BB%E5%8A%A0%E9%9A%8F%E6%9C%BAthumbnail/</url>
      
        <content type="html"><![CDATA[<p>有的文章中没有添加如上这种banner图，所以呢，博客右侧的Recent的缩略图只会显示默认的图，<a id="more"></a>有时候连续五篇文章都没有图那就连续五张缩略图一样了，很不美观，不喜欢~所以就把它改成没有缩略图情况下随机变换缩略图，不多说，上代码：<br>首先需要通过Math对象生成出一个随机数，random方法可以生成一个0~1之间的随机数，得到的数再乘10，结果即为0~10之间的一个随机数，再通过round方法对该随机数进行四舍五入得到一个整数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var randomBgIndex = Math.round(Math.random() * 10);</span><br></pre></td></tr></table></figure></p><p>再声明一个数组用来存放缩略图的路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var thumbnailBg = []; </span><br><span class="line">thumbnailBg[0] = &quot;css/images/thumb-default-small.png&quot;; </span><br><span class="line">thumbnailBg[1] = &quot;css/images/thumb-default-small1.png&quot;; </span><br><span class="line">thumbnailBg[2] = &quot;css/images/thumb-default-small2.png&quot;; </span><br><span class="line">thumbnailBg[3] = &quot;css/images/thumb-default-small3.png&quot;; </span><br><span class="line">thumbnailBg[4] = &quot;css/images/thumb-default-small4.png&quot;; </span><br><span class="line">thumbnailBg[5] = &quot;css/images/thumb-default-small5.png&quot;; </span><br><span class="line">thumbnailBg[6] = &quot;css/images/thumb-default-small6.png&quot;; </span><br><span class="line">thumbnailBg[7] = &quot;css/images/thumb-default-small7.png&quot;; </span><br><span class="line">thumbnailBg[8] = &quot;css/images/thumb-default-small8.png&quot;; </span><br><span class="line">thumbnailBg[9] = &quot;css/images/thumb-default-small9.png&quot;; </span><br><span class="line">thumbnailBg[10] = &quot;css/images/thumb-default-small10.png&quot;; </span><br><span class="line">&lt;span style=&quot;background-image:url(&lt;%= thumbnailBg[randomBgIndex] %&gt;)&quot;  class=&quot;thumbnail-image thumbnail-none&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>&lt;% %&gt;这里是blog用的ejs语法<code>thumbnailBg[randomBgIndex]</code>用来取随机产生的值。</p><p>完整的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var randomBgIndex = Math.round(Math.random() * 10);</span><br><span class="line">var thumbnailBg = []; </span><br><span class="line">thumbnailBg[0] = &quot;css/images/thumb-default-small.png&quot;; </span><br><span class="line">thumbnailBg[1] = &quot;css/images/thumb-default-small1.png&quot;; </span><br><span class="line">thumbnailBg[2] = &quot;css/images/thumb-default-small2.png&quot;; </span><br><span class="line">thumbnailBg[3] = &quot;css/images/thumb-default-small3.png&quot;; </span><br><span class="line">thumbnailBg[4] = &quot;css/images/thumb-default-small4.png&quot;; </span><br><span class="line">thumbnailBg[5] = &quot;css/images/thumb-default-small5.png&quot;; </span><br><span class="line">thumbnailBg[6] = &quot;css/images/thumb-default-small6.png&quot;; </span><br><span class="line">thumbnailBg[7] = &quot;css/images/thumb-default-small7.png&quot;; </span><br><span class="line">thumbnailBg[8] = &quot;css/images/thumb-default-small8.png&quot;; </span><br><span class="line">thumbnailBg[9] = &quot;css/images/thumb-default-small9.png&quot;; </span><br><span class="line">thumbnailBg[10] = &quot;css/images/thumb-default-small10.png&quot;; </span><br><span class="line">&lt;span style=&quot;background-image:url(&lt;%= thumbnailBg[randomBgIndex] %&gt;)&quot;  class=&quot;thumbnail-image thumbnail-none&quot;&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p><p>OK~</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js通过hash方式数组去重</title>
      <link href="/js%E9%80%9A%E8%BF%87hash%E6%96%B9%E5%BC%8F%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
      <url>/js%E9%80%9A%E8%BF%87hash%E6%96%B9%E5%BC%8F%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<p>之前面试中遇到过数组去重的问题，方法很多，但是相对来说比较好的方式是通过hash方式来进行去重，这样的效率要高很多，以下是具体代码：<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var newArr = [1,2,2,3,3,3,3,4,4,5,5,6,6,7,8,8,8,9,9,9,9];</span><br><span class="line"></span><br><span class="line">function killArray(arr)&#123;</span><br><span class="line">var hash = &#123;&#125;,</span><br><span class="line">    result = [];</span><br><span class="line"></span><br><span class="line">for(var i=0; i&lt;arr.length; i++)&#123;</span><br><span class="line">if(!hash[arr[i]])&#123;</span><br><span class="line">    hash[arr[i]] = true;</span><br><span class="line">    result.push(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">killArray(newArr); //输出[1,2,3,4,5,6,7,8,9]</span><br></pre></td></tr></table></figure><p>完成~</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可继承的CSS属性</title>
      <link href="/%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84CSS%E5%B1%9E%E6%80%A7/"/>
      <url>/%E5%8F%AF%E7%BB%A7%E6%89%BF%E7%9A%84CSS%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<p>在网上搜集查找相对全一点的可继承的css属性：<br><a id="more"></a></p><ol><li><code>azimuth</code> 设置或检索当前声音的音场角度</li><li><code>border-collapse</code> 设置表格的边框是否被合并为一个单一的边框，还是像在标准的 HTML 中那样分开显示(separate collapse)</li><li><code>border-spacing</code> 设置相邻单元格的边框间的距离（length length）</li><li><code>caption-side</code> 规定表格标题的放置方式(top bottom)</li><li><code>color</code> 颜色(…)</li><li><code>cursor</code> 光标的类型(pointer help wait…)</li><li><code>direction</code> 文本方向设置(ltr rtl)</li><li><code>elevation</code> 设置或检索当前声音的音源仰角(angle below level above higher lower)</li><li><code>empty-cells</code> 设置是否显示表格中的空单元格(hide show)</li><li><code>font-family</code> 字体(…)</li><li><code>font-size</code> 字体大小</li><li><code>font-style</code> 字体风格(normal italic oblique)</li><li><code>font-variant</code> 设置小型大写字母的字体显示文本(normal small-caps)</li><li><code>font-weight</code> 粗细</li><li><code>font</code> 字体</li><li><code>letter-spacing</code> 字符间距</li><li><code>line-height</code> 行距</li><li><code>list-style-image</code> 使用图像替换列表项的标记</li><li><code>list-style-position</code> 放置列表标记的位置</li><li><code>list-style-type</code> 列表标记类型(none disc circle square decimal…)</li><li><code>list-style</code> 设置所有的列表属性</li><li><code>orphans</code> 打印中设置元素放在页面底部时所允许的最少文本行数(number)</li><li><code>pitch-range</code> 听觉中指定声音的变化(number)</li><li><code>pitch</code> 听觉中指定说话的声音(frequency x-low low medium high x-high)</li><li><code>quotes</code> 设置嵌套引用的引号类型(string string string string)</li><li><code>richness</code> 听觉中指定声音的丰富度(number)</li><li><code>speak-header</code> 指定如何处理表头文件(always once)</li><li><code>speak-numeral</code> 指定如何讲数字(digits continous)</li><li><code>speak-punctuation</code> 指定如何讲标点符号(none code)</li><li><code>speak</code> 指定内容用语音讲出(normal none spell-out)</li><li><code>speech-rate</code> 讲话的速度(number x-slow slow fast x-fast faster slower)</li><li><code>stress</code> 讲话声音中的强调(number)</li><li><code>text-align</code> 元素中的文本居中</li><li><code>text-indent</code> 文本首行的缩进(lenght %)</li><li><code>text-transform</code> 控制文本的大小写(none captalize uppercase lowercase)</li><li><code>visibility</code> 元素是否可见(visible hidden collapse)</li><li><code>voice-family</code> 特定声音库名称的优先级(specific-voice generic-voice)</li><li><code>volume</code> 讲出的音量(number % silent x-soft medium loud x-loud)</li><li><code>white-space</code> 设置处理元素中的空白(normal pre nowrap pre-wrap pre-line)</li><li><code>widows</code> 窗口</li><li><code>word-spacing</code> 单词字间距(normal length)</li></ol>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Kata: Title Case</title>
      <link href="/JavaScript-Kata-Title-Case/"/>
      <url>/JavaScript-Kata-Title-Case/</url>
      
        <content type="html"><![CDATA[<p>A string is considered to be in title case if each word in the string is either (a) capitalised (that is, only the first<br><a id="more"></a><br>letter of the word is in upper case) or (b) considered to be an exception and put entirely into lower case unless it is the first word, which is always capitalised.</p><p>Write a function that will convert a string into title case, given an optional list of exceptions (minor words). The list of minor words will be given as a string with each word separated by a space. Your function should ignore the case of the minor words string – it should behave in the same way even if the case of the minor word string is changed.</p><h4 id="Arguments-Haskell"><a href="#Arguments-Haskell" class="headerlink" title="Arguments (Haskell)"></a>Arguments (Haskell)</h4><p>First argument: space-delimited list of minor words that must always be lowercase except for the first word in the string.<br>Second argument: the original string to be converted.</p><h4 id="Arguments-Other-languages"><a href="#Arguments-Other-languages" class="headerlink" title="Arguments (Other languages)"></a>Arguments (Other languages)</h4><ul><li>First argument (required): the original string to be converted.</li><li>Second argument (optional): space-delimited list of minor words that must always be lowercase except for the first word in the string. The JavaScript/CoffeeScript tests will pass undefined when this argument is unused.</li></ul><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">titleCase(&apos;a clash of KINGS&apos;, &apos;a an the of&apos;) // should return: &apos;A Clash of Kings&apos;</span><br><span class="line">titleCase(&apos;THE WIND IN THE WILLOWS&apos;, &apos;The In&apos;) // should return: &apos;The Wind in the Willows&apos;</span><br><span class="line">titleCase(&apos;the quick brown fox&apos;) // should return: &apos;The Quick Brown Fox&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Kata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Kata: Find the odd int</title>
      <link href="/JavaScript-Kata-Find-the-odd-int/"/>
      <url>/JavaScript-Kata-Find-the-odd-int/</url>
      
        <content type="html"><![CDATA[<h4 id="Description"><a href="#Description" class="headerlink" title="Description:"></a>Description:</h4><p>Given an array, find the int that appears an odd number of times.<br><a id="more"></a><br>There will always be only one integer that appears an odd number of times.</p><h4 id="My-Solution"><a href="#My-Solution" class="headerlink" title="My Solution:"></a>My Solution:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function findOdd(A) &#123;</span><br><span class="line">  //happy coding!</span><br><span class="line">  var n = 0;</span><br><span class="line">  for(var i=0; i&lt;A.length; i++)&#123;</span><br><span class="line">      n = n^A[i];</span><br><span class="line">   &#125;</span><br><span class="line">  return n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Test-Cases"><a href="#Test-Cases" class="headerlink" title="Test Cases:"></a>Test Cases:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">function doTest(a, n) &#123;</span><br><span class="line">  console.log(&quot;A = &quot;, a);</span><br><span class="line">  console.log(&quot;n = &quot;, n);</span><br><span class="line">  Test.assertEquals(findOdd(a), n);</span><br><span class="line">&#125;</span><br><span class="line">Test.describe(&apos;Example tests&apos;, function() &#123;</span><br><span class="line">  doTest([20,1,-1,2,-2,3,3,5,5,1,2,4,20,4,-1,-2,5], 5);</span><br><span class="line">  doTest([1,1,2,-2,5,2,4,4,-1,-2,5], -1);</span><br><span class="line">  doTest([20,1,1,2,2,3,3,5,5,4,20,4,5], 5);</span><br><span class="line">  doTest([10], 10);</span><br><span class="line">  doTest([1,1,1,1,1,1,10,1,1,1,1], 10);</span><br><span class="line">  doTest([5,4,3,2,1,5,4,3,2,10,10], 1);</span><br><span class="line">&#125;);</span><br><span class="line">Test.describe(&apos;Random tests&apos;, function() &#123;</span><br><span class="line">  var i, sz, a, j, n;</span><br><span class="line">  for(i = 0; i &lt; 40; ++i) &#123;</span><br><span class="line">    sz = Math.round(Math.random()*1000+50);</span><br><span class="line">    if (!sz%2) &#123;</span><br><span class="line">      ++sz;</span><br><span class="line">    &#125;</span><br><span class="line">    a = [];</span><br><span class="line">    for(j = 0; j &lt; sz - 1; j+=2) &#123;</span><br><span class="line">      n = Math.round(Math.random()*1000);</span><br><span class="line">      a.push(n);</span><br><span class="line">      a.push(n);</span><br><span class="line">    &#125;</span><br><span class="line">    n = Math.round(Math.random()*1000);</span><br><span class="line">    a.push(n);</span><br><span class="line">    Test.assertEquals(findOdd(a), n);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Kata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Kata: Sort with Arrow Functions</title>
      <link href="/JavaScript-Kata-Sort-with-Arrow-Functions/"/>
      <url>/JavaScript-Kata-Sort-with-Arrow-Functions/</url>
      
        <content type="html"><![CDATA[<p>Sort and Order people by their age using Arrow Functions</p><a id="more"></a><ul><li>Task</li></ul><p>Your task is to order a list containg people objects by age using the new Javascript Arrow Functions</p><ul><li>Input</li></ul><p>Input will be a valid array with People objects containing an Age and Name</p><ul><li>Output</li></ul><p>Output will be a valid sorted array with People objects sorted by Age in ascending order</p><ul><li>Answer Is</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var OrderPeople = function(people)&#123;</span><br><span class="line">  return people.sort( (obj1,obj2) =&gt; obj1.age - obj2.age ); </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kata </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Kata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac Apache</title>
      <link href="/Mac-Apache/"/>
      <url>/Mac-Apache/</url>
      
        <content type="html"><![CDATA[<p>./configure –prefix=/usr/local/apache2 –enable-mods-shared=most</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>人称git核弹级 filter-branch </title>
      <link href="/%E4%BA%BA%E7%A7%B0git%E6%A0%B8%E5%BC%B9%E7%BA%A7%20filter-branch/"/>
      <url>/%E4%BA%BA%E7%A7%B0git%E6%A0%B8%E5%BC%B9%E7%BA%A7%20filter-branch/</url>
      
        <content type="html"><![CDATA[<p>都说“占小便宜吃大亏”,一点不假，听说GitHub Education的服务很不错，就用自己的edu.cn邮箱把GitHub的邮箱改了，接着去Get the Student Developer Pack。</p><a id="more"></a><p>静待回馈email，But！！！被拒绝了，原因是不认edu.cn的邮箱，好吧算了被拒绝也没什么好说的了，回到我的GitHub主页，顿时眼前一白，我的contributions图消失了，虽说不是很多但也是代表自己的contributions，好了不说废话了，解决竟是git的核弹级的 filter-branch。解决方法为全局性地更换电子邮件地址代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --commit-filter &apos;</span><br><span class="line">        if [ &quot;$GIT_AUTHOR_EMAIL&quot; = w@W-MacBook-Pro.local ];</span><br><span class="line">        then</span><br><span class="line">                GIT_AUTHOR_NAME=kingzez;</span><br><span class="line">                GIT_AUTHOR_EMAIL=kingzez@sina.com;</span><br><span class="line">                git commit-tree &quot;$@&quot;;</span><br><span class="line">        else</span><br><span class="line">                git commit-tree &quot;$@&quot;;</span><br><span class="line">        fi&apos; HEAD</span><br></pre></td></tr></table></figure><p>接下来解释一下代码含义：这次的一个失误让我也发现了一个容易忽视的问题，在重装Mac后忘记了配置本地的git config，所以造成了我本地不合法的git用户邮箱（<a href="mailto:w@W-MacBook-Pro.local" target="_blank" rel="noopener">w@W-MacBook-Pro.local</a>）其中上传的部分内容不在contributions上显示，（另外还有我的edu.cn的邮箱，针对我个人而言需要修改两次，）原因是contributions图是对应git用户配置显示的，这是我更改了邮箱后图消失的原因，Github系统找不到现在邮箱的git用户，所以我现在要操作的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;kingzez&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;kingzez@sina.com&quot;</span><br></pre></td></tr></table></figure><p>操作后为了安全起见，在检查一遍<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure></p><p>然后操作核弹级的<code>filter-branch --commit-filter</code> 这个必须要小心，千万要确认自己修改的邮箱是正确的，这个会遍历并重写所有提交历史到你新的邮箱上，命令完成后需要强推 <code>git push -f</code>，到Github主页刷新，我的contributions图又回来了，但是其中可能是以前的操作不当恢复的不是很完整，能恢复大部分已经很好了，原本只是改了一个邮箱，结果折腾这么一大圈。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何完全删除gitosis</title>
      <link href="/%E5%A6%82%E4%BD%95%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4gitosis/"/>
      <url>/%E5%A6%82%E4%BD%95%E5%AE%8C%E5%85%A8%E5%88%A0%E9%99%A4gitosis/</url>
      
        <content type="html"><![CDATA[<p>如果你是用apt安装的，那很简单apt-get purge gitosis就可以了。<br><a id="more"></a><br>如果你是用源码安装的，那么就麻烦一点了。首先删除/usr/local/bin下的文件或是/bin/下的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm gitosis*</span><br><span class="line">sudo rm easy*</span><br></pre></td></tr></table></figure></p><p>然后，到～/repositories目录下，删除gitosis-admin.git目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr  gitosis-admin.git</span><br></pre></td></tr></table></figure></p><p>最关键的是，你需要编辑用来安装gitosis的用户home目录下的一些东西，假如我用git这个用户安装，那么<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su – git</span><br><span class="line">vi .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>把含有gitosis相关的所有全部删除就ok了。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> gitosis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS添加和删除用户</title>
      <link href="/CentOS%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7/"/>
      <url>/CentOS%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h4 id="在CentOS下添加和删除用户命令："><a href="#在CentOS下添加和删除用户命令：" class="headerlink" title="在CentOS下添加和删除用户命令："></a>在CentOS下添加和删除用户命令：</h4><a id="more"></a><p>添加用户 test：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser test</span><br></pre></td></tr></table></figure></p><p>修改test密码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd test</span><br></pre></td></tr></table></figure></p><p>删除用户test:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel test</span><br></pre></td></tr></table></figure></p><p>删除用户以及用户目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -f test</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> CentOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Mac os ssh登陆CentOS中文乱码方法</title>
      <link href="/%E8%A7%A3%E5%86%B3Mac%20os%20ssh%E7%99%BB%E9%99%86CentOS%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E6%96%B9%E6%B3%95/"/>
      <url>/%E8%A7%A3%E5%86%B3Mac%20os%20ssh%E7%99%BB%E9%99%86CentOS%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="解决Mac-OS-ssh登陆CentOS中文乱码方法"><a href="#解决Mac-OS-ssh登陆CentOS中文乱码方法" class="headerlink" title="解决Mac OS ssh登陆CentOS中文乱码方法"></a>解决Mac OS ssh登陆CentOS中文乱码方法</h4><a id="more"></a><p>这种情况一般是终端和服务器的字符集不匹配，MacOSX下默认的是utf8字符集,所以编辑 /etc/ssh_config，注释此行“ SendEnv LANG LC_*”即可，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ssh_config，</span><br></pre></td></tr></table></figure></p><p>注释此行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SendEnv LANG LC_”</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
            <tag> Mac </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS下搭建git服务器</title>
      <link href="/CentOS%E4%B8%8B%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/CentOS%E4%B8%8B%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="CentOS下搭建git服务器"><a href="#CentOS下搭建git服务器" class="headerlink" title="CentOS下搭建git服务器"></a>CentOS下搭建git服务器</h4><ol><li>通过源码编译安装，git-1.9.5.tar.gz安装git</li></ol><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br><span class="line">wget http://git-core.googlecode.com/files/git-1.9.5.tar.gz</span><br><span class="line">tar zxvf git-1.9.5.tar.gz</span><br><span class="line">cd git-1.9.5</span><br><span class="line">make prefix=/usr/local all</span><br><span class="line">make prefix=/usr/local install</span><br></pre></td></tr></table></figure><p>root用户运行<br>查看版本号：git –version</p><ol start="2"><li>安装gitosis需要安装python，python-setuptools依赖</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install python python-setuptools</span><br><span class="line">git clone git://github.com/res0nat0r/gitosis.git</span><br><span class="line">cd gitosis</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><ol start="3"><li>在客户端开发本上生成公共密钥（必须）·用来初始化gitosis</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa #不需要密码,一路回车就行(在本地操作)</span><br><span class="line">scp ~/.ssh/id_rsa.pub root@xxx:/tmp/ # 上传你的ssh public key到服务器</span><br></pre></td></tr></table></figure><ol start="4"><li>初始化gitosis[服务器端]</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adduser git # 新增一个git用户(先添加用户组　groupadd git)</span><br><span class="line">su git # 切换倒git用户下</span><br><span class="line">gitosis-init &lt; /tmp/id_rsa.pub # id_rsa.pub是刚刚传过来的,注意放在/tmp目录主要是因为此目录权限所有人都有定权限的</span><br><span class="line">rm /tmp/id_rsa.pub # id_rsa.pub已经无用，可删除.</span><br></pre></td></tr></table></figure><ol start="5"><li>修改post-update权限(使客户端能访问)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 755 /home/git/repositories/gitosis-admin.git/hooks/post-update</span><br></pre></td></tr></table></figure><ol start="6"><li>获取并配置gitosis-admin [客户端]</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@xxx:gitosis-admin.git  # 切换到root用户并在本地执行，获取gitosis管理项目，将会产生一个gitosis-admin的目录，里面有配置文件gitosis.conf和一个 keydir 的目录，keydir目录主要存放git用户名</span><br><span class="line">vi gitosis-admin/gitosis.conf  # 编辑gitosis-admin配置文件</span><br></pre></td></tr></table></figure><p>如果无法git clone的话，可以使用<code>git clone git@xxx:/home/git/repositories/gitosis-admin.git</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* 在gitosis.conf底部增加</span><br><span class="line">[group 组名]</span><br><span class="line">writable = 项目名</span><br><span class="line">members = 用户  # 这里的用户名字 要和 keydir下的文件名字相一致</span><br><span class="line">* vi下按ZZ（大写）两次会执行自动保存并退出，完成后执行</span><br><span class="line">cd gitosis-admin</span><br><span class="line">git add .</span><br><span class="line">git commit -a -m “xxx xx” # 要记住的是，如果每次添加新文件必须执行git add .，或者git add filename，如果没有新加文件，只是进行修改的话就可以执行此句。</span><br><span class="line">* 修改了文件以后一定要PUSH到服务器，否则不会生效。</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><ol start="7"><li>新建项目<br>到此步gitosis基本已经配置完成，接下来新建项目到服务器的操作，向配置文件gitosis.<br>conf添加项目信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[group git-test] # 组名称</span><br><span class="line">writable = git-test # 项目名称</span><br><span class="line">members = xxx      # 用户名xxx一定要与客户端使用的用户名完全一样，否则无权限操作</span><br></pre></td></tr></table></figure><p><code>注意的是每次修改必须更新到git server服务器</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -a -m “添加新项目git-test，新项目的目录是git-test，该项目的成员是xxx“ # “”里的内容自定</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></p><ol start="8"><li>回到客户端开发本上创建项目git-test</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/user/git-test</span><br><span class="line">cd /home/user/git-test</span><br><span class="line">git init </span><br><span class="line">touch README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -a -m &quot;initalize git-test&quot;</span><br></pre></td></tr></table></figure><p>然后将新建项目放到git server服务器上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@xxx:git-test.git</span><br><span class="line">git push origin master /or/ git push -u origin master</span><br></pre></td></tr></table></figure></p><p>完成后会在终端中看到<br><code>gitosis-admin  gitosis-admin.git  git-test.git</code></p><p> <strong>!@!#!@</strong> 遇到的问题<br><code>ERROR:gitosis.serve.main:Repository read access denied</code><br>原因:gitosis.conf中的members与keydir中的用户名不一致，如gitosis中的members = Macbook@sth，但keydir中的公密名却叫Macbook.pub<br>解决:使keydir的名称与gitosis中members所指的名称一致。 改为members = Macbook 或 公密名称改为<a href="mailto:Macbook@sth.pub" target="_blank" rel="noopener">Macbook@sth.pub</a> </p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下brew安装运行redis</title>
      <link href="/Mac%E4%B8%8Bbrew%E5%AE%89%E8%A3%85%E8%BF%90%E8%A1%8Credis/"/>
      <url>/Mac%E4%B8%8Bbrew%E5%AE%89%E8%A3%85%E8%BF%90%E8%A1%8Credis/</url>
      
        <content type="html"><![CDATA[<p>打开终端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install redis</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~ w$ brew install redis</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/redis-3.0.0.yosemite.bottle</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring redis-3.0.0.yosemite.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start redis at login:</span><br><span class="line">    ln -sfv /usr/<span class="built_in">local</span>/opt/redis/*.plist ~/Library/LaunchAgents</span><br><span class="line">Then to load redis now:</span><br><span class="line">    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need launchctl, you can just run:</span></span><br><span class="line"><span class="string">    redis-server /usr/local/etc/redis.conf</span></span><br><span class="line"><span class="string">==&gt; Summary</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/redis/3.0.0: 9 files, 892K</span></span><br></pre></td></tr></table></figure></p><p>安装成功，启动redis<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure></p><p>如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">~ w$ redis-server</span><br><span class="line">3002:C 23 Sep 22:29:50.895 <span class="comment"># Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf</span></span><br><span class="line">3002:M 23 Sep 22:29:50.897 * Increased maximum number of open files to 10032 (it was originally <span class="built_in">set</span> to 2560).</span><br><span class="line">                _._</span><br><span class="line">           _.-``__ <span class="string">''</span>-._</span><br><span class="line">      _.-``    `.  `_.  <span class="string">''</span>-._           Redis 3.0.0 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ <span class="string">''</span>-._</span><br><span class="line"> (    <span class="string">'      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class="line"><span class="string"> |`-._`-...-` __...-.``-._|'</span>` _.-<span class="string">'|     Port: 6379</span></span><br><span class="line"><span class="string"> |    `-._   `._    /     _.-'</span>    |     PID: 3002</span><br><span class="line">  `-._    `-._  `-./  _.-<span class="string">'    _.-'</span></span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">'    _.-'</span>_.-<span class="string">'|</span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-'</span>_.-<span class="string">'    |           http://redis.io</span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-'</span>_.-<span class="string">'    _.-'</span></span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">'    _.-'</span>_.-<span class="string">'|</span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-'</span>_.-<span class="string">'    |</span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-'</span>_.-<span class="string">'    _.-'</span></span><br><span class="line">      `-._    `-.__.-<span class="string">'    _.-'</span></span><br><span class="line">          `-._        _.-<span class="string">'</span></span><br><span class="line"><span class="string">              `-.__.-'</span></span><br><span class="line"></span><br><span class="line">3002:M 23 Sep 22:29:50.898 <span class="comment"># Server started, Redis version 3.0.0</span></span><br><span class="line">3002:M 23 Sep 22:29:50.898 * The server is now ready to accept connections on port 6379</span><br></pre></td></tr></table></figure></p><p>服务端启动，测试客户端，打开新的终端窗口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~ w$ redis-cli</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure></p><p>ok.成功连接服务端，测试成功。</p><p>关闭redis<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli shutdown</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数自调用时函数表达式和函数声明的区别</title>
      <link href="/%E5%87%BD%E6%95%B0%E8%87%AA%E8%B0%83%E7%94%A8%E6%97%B6%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/%E5%87%BD%E6%95%B0%E8%87%AA%E8%B0%83%E7%94%A8%E6%97%B6%E5%87%BD%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E5%87%BD%E6%95%B0%E5%A3%B0%E6%98%8E%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h4 id="函数自调用时函数表达式和函数声明的区别"><a href="#函数自调用时函数表达式和函数声明的区别" class="headerlink" title="函数自调用时函数表达式和函数声明的区别"></a>函数自调用时函数表达式和函数声明的区别</h4><a id="more"></a><p>所有的function 开头的都是函数声明，在解释的时候会预处理放入堆栈<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function () &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//or</span><br><span class="line">function foo() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这种写法的函数声明不会被执行，直到被显示的调用 foo();<br>函数表达式则不同，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var foo = function() &#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">+function() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">-function() &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">(function() &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//以上即为函数表达式</span><br></pre></td></tr></table></figure></p><p>当以表达式(expression)开头时，语句被解释为一个表达式，自然而然会把后面的函数声明当做表达式去处理，这时候，如上，函数声明的部分会当做一个函数返回就像是<code>(return function() {})</code>。也只有这种情况才能在表达式的后面加括号来达到函数自调用的目的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">+function() &#123;</span><br><span class="line">  console.log(&apos;will be invoked&apos;);</span><br><span class="line">&#125;();</span><br><span class="line">-function() &#123;</span><br><span class="line">  console.log(&apos;will be invoked&apos;);</span><br><span class="line">&#125;();</span><br><span class="line">(function () &#123;</span><br><span class="line">  console.log(&apos;will be invoked&apos;);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">//注意下面的区别</span><br><span class="line">function() &#123;</span><br><span class="line">  console.log(&apos;won&apos;t be invoked&apos;);</span><br><span class="line">&#125;()</span><br><span class="line">//语句是函数声明，最后面的括号会被忽略</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/dayuoba/my_nodejs_book/blob/master/javascripts.md" target="_blank" rel="noopener">from dayuoba</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL写入中文乱码</title>
      <link href="/MySQL%E5%86%99%E5%85%A5%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
      <url>/MySQL%E5%86%99%E5%85%A5%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>####MySQL写入中文乱码<br><a id="more"></a><br> MySQL数据库出现中文乱码的原因一般是客户端、服务器、结果集、数据库的字符集不统一造成的，但不是这些都统一就不乱，其中在使用wamp的MySQL时会发现这些都统一还是乱码，全部统一为utf8,这时通过<figure class="highlight plain"><figcaption><span>variables like "%char%";``</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">mysql&gt; show variables like &quot;%char%&quot;;</span><br><span class="line">+--------------------------+-----------------------------------------------+</span><br><span class="line">| Variable_name            | Value                                         |</span><br><span class="line">+--------------------------+-----------------------------------------------+</span><br><span class="line">| character_set_client     | utf8                                          |</span><br><span class="line">| character_set_connection | utf8                                          |</span><br><span class="line">| character_set_database   | utf8                                          |</span><br><span class="line">| character_set_filesystem | binary                                        |</span><br><span class="line">| character_set_results    | utf8                                          |</span><br><span class="line">| character_set_server     | latin1                                        |</span><br><span class="line">| character_set_system     | utf8                                          |</span><br><span class="line">| character_sets_dir       | f:\wamp\bin\mysql\mysql5.6.17\share\charsets\ |</span><br><span class="line">+--------------------------+-----------------------------------------------+</span><br><span class="line">8 rows in set</span><br></pre></td></tr></table></figure></p><p>其中<code>character_set_server     | latin1</code>不统一，通过这条语句修改：set character_set_server=’utf8’; 情况不同，这条命令无法修改，<code>character_set_server</code>如果默认为latin1要永久更改，用set命令是行不通的，所以更改my.ini文件，在[mysqld]段落增加：<code>character_set_server=utf8</code>重启MySQL服务即可。 </p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOM 简单操作实现多选反选</title>
      <link href="/DOM%20%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E5%A4%9A%E9%80%89%E5%8F%8D%E9%80%89/"/>
      <url>/DOM%20%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E5%A4%9A%E9%80%89%E5%8F%8D%E9%80%89/</url>
      
        <content type="html"><![CDATA[<h4 id="DOM简单操作实现多选反选"><a href="#DOM简单操作实现多选反选" class="headerlink" title="DOM简单操作实现多选反选"></a>DOM简单操作实现多选反选</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line"> &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line"> &lt;title&gt;DOM&lt;/title&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form&gt;</span><br><span class="line">          Choose one:&lt;br&gt;</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby1&quot;&gt;  音乐</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby2&quot;&gt;  登山</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby3&quot;&gt;  游泳</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby4&quot;&gt;  阅读</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby5&quot;&gt;  打球</span><br><span class="line">          &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; id=&quot;hobby6&quot;&gt;  跑步 &lt;br&gt;</span><br><span class="line">          &lt;input type=&quot;button&quot; value = &quot;全选&quot; onclick = &quot;checkall();&quot;&gt;</span><br><span class="line">          &lt;input type=&quot;button&quot; value = &quot;全不选&quot; onclick = &quot;clearall();&quot;&gt;</span><br><span class="line">          &lt;p&gt;input your number，number1 to 6:&lt;/p&gt;</span><br><span class="line">          &lt;input id=&quot;wb&quot; name=&quot;wb&quot; type=&quot;text&quot; &gt;</span><br><span class="line">          &lt;input name=&quot;ok&quot; type=&quot;button&quot; value=&quot;确定&quot; onclick = &quot;checkone();&quot;&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function checkall()&#123;</span><br><span class="line">var hobby = document.getElementsByTagName(&quot;input&quot;);          </span><br><span class="line">for(i=0; i&lt;hobby.length; i++)</span><br><span class="line">if(hobby[i].type ==&quot;checkbox&quot;)&#123;</span><br><span class="line">    hobby[i].checked = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">function clearall()&#123;</span><br><span class="line">var hobby = document.getElementsByName(&quot;hobby&quot;);</span><br><span class="line">for(i = 0; i &lt; hobby.length; i++)&#123;</span><br><span class="line">    hobby[i].checked =false;</span><br><span class="line">&#125;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function checkone()&#123;</span><br><span class="line">var j=document.getElementById(&quot;wb&quot;).value;</span><br><span class="line">var hobby = document.getElementById(&quot;hobby&quot; + j);</span><br><span class="line">hobby.checked = true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用navigator.userAgent简单判断浏览器</title>
      <link href="/%E4%BD%BF%E7%94%A8navigator.userAgent%E7%AE%80%E5%8D%95%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/%E4%BD%BF%E7%94%A8navigator.userAgent%E7%AE%80%E5%8D%95%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="简单使用navigator-userAgent判断浏览器"><a href="#简单使用navigator-userAgent判断浏览器" class="headerlink" title="简单使用navigator.userAgent判断浏览器"></a>简单使用navigator.userAgent判断浏览器</h4><a id="more"></a><p><img src="http://i3.tietuku.com/6d8e1ba88486c179.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;navigator&lt;/title&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  function validB()&#123; </span><br><span class="line">  var u_agent = navigator.userAgent;</span><br><span class="line">  var b_name = &quot;不是想用的主流浏览器! &quot;</span><br><span class="line">  if (u_agent.indexOf(&quot;Firefox&quot;)&gt;-1) &#123;</span><br><span class="line">  b_name=&quot;Firefox&quot;;</span><br><span class="line">  &#125;else if (u_agent.indexOf(&quot;Chrome&quot;)&gt;-1) &#123;</span><br><span class="line">  b_name=&quot;Chrome&quot;;</span><br><span class="line">  &#125;else if (u_agent.indexOf(&quot;MSIE&quot;)&gt;-1 &amp;&amp; u_agent.indexOf(&quot;Trident&quot;)&gt;-1) &#123;</span><br><span class="line">  b_name=&quot;IE(8-10)&quot;;</span><br><span class="line">  &#125;;</span><br><span class="line">  document.write(&quot;浏览器：&quot;+b_name +&apos;&lt;br&gt;&apos;);</span><br><span class="line">  document.write(&quot;u_agent:&quot; +u_agent);</span><br><span class="line">  &#125; </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;form&gt;</span><br><span class="line">     &lt;input type=&quot;button&quot; value=&quot;查看浏览器&quot; onclick=&quot;validB()&quot;  &gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git push冲突时解决方法</title>
      <link href="/git%20push%E5%86%B2%E7%AA%81%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/git%20push%E5%86%B2%E7%AA%81%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="git-push冲突时解决方法"><a href="#git-push冲突时解决方法" class="headerlink" title="git push冲突时解决方法"></a><code>git push</code>冲突时解决方法</h4><a id="more"></a><p>在使用git中多人同时修改一个文件时，比如A修改test文件并<code>push</code>到远程仓库，B也修改test文件并<code>push</code>到远程，这时B<code>git push</code>会提示相应的冲突错误。  </p><p>解决方法：</p><ul><li>第一步：从项目仓库中，创建一个新的分支，并测试合并请求中的改动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br></pre></td></tr></table></figure><ul><li>第二步: 创建本地分支local用来存放远程仓库的最新分支</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b local origin/develop</span><br></pre></td></tr></table></figure><ul><li>第三步：进行合并，手动修改合并后的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge develop</span><br></pre></td></tr></table></figure><ul><li>第四步：修改后按照正常的git流程进行操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m &quot;latest&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>OK~</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git创建ssh key</title>
      <link href="/git%E5%88%9B%E5%BB%BAssh%20key/"/>
      <url>/git%E5%88%9B%E5%BB%BAssh%20key/</url>
      
        <content type="html"><![CDATA[<h4 id="一、设置Git的username-，email："><a href="#一、设置Git的username-，email：" class="headerlink" title="一、设置Git的username ，email："></a>一、设置Git的username ，email：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;kingzez&quot;</span><br><span class="line">$ git config --global user.email &quot;kingzez@sina.com&quot;</span><br></pre></td></tr></table></figure><h4 id="二、如何针对每个repo单独设定username和email？"><a href="#二、如何针对每个repo单独设定username和email？" class="headerlink" title="二、如何针对每个repo单独设定username和email？"></a>二、如何针对每个repo单独设定username和email？</h4><p>有时，你可能想为不同的 repo（比如公司的项目和个人项目）设置不同的 commit 信息，很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &quot;kingzez&quot;</span><br><span class="line">git config user.email &quot;kingzez@sina.com&quot;</span><br></pre></td></tr></table></figure></p><p>可以看出，在使用 git config 时，默认修改的是当前 repo 的配置，如果添加 –global 则会修改全局的配置。<br><a id="more"></a></p><h4 id="三、创建ssh密匙过程"><a href="#三、创建ssh密匙过程" class="headerlink" title="三、创建ssh密匙过程"></a>三、创建ssh密匙过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.查看是否已经有了ssh密钥：cd ~/.ssh</span><br><span class="line">   如果没有密钥则不会有此文件夹，有则不影响，备份删除都可以</span><br><span class="line">2.生存密钥：</span><br><span class="line">   $ ssh-keygen -t rsa -C “kingzez@sina.com”</span><br><span class="line">   3个回车，密码为空。</span><br><span class="line">3.操作完成生成 id_rsa和id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="三、添加ssh-key-到github-或coding等。"><a href="#三、添加ssh-key-到github-或coding等。" class="headerlink" title="三、添加ssh key 到github 或coding等。"></a>三、添加ssh key 到github 或coding等。</h4>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime 常用插件</title>
      <link href="/Sublime%20%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/Sublime%20%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<ul><li>Package Control     — 安装包管理</li><li>Emmet     — 编码快捷键，前端必备</li><li>JS Format     — JS格式化</li><li>JSHint Gutter - js语法检测<a id="more"></a></li><li>SideBarEnhancements    —  右键菜单增强插件</li><li>Nodejs  — nodejs 提示</li><li>SublimeTmpl  —模板</li><li>Markdown</li><li>BracketHighlight - &lt;&gt;补全</li><li>snippets - 代码补全  </li><li>Goto-CSS-Declaration - css定位</li><li>HTML-CSS-JS Prettify - 代码格式化</li><li>Terminal - 打开终端</li><li>Livereload - 实时加载更新修改</li><li>Compare Side-By-Side - compare sublime版</li><li>ConvertToUTF8 utf8转换</li><li>afterglow 主题</li><li>material 主题</li></ul>]]></content>
      
      
      <categories>
          
          <category> Sublime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于js的一部分书单</title>
      <link href="/%E5%85%B3%E4%BA%8Ejs%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E4%B9%A6%E5%8D%95/"/>
      <url>/%E5%85%B3%E4%BA%8Ejs%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E4%B9%A6%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<ul><li>PPK ON Javascript</li><li>Javascript权威指南</li><li>Js语言精粹<a id="more"></a></li><li>MEAN Web开发</li><li>Nodejs实战</li><li>Nodejs项目实践·构建可扩展的Web应用</li></ul>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MEAN Web 开发</title>
      <link href="/MEAN%20Web%20%E5%BC%80%E5%8F%91/"/>
      <url>/MEAN%20Web%20%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>####什么是MEAN ？<br>“MEAN是基于javascript现代web应用全栈开发工具。”</p><p>这是MEAN的作者对它下的定义。可以看出MEAN是瞄准给前后端的Javascript工程师使用的，这个工具集主要包括下面几个部分<br><a id="more"></a></p><ul><li>MongoDB</li><li>Express</li><li>AngularJS</li><li>NodeJS</li></ul><p>数据库使用MongoDB，Web框架使用Express，前端框架使用AngularJS，在NodeJS的平台下四者配合开发的Web应用，全Javascript的Web开发架构。</p>]]></content>
      
      
      <categories>
          
          <category> MEAN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MEAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Mac下Sublime Text 2/3以新窗口打开文件</title>
      <link href="/%E8%A7%A3%E5%86%B3Mac%E4%B8%8BSublime%20Text%202%EF%80%A23%E4%BB%A5%E6%96%B0%E7%AA%97%E5%8F%A3%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6/"/>
      <url>/%E8%A7%A3%E5%86%B3Mac%E4%B8%8BSublime%20Text%202%EF%80%A23%E4%BB%A5%E6%96%B0%E7%AA%97%E5%8F%A3%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="sublime-text-2-x："><a href="#sublime-text-2-x：" class="headerlink" title="sublime text 2.x："></a>sublime text 2.x：</h4><p>具体设置：Preferences -&gt; Settings – Default -&gt; 搜索open_files_in_new_window，将其true 改为 false 后重启一下sublime text 2<br><a id="more"></a></p><h4 id="sublime-text-3-x："><a href="#sublime-text-3-x：" class="headerlink" title="sublime text 3.x："></a>sublime text 3.x：</h4><p>具体设置：Preferences -&gt; Settings – User -&gt; 添加 “open_files_in_new_window”: false,<br>重启一下sublime text 3</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac OSX 10.10下使用Homebrew安装MongoDB及启动连接</title>
      <link href="/Mac%20OSX%2010.10%E4%B8%8B%E4%BD%BF%E7%94%A8Homebrew%E5%AE%89%E8%A3%85MongoDB%E5%8F%8A%E5%90%AF%E5%8A%A8%E8%BF%9E%E6%8E%A5/"/>
      <url>/Mac%20OSX%2010.10%E4%B8%8B%E4%BD%BF%E7%94%A8Homebrew%E5%AE%89%E8%A3%85MongoDB%E5%8F%8A%E5%90%AF%E5%8A%A8%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>Homebrew是Mac OSX下一个包依赖管理工具，用它来安装软件非常的方便只需要brew install ***，不用再操心安装过程中软件的依赖问题。<br><a id="more"></a></p><p>###Homebrew 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;</span><br></pre></td></tr></table></figure><p>###MongoDB 安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mongodb</span><br></pre></td></tr></table></figure><p>等待安装，我的是之前下载过所以直接安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~ w<span class="variable">$brew</span> install mongodb</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/mongodb-3.0.2.yosemite.bott</span><br><span class="line">Already downloaded: /Library/Caches/Homebrew/mongodb-3.0.2.yosemite.bottle.tar.gz</span><br><span class="line">==&gt; Pouring mongodb-3.0.2.yosemite.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start mongodb at login:</span><br><span class="line">    ln -sfv /usr/<span class="built_in">local</span>/opt/mongodb/*.plist ~/Library/LaunchAgents</span><br><span class="line">Then to load mongodb now:</span><br><span class="line">    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mongodb.plist</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need launchctl, you can just run:</span></span><br><span class="line"><span class="string">    mongod --config /usr/local/etc/mongod.conf</span></span><br><span class="line"><span class="string">==&gt; Summary</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/mongodb/3.0.2: 17 files, 153M</span></span><br></pre></td></tr></table></figure></p><p>需要测试是否安装成功，用mongod命令进行测试，执行mongod后会返回一顿错误、<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~ w<span class="variable">$mongod</span></span><br><span class="line">2015-07-16T22:45:19.706+0800 I STORAGE  [initandlisten] exception <span class="keyword">in</span> initAndListen: 29 Data directory /data/db not found., terminating</span><br><span class="line">2015-07-16T22:45:19.706+0800 I CONTROL  [initandlisten] dbexit:  rc: 100</span><br></pre></td></tr></table></figure></p><p>错误信息是dbpath /data/db不存在，需要创建/data/db这个目录或者使用–dbpath参数项指定一个已经存在的目录，dbpath /data/db这个目录是用来存储MongoDB的数据文件，既然不存在我们就创建<code>/data/db</code>这个目录或者使用<code>--dbpath</code>参数项指定一个已经存在的目录。<br>首先在终端输入<code>cd /</code>命令返回到磁盘根目录<br>然后输入<code>mkdir -p /data/db</code>创建<code>/data/db</code><br>再次输入<code>mongod</code>命令启动MongoDB的服务<br>又返回一堆错误信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/ w<span class="variable">$mongod</span></span><br><span class="line">2015-07-16T22:55:10.232+0800 I STORAGE  [initandlisten] exception <span class="keyword">in</span> initAndListen: 98 Unable to create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod instance already running?, terminating</span><br><span class="line">2015-07-16T22:55:10.232+0800 I CONTROL  [initandlisten] dbexit:  rc: 100</span><br></pre></td></tr></table></figure><p>不能创建/打开/data/db/mongod.lock这个文件，原因是Permission denied（权限拒绝），原因是当前用户执行mongod这个命令时，对/data/db没有操作权限，给/data/db加上权限。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R  当前登录的用户名 /data</span><br></pre></td></tr></table></figure></p><p>再次在终端输入<code>mongod</code>启动MongoDB的服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/ w<span class="variable">$sudo</span> chown -R w /data</span><br><span class="line">/ w<span class="variable">$mongod</span></span><br><span class="line">2015-07-16T22:55:49.058+0800 I JOURNAL  [initandlisten] journal dir=/data/db/journal</span><br><span class="line">2015-07-16T22:55:49.059+0800 I JOURNAL  [initandlisten] recover : no journal files present, no recovery needed</span><br><span class="line">2015-07-16T22:55:49.084+0800 I JOURNAL  [durability] Durability thread started</span><br><span class="line">2015-07-16T22:55:49.084+0800 I JOURNAL  [journal writer] Journal writer thread started</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] MongoDB starting : pid=2473 port=27017 dbpath=/data/db 64-bit host=W-MacBook-Pro.local</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] db version v3.0.2</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] git version: nogitversion</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] build info: Darwin yosemitevm.local 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] allocator: system</span><br><span class="line">2015-07-16T22:55:49.085+0800 I CONTROL  [initandlisten] options: &#123;&#125;</span><br><span class="line">2015-07-16T22:55:49.086+0800 I INDEX    [initandlisten] allocating new ns file /data/db/local.ns, filling with zeroes...</span><br><span class="line">2015-07-16T22:55:49.423+0800 I STORAGE  [FileAllocator] allocating new datafile /data/db/local.0, filling with zeroes...</span><br><span class="line">2015-07-16T22:55:49.423+0800 I STORAGE  [FileAllocator] creating directory /data/db/_tmp</span><br><span class="line">2015-07-16T22:55:50.063+0800 I STORAGE  [FileAllocator] <span class="keyword">done</span> allocating datafile /data/db/local.0, size: 64MB,  took 0.639 secs</span><br><span class="line">2015-07-16T22:55:50.412+0800 I NETWORK  [initandlisten] waiting <span class="keyword">for</span> connections on port 27017</span><br><span class="line">2015-07-16T22:56:05.218+0800 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:49580 <span class="comment">#1 (1 connection now open)</span></span><br></pre></td></tr></table></figure></p><p>启动成功了，然后再打开一个新的终端窗口输入<code>mongo</code>命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/ w<span class="variable">$mongo</span></span><br><span class="line">MongoDB shell version: 3.0.2</span><br><span class="line">connecting to: <span class="built_in">test</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p><p>OK 安装完成,可以使用。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> homebrew </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github的静态博客用万网解析</title>
      <link href="/github%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%94%A8%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90/"/>
      <url>/github%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%94%A8%E4%B8%87%E7%BD%91%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>网上关于github的解析都是一带而过，下面详细说一下步骤<br><a id="more"></a><br>1.首先添加解析记录类型A，主机类型默认不填，记录值填写username.github.io所ping<br>的值。<br>2.添加解析记录类型CNAME，主机类型为WWW，记录值填写你的username.github.io<br>3.最后在你的静态博客根目录下创建CNAME文件，文件内容填写你所购买的域名。<br>解析完成。<br><img src="http://i1.tietuku.com/0b9e9b3a72812b5b.png" alt>   </p><p><img src="http://i3.tietuku.com/9096e368c62a60c8.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IE6常见Bug</title>
      <link href="/IE6%E5%B8%B8%E8%A7%81Bug/"/>
      <url>/IE6%E5%B8%B8%E8%A7%81Bug/</url>
      
        <content type="html"><![CDATA[<p>1、IE6怪异解析之padding与border算入宽高<br>原因：未加文档声明造成非盒模型解析<br>解决方法：加入文档声明<br><a id="more"></a><br>2、IE6在块元素、左右浮动、设定<br>marin时造成margin双倍（双边距）<br>解决方法：<code>display:inline</code></p><p>3、以下三种其实是同一种bug，其实也不算是个bug，举个例子：父标签高度20，子标签11，垂直居中，20-11=9，9要分给文字的上面与下面，怎么分？IE6就会与其它的不同，所以，尽量避免。</p><p>1）字体大小为奇数之边框高度少1px<br>解决方法：字体大小设置为偶数或<code>line-height</code>为偶数<br>2）<code>line-height</code>，文本垂直居中差1px<br>解决方法：<code>padding-top</code>代替<code>line-height</code>居中，或<code>line-height</code>加1或减1<br>3）与父标签的宽度的奇偶不同的居中造成1px的偏离<br>解决方法：如果父标签是奇数宽度，则子标签也用奇数宽度;如果是父标签偶数宽度，则子标签也用偶数宽度</p><p>4、内部盒模型超出父级时，父级被撑大<br>解决方法：父标签使用<code>overflow:hidden;</code></p><p>5、<code>line-height</code>默认行高<code>bug</code><br>解决方法：<code>line-height</code>设值</p><p>6、行标签之间会有一小段空白<br>解决方法：<code>float</code>或结构并排(可读性差，不建议)</p><p>7、标签高度无法小于19px<br>解决方法：<code>overflow: hidden;</code></p><p>8、左浮元素<code>margin-bottom</code>失效<br>解决方法：显示设置高度 or 父标签设置_padding-bottom代替子标签的margin-bottom or 再放个标签让父标签浮动，子标签<br><code>margin- bottom，</code>即(<code>margin-bottom</code>与<code>float</code>不同时作用于一个标签)</p><p>9、img于块元素中，底边多出空白</p><p>解决方法：父级设置<code>overflow: hidden;</code> 或<code>img { display: block; }</code>或<code>_margin: -5px;</code></p><p>10、li之间会有间距<br>解决方法：<code>float: left</code>;</p><p>11、块元素中有文字及右浮动的行元素，行元素换行<br>解决方法：将行元素置于块元素内的文字前</p><p>12、<code>position</code>下的<code>left，bottom</code>错位<br>解决方法：为父级(relative层)设置宽高或添加*zoom:1;</p><p>13、子级中有设置<code>position</code>，则父级<code>overflow</code>失效<br>解决方法：为父级设置<code>position:relative</code>;</p>]]></content>
      
      
      <categories>
          
          <category> IE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IE6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IE6 PNG透明问题</title>
      <link href="/IE6%20PNG%E9%80%8F%E6%98%8E%E9%97%AE%E9%A2%98/"/>
      <url>/IE6%20PNG%E9%80%8F%E6%98%8E%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>对于IE6 png 透明，解决方法很多，本文介绍的是博主经常用的的两种方法：<br><a id="more"></a></p><p>####第一种是：Alpha（阿尔法）修复法<br>复制并粘贴iepngfix.htc和blank.gif到您的网站的文件夹。</p><p>CSS选择器，必须包括标签/元素对你想要PNG支持——基本上，给它一个逗号分隔的列表标记的使用。它还必须包括正确的路径。HTC相对于HTML文档位置（不相关的CSS文件！）。例如，可能像这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">img, div, a, input &#123; behavior: url(/css/resources/iepngfix.htc) &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>使用起来非常简单，就这样，就可以达到IE6下png透明<br><a href="http://www.twinhelix.com/css/iepngfix/iepngfix.zip" target="_blank" rel="noopener">iepngfix.htc blank.gif下载包</a></p><p>####第二种是：Unit PNG Fix </p><ul><li>1.非常小的javascript文件:1kb!</li><li>2.解决因为IE的滤镜属性所带来的影响.</li><li>3.无论是img元素或background-image属性,都能有效果.</li><li>4.在加载页面之前就能自动运行.或者就一丁点的元素.</li><li>5.允许自动高宽.</li><li>6.使用起来超级简单.<br>如何使用:<br>1).下载zip 然后,添加下面的代码到你页面的头部.(一定要确保路径的正确)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!--[if lt IE 7]&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot; src=&quot;unitpngfix.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;![endif]--&gt;</span><br></pre></td></tr></table></figure></li></ul><p>2).添加clear.gif到你的images 文件夹中.在js文件中,修改”var clear=”images/clear.gif” 路径,为你存放clear.gif的文件路径. </p><p>3). 你的整个项目的png图片都实现了透明效果.的确非常简单吧?就2个步骤,就实现了整个站点所有png的透明效果.<br><a href="http://labs.unitinteractive.com/downloads/unitpngfix.zip" target="_blank" rel="noopener">Uint PNG Fix下载包</a>    </p>]]></content>
      
      
      <categories>
          
          <category> IE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IE6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
